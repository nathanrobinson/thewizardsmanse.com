{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/ads.css","path":"css/ads.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/ads.js","path":"js/ads.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"source/images/2012/11/BlogHeader.png","path":"images/2012/11/BlogHeader.png","modified":0,"renderable":0},{"_id":"source/images/2012/11/Redbud2.jpg","path":"images/2012/11/Redbud2.jpg","modified":0,"renderable":0},{"_id":"source/images/2013/12/Apps.jpg","path":"images/2013/12/Apps.jpg","modified":0,"renderable":0},{"_id":"source/images/2013/12/Data.jpg","path":"images/2013/12/Data.jpg","modified":0,"renderable":0},{"_id":"source/images/2013/12/LaunchApp.zip","path":"images/2013/12/LaunchApp.zip","modified":0,"renderable":0},{"_id":"source/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg","path":"images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg","modified":0,"renderable":0},{"_id":"source/images/2016/01/Antenna_1.jpeg","path":"images/2016/01/Antenna_1.jpeg","modified":0,"renderable":0},{"_id":"source/images/2016/01/Antenna_2.jpeg","path":"images/2016/01/Antenna_2.jpeg","modified":0,"renderable":0},{"_id":"source/images/2016/01/Antenna_3.jpeg","path":"images/2016/01/Antenna_3.jpeg","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/images/2013/12/Properties.jpg","path":"images/2013/12/Properties.jpg","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg","path":"images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/2016/01/Antenna_3.jpg","path":"images/2016/01/Antenna_3.jpg","modified":0,"renderable":0},{"_id":"source/images/2016/01/Antenna_1.jpg","path":"images/2016/01/Antenna_1.jpg","modified":0,"renderable":0},{"_id":"source/images/2016/01/Antenna_2.jpg","path":"images/2016/01/Antenna_2.jpg","modified":0,"renderable":0},{"_id":"source/images/2012/11/Redbud.jpg","path":"images/2012/11/Redbud.jpg","modified":0,"renderable":0},{"_id":"source/images/2012/11/Redbud2.bmp","path":"images/2012/11/Redbud2.bmp","modified":0,"renderable":0}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1491081788000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1491081788000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1491081788000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1491081788000},{"_id":"themes/landscape/_config.yml","hash":"110f46f5062a232402377679126632381184fec1","modified":1491081788000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1491081788000},{"_id":"source/_posts/2012-11-10-my-first-rant.md","hash":"28126804be8c726022c445a78185cca9f31b039d","modified":1491081788000},{"_id":"source/_posts/2012-11-22-image-processing-part-1.md","hash":"d669432f4704fd8e6797803802eb6e0db8772e81","modified":1491081788000},{"_id":"source/_posts/2013-02-02-image-processing-part-2.md","hash":"d3263196e568a7707fad23e06d79fc8b67dfaaab","modified":1491081788000},{"_id":"source/_posts/2013-03-03-fun-with-knockout-js.md","hash":"d8384733849f88a53fc7cd6735b538ce2484542f","modified":1491081788000},{"_id":"source/_posts/2013-09-03-automatic-paging-with-knockout-data-bindings.md","hash":"f76945f106d85b8a7cf7033f21ffe43641c582d2","modified":1491081788000},{"_id":"source/_posts/2013-12-15-multiple-app-accounts-using-bluestacks.md","hash":"a86674a1ca173585a1fe2e280bb51da83ce99c30","modified":1491081788000},{"_id":"source/_posts/2015-04-21-congress-for-sale.md","hash":"ecceab94e8c01980f03357612a095a054abef38a","modified":1491081788000},{"_id":"source/_posts/2016-01-17-fun-with-hdtv-antennas.md","hash":"7419a49f2716388ec977cc0ef962d2cb342c8757","modified":1491081788000},{"_id":"source/_posts/2016-03-01-sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence.md","hash":"4e7d394063751d3cd6cd116bf3dde8f89b775958","modified":1491081788000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1491081788000},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1491081788000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1491081788000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1491081788000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1491081788000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1491081788000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1491081788000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1491081788000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1491081788000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1491081788000},{"_id":"themes/landscape/layout/layout.ejs","hash":"18c065e8757e788be086750e7a16bbf9ed1fcf72","modified":1491171114000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1491081788000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1491081788000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1491081788000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"29eb04742de1828033622044678dbd8bc24b83a7","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"9829a979749cab205c53225e924051dd54e0ceea","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"f4a4cde095792767da605d47be9b893f64429e4a","modified":1491082453000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/ads.ejs","hash":"eb308117c9e2d5d94d7a847874eb93da7ec3a6e5","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1491081788000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1491081788000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1491081788000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1491081788000},{"_id":"themes/landscape/source/css/ads.css","hash":"9468df84f95b65145fb84f97a8a7075f20c4cb8a","modified":1491081788000},{"_id":"themes/landscape/source/css/style.styl","hash":"de3211d914441a70d4d1625414e7ad8af6489206","modified":1491176031000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1491081788000},{"_id":"themes/landscape/source/js/ads.js","hash":"7e7862558042e506d22b7dc34e40c0f6dfb515c1","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1491081788000},{"_id":"themes/landscape/source/js/script.js","hash":"1045492bcf3e48f54389461619cd274f536ba88b","modified":1491082603000},{"_id":"source/images/2012/11/BlogHeader.png","hash":"5be2d1638a7616e540776b848a18117200d10c07","modified":1491081788000},{"_id":"source/images/2012/11/Redbud2.jpg","hash":"11a1c7208bb27dc419497e3a09ae8bfbbbad150c","modified":1491081788000},{"_id":"source/images/2013/12/Apps.jpg","hash":"8e39fb7a47a0eed9e86256c12d4d214cbaa9a775","modified":1491081788000},{"_id":"source/images/2013/12/Data.jpg","hash":"2d3148c5cf76e587ad9b671a333cc48f94b2a03e","modified":1491081788000},{"_id":"source/images/2013/12/LaunchApp.zip","hash":"bc28242bfd7e564ff08a9509a96d5095ba331cac","modified":1491081788000},{"_id":"source/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg","hash":"bfa38353abab3db31764f779fba6f1e158c450fe","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_1.jpeg","hash":"64c310ee29a608963db97a4dae2a17ad60e7ac98","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_2.jpeg","hash":"180cc145715ae5e9c80c5779e1e1e7159348d8b4","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_3.jpeg","hash":"dd9fb2ec687466d061027ba89384fac35eefbd3d","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1491081788000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"e3a04fe9ae4da61453a4128ed1df4ad1020961e5","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"bd91c49222180c2edd620517c6bbb9373309fe6a","modified":1491177280000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1491081788000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1491081788000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"e305d7b4c013efa1383ca5ea6717abeb7bbbb6fb","modified":1491176719000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1491081788000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1491081788000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1491081788000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1491081788000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1491081788000},{"_id":"source/images/2013/12/Properties.jpg","hash":"ea7584f93d5804f20f626bd3ec900105a7c261bb","modified":1491081788000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1491081788000},{"_id":"source/images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg","hash":"6932814bea7d4b46874b1975d6cee7953093bffe","modified":1491081788000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1491081788000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"a4466de4d8879c29b533b9d4747338535c4be538","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_3.jpg","hash":"b02b654d59377da6163cf4a199ff8f00d65ae9b1","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_1.jpg","hash":"1a739aa0dbe2cd3b8f1da0233b0a80f86ed3afd6","modified":1491081788000},{"_id":"source/images/2016/01/Antenna_2.jpg","hash":"42f269b1275de143c3099cb5d8ff5f24f9b792ba","modified":1491081788000},{"_id":"source/images/2012/11/Redbud.jpg","hash":"ca3455bfa426f1565313f4883c9edc0b150d8529","modified":1491082090000},{"_id":"source/images/2012/11/Redbud2.bmp","hash":"dd5507b4027f9d09081b150fa21e9171cdbfc51b","modified":1491081788000},{"_id":"public/congress-for-sale/index.html","hash":"7978fad226b2f09a3703ce12738dc66a8759b2c1","modified":1545679986423},{"_id":"public/multiple-app-accounts-using-bluestacks/index.html","hash":"64166ce6caa0cc26910664ef42b4736409233caa","modified":1545679986431},{"_id":"public/image-processing-part-2/index.html","hash":"37291935d35d1af7a6c5bd6deeb2484f9031e3fe","modified":1545679986423},{"_id":"public/my-first-rant/index.html","hash":"f87e8a67c39f8f59352373c893ef048398c046b1","modified":1545679986423},{"_id":"public/archives/index.html","hash":"ff93f18e012fa3cd3697d75841d5e5c489930081","modified":1545679986424},{"_id":"public/archives/2012/index.html","hash":"9e139f07e2586ae89720333fe5355485b68ce90b","modified":1545679986424},{"_id":"public/archives/2012/11/index.html","hash":"ad77eda357bc78f454964f2d631e045b56f48a66","modified":1545679986424},{"_id":"public/archives/2013/index.html","hash":"f7d9ec1a66ca5610b1ef20d31ed911d7eef1d2dd","modified":1545679986424},{"_id":"public/archives/2013/02/index.html","hash":"46a13868b349efa27f4a91f1cb9768e2374bad24","modified":1545679986424},{"_id":"public/archives/2013/03/index.html","hash":"f53082026d24b25a764cbb44e0f702aa861ac36b","modified":1545679986424},{"_id":"public/archives/2013/09/index.html","hash":"6a69b575d348e6e9f1ccd3d6880be9dfcfec33d8","modified":1545679986424},{"_id":"public/archives/2013/12/index.html","hash":"fe5795b4697b671693757653b6243dde48f4a49e","modified":1545679986424},{"_id":"public/archives/2015/index.html","hash":"808a1a7b6ae9aafa22758379d2d1249c720010d9","modified":1545679986424},{"_id":"public/archives/2015/04/index.html","hash":"52a7a59e9114007cf93e0096e0f3c6c60b80dd47","modified":1545679986424},{"_id":"public/archives/2016/index.html","hash":"e2d6c4cb6098ceb1e2209ffb7a5aa5b2e8d901a8","modified":1545679986424},{"_id":"public/archives/2016/01/index.html","hash":"d873e592dfa6c998ffa128450285e8101e3f5bec","modified":1545679986424},{"_id":"public/archives/2016/03/index.html","hash":"7a43645dd8b11997a012cbd1363175b75b324bad","modified":1545679986424},{"_id":"public/categories/Code/index.html","hash":"ddb9a9c5c2fc0f1d51bf4795e4f88f3d1f2cdfac","modified":1545679986430},{"_id":"public/categories/Challenge/index.html","hash":"5652403b2d421693cc0434eb741b2f77561e4d97","modified":1545679986430},{"_id":"public/categories/c/index.html","hash":"ee8516a0136062c664cf80c5944c202fd861668d","modified":1545679986430},{"_id":"public/categories/Code/JavaScript/index.html","hash":"4c1502dc1113003531f7a767aa2c72b08ab209bb","modified":1545679986430},{"_id":"public/categories/Challenge/Code/index.html","hash":"40e2f0782317c1bf2b27b9d3c0d47af8b5ce41e1","modified":1545679986430},{"_id":"public/categories/Rant/index.html","hash":"2e1ebd251079e2aac337fc3c1c3e09de685acbd8","modified":1545679986430},{"_id":"public/categories/Code/JavaScript/Knockout/index.html","hash":"4fec549d56edf1ec6de6ab9baba6079a5b3d6970","modified":1545679986430},{"_id":"public/categories/Code/JavaScript/Rant/index.html","hash":"44e17eddfe8d1ba71aa449fdc0b5266c617c9758","modified":1545679986430},{"_id":"public/categories/Challenge/Code/c/index.html","hash":"ac60ea0dccbafe5c0c4e49865fd69b231976d5ea","modified":1545679986430},{"_id":"public/categories/Rant/Security/index.html","hash":"e6dc3d2d084e669999e6a2c5a70c070c81f37c70","modified":1545679986431},{"_id":"public/tags/JavaScript/index.html","hash":"d75be6b9d36af4df1f99f0519839f0b547e70675","modified":1545679986425},{"_id":"public/tags/Rant/index.html","hash":"3969ee20b02668e9ccfe2eee4693f67a2f6b0625","modified":1545679986425},{"_id":"public/tags/Image-Editing/index.html","hash":"30735d3ae6d7dddc8d05624df9e79a5c8781f5c0","modified":1545679986425},{"_id":"public/tags/c/index.html","hash":"897d2495c223ebc5cc2482b4d59579023dd6aec3","modified":1545679986425},{"_id":"public/tags/MVVM/index.html","hash":"b39acdcace33ee97ad0210ec96d3223c57865efd","modified":1545679986425},{"_id":"public/tags/knockout-js/index.html","hash":"66dfda782d0d5c3b8f3c6108e62e63172c0c8497","modified":1545679986429},{"_id":"public/tags/android/index.html","hash":"5c8b7165b7e926c52027138851c6cc6082f94a76","modified":1545679986429},{"_id":"public/tags/Cable-Cutter/index.html","hash":"cbbcf37298868a56a8705e7dc8aa9a5157e8f7a8","modified":1545679986429},{"_id":"public/tags/HDTV/index.html","hash":"9c0a823799c0a579fce95c423efe1afe9b1b2807","modified":1545679986430},{"_id":"public/tags/TV/index.html","hash":"9d1a67833d3151a694196908bc887d30e5c147a1","modified":1545679986430},{"_id":"public/tags/antenna/index.html","hash":"be2bc9fcb4d94fcc62db5afd5699c98aa78b42b1","modified":1545679986430},{"_id":"public/sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence/index.html","hash":"26be74849a70249edaec28384b2ec59d6367d89e","modified":1545679986431},{"_id":"public/fun-with-hdtv-antennas/index.html","hash":"89f0fa5be42726570f13d93d10d61737decebb8d","modified":1545679986431},{"_id":"public/automatic-paging-with-knockout-data-bindings/index.html","hash":"9e43a61d8ed9cf610fe97fde54b4c69a06fa6651","modified":1545679986431},{"_id":"public/fun-with-knockout-js/index.html","hash":"fd4ac9d268e36ffd85668d02268b38e04edef921","modified":1545679986431},{"_id":"public/image-processing-part-1/index.html","hash":"cfe913c44c3f667045f8d7570aff07087084b3f7","modified":1545679986431},{"_id":"public/index.html","hash":"d4c061ab996a6c315037b99d49fd4508f1b64819","modified":1545679986431}],"Category":[{"name":"Code","_id":"cj11bwhk900028buyiijuj91x"},{"name":"Challenge","_id":"cj11bwhkh00078buyh3fhgvb0"},{"name":"c#","_id":"cj11bwhkt000b8buytvpcrs55"},{"name":"JavaScript","parent":"cj11bwhk900028buyiijuj91x","_id":"cj11bwhkz000i8buyit1dilqi"},{"name":"Code","parent":"cj11bwhkh00078buyh3fhgvb0","_id":"cj11bwhl6000u8buyo4vjdmfc"},{"name":"Rant","_id":"cj11bwhla000y8buyy9hbh8z8"},{"name":"Rant","parent":"cj11bwhkz000i8buyit1dilqi","_id":"cj11bwhlg00158buyikqzyo04"},{"name":"Knockout","parent":"cj11bwhkz000i8buyit1dilqi","_id":"cj11bwhli00198buy3wuz69m4"},{"name":"c#","parent":"cj11bwhl6000u8buyo4vjdmfc","_id":"cj11bwhll001e8buykh82bvam"},{"name":"Security","parent":"cj11bwhla000y8buyy9hbh8z8","_id":"cj11bwhln001k8buyi1gb62ha"}],"Data":[],"Page":[],"Post":[{"title":"My first rant…","author":"nathan","type":"post","date":"2012-11-10T11:09:05.000Z","url":"/my-first-rant/","comments":1,"_content":"A friend sent me a [page about elm][1]. It bemoans the idea of &#8220;Callback Hell&#8221; and purports to resolve the situation with a completely new language for web scripting&#8230; It didn&#8217;t take me long to feel the urge to violently disagree with the premise of the page. The author compares callbacks to &#8220;goto&#8221; statements.\n  \n<!--more-->\n\n\n  \nA callback is simply a function, anonymous or named, that is passed into another method to be called later. jQuery loves callbacks, but my first exposure to them was in c++.\n  \nHere&#8217;s an example:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nfunction Method2(myValue){\n    ...\n}\n\nMethod1(Method2);\n</pre>\n\nThe thing to keep in mind is that modern languages have &#8220;anonymous&#8221; methods, so you wouldn&#8217;t need to declare Method2..\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nMethod1(function(myValue){...});\n</pre>\n\nSo, what&#8217;s wrong with the stance that callbacks are unreadable?\n  \nI don&#8217;t know&#8230; just the fact that they aren&#8217;t. Especially the example that he gives:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function getPhoto(tag, handlerCallback) {\n    asyncGet(requestTag(tag), function(photoList) {\n        asyncGet(requestOneFrom(photoList), function(photoSizes) {\n            handlerCallback(sizesToPhoto(photoSizes));\n        });\n    });\n}\n\ngetPhoto('tokyo', drawOnScreen);\n</pre>\n\nI personally find that much more readable than his alternative:\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">getPhotos = lift sizesToPhoto . send . lift requestOneFrom . send . lift requestTag\n\n(tagInput, tags) = Input.textField \"Flickr Instant Search\"\n\nscene (w,h) img = flow down [ container w 60 middle tagInput, container w (h - 100) middle img ]\n\nmain = lift2 scene Window.dimensions(images (getPhotos (dropRepeats tags)))\n</pre>\n\nespecially given all the helper methods that he includes&#8230;\n\nI certainly don&#8217;t think that callbacks should be singled out and compared to &#8220;goto&#8221;. Really, any function call is a glorified &#8220;goto&#8221;; they just have pretty curly braces to set them apart.\n  \nI can&#8217;t help but wonder if &#8220;goto&#8221; would have gotten such a bad wrap if the old text editors would have had shift-F12 support. I, for one, always regret never having the chance to use &#8220;comefrom&#8221;.\n  \nAs anyone who works on enterprise level applications knows, code is messy. Especially when the bosses don&#8217;t care what it looks like, just how quickly you can write it. That&#8217;s why modern IDEs arose, because it&#8217;s easier to build a program to navigate your code for you, than to write code that&#8217;s easier to navigate.\n  \nSo, you can go to great lengths, even writing new languages, to avoid using callbacks, or you could use them in a way that makes them easy to understand.\n  \nIn then end, what really matters to me is that I get to keep my curly braces.\n\n [1]: http://elm-lang.org/learn/Escape-from-Callback-Hell.elm\n","source":"_posts/2012-11-10-my-first-rant.md","raw":"---\ntitle: My first rant…\nauthor: nathan\ntype: post\ndate: 2012-11-10T05:09:05+00:00\nurl: /my-first-rant/\ncomments: true\ncategories:\n  - Code\n  - JavaScript\n  - Rant\ntags:\n  - JavaScript\n  - Rant\n\n---\nA friend sent me a [page about elm][1]. It bemoans the idea of &#8220;Callback Hell&#8221; and purports to resolve the situation with a completely new language for web scripting&#8230; It didn&#8217;t take me long to feel the urge to violently disagree with the premise of the page. The author compares callbacks to &#8220;goto&#8221; statements.\n  \n<!--more-->\n\n\n  \nA callback is simply a function, anonymous or named, that is passed into another method to be called later. jQuery loves callbacks, but my first exposure to them was in c++.\n  \nHere&#8217;s an example:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nfunction Method2(myValue){\n    ...\n}\n\nMethod1(Method2);\n</pre>\n\nThe thing to keep in mind is that modern languages have &#8220;anonymous&#8221; methods, so you wouldn&#8217;t need to declare Method2..\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nMethod1(function(myValue){...});\n</pre>\n\nSo, what&#8217;s wrong with the stance that callbacks are unreadable?\n  \nI don&#8217;t know&#8230; just the fact that they aren&#8217;t. Especially the example that he gives:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function getPhoto(tag, handlerCallback) {\n    asyncGet(requestTag(tag), function(photoList) {\n        asyncGet(requestOneFrom(photoList), function(photoSizes) {\n            handlerCallback(sizesToPhoto(photoSizes));\n        });\n    });\n}\n\ngetPhoto('tokyo', drawOnScreen);\n</pre>\n\nI personally find that much more readable than his alternative:\n\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">getPhotos = lift sizesToPhoto . send . lift requestOneFrom . send . lift requestTag\n\n(tagInput, tags) = Input.textField \"Flickr Instant Search\"\n\nscene (w,h) img = flow down [ container w 60 middle tagInput, container w (h - 100) middle img ]\n\nmain = lift2 scene Window.dimensions(images (getPhotos (dropRepeats tags)))\n</pre>\n\nespecially given all the helper methods that he includes&#8230;\n\nI certainly don&#8217;t think that callbacks should be singled out and compared to &#8220;goto&#8221;. Really, any function call is a glorified &#8220;goto&#8221;; they just have pretty curly braces to set them apart.\n  \nI can&#8217;t help but wonder if &#8220;goto&#8221; would have gotten such a bad wrap if the old text editors would have had shift-F12 support. I, for one, always regret never having the chance to use &#8220;comefrom&#8221;.\n  \nAs anyone who works on enterprise level applications knows, code is messy. Especially when the bosses don&#8217;t care what it looks like, just how quickly you can write it. That&#8217;s why modern IDEs arose, because it&#8217;s easier to build a program to navigate your code for you, than to write code that&#8217;s easier to navigate.\n  \nSo, you can go to great lengths, even writing new languages, to avoid using callbacks, or you could use them in a way that makes them easy to understand.\n  \nIn then end, what really matters to me is that I get to keep my curly braces.\n\n [1]: http://elm-lang.org/learn/Escape-from-Callback-Hell.elm\n","slug":"my-first-rant","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhk200008buy15z8cd2a","content":"<p>A friend sent me a <a href=\"http://elm-lang.org/learn/Escape-from-Callback-Hell.elm\" target=\"_blank\" rel=\"external\">page about elm</a>. It bemoans the idea of &#8220;Callback Hell&#8221; and purports to resolve the situation with a completely new language for web scripting&#8230; It didn&#8217;t take me long to feel the urge to violently disagree with the premise of the page. The author compares callbacks to &#8220;goto&#8221; statements.</p>\n<a id=\"more\"></a>\n<p>A callback is simply a function, anonymous or named, that is passed into another method to be called later. jQuery loves callbacks, but my first exposure to them was in c++.</p>\n<p>Here&#8217;s an example:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nfunction Method2(myValue){\n    ...\n}\n\nMethod1(Method2);\n</pre>\n\n<p>The thing to keep in mind is that modern languages have &#8220;anonymous&#8221; methods, so you wouldn&#8217;t need to declare Method2..</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nMethod1(function(myValue){...});\n</pre>\n\n<p>So, what&#8217;s wrong with the stance that callbacks are unreadable?</p>\n<p>I don&#8217;t know&#8230; just the fact that they aren&#8217;t. Especially the example that he gives:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function getPhoto(tag, handlerCallback) {\n    asyncGet(requestTag(tag), function(photoList) {\n        asyncGet(requestOneFrom(photoList), function(photoSizes) {\n            handlerCallback(sizesToPhoto(photoSizes));\n        });\n    });\n}\n\ngetPhoto('tokyo', drawOnScreen);\n</pre>\n\n<p>I personally find that much more readable than his alternative:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">getPhotos = lift sizesToPhoto . send . lift requestOneFrom . send . lift requestTag\n\n(tagInput, tags) = Input.textField \"Flickr Instant Search\"\n\nscene (w,h) img = flow down [ container w 60 middle tagInput, container w (h - 100) middle img ]\n\nmain = lift2 scene Window.dimensions(images (getPhotos (dropRepeats tags)))\n</pre>\n\n<p>especially given all the helper methods that he includes&#8230;</p>\n<p>I certainly don&#8217;t think that callbacks should be singled out and compared to &#8220;goto&#8221;. Really, any function call is a glorified &#8220;goto&#8221;; they just have pretty curly braces to set them apart.</p>\n<p>I can&#8217;t help but wonder if &#8220;goto&#8221; would have gotten such a bad wrap if the old text editors would have had shift-F12 support. I, for one, always regret never having the chance to use &#8220;comefrom&#8221;.</p>\n<p>As anyone who works on enterprise level applications knows, code is messy. Especially when the bosses don&#8217;t care what it looks like, just how quickly you can write it. That&#8217;s why modern IDEs arose, because it&#8217;s easier to build a program to navigate your code for you, than to write code that&#8217;s easier to navigate.</p>\n<p>So, you can go to great lengths, even writing new languages, to avoid using callbacks, or you could use them in a way that makes them easy to understand.</p>\n<p>In then end, what really matters to me is that I get to keep my curly braces.</p>\n","excerpt":"<p>A friend sent me a <a href=\"http://elm-lang.org/learn/Escape-from-Callback-Hell.elm\">page about elm</a>. It bemoans the idea of &#8220;Callback Hell&#8221; and purports to resolve the situation with a completely new language for web scripting&#8230; It didn&#8217;t take me long to feel the urge to violently disagree with the premise of the page. The author compares callbacks to &#8220;goto&#8221; statements.</p>","more":"<p>A callback is simply a function, anonymous or named, that is passed into another method to be called later. jQuery loves callbacks, but my first exposure to them was in c++.</p>\n<p>Here&#8217;s an example:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nfunction Method2(myValue){\n    ...\n}\n\nMethod1(Method2);\n</pre>\n\n<p>The thing to keep in mind is that modern languages have &#8220;anonymous&#8221; methods, so you wouldn&#8217;t need to declare Method2..</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function Method1(callback){\n    ...\n    callback(someValue);\n}\n\nMethod1(function(myValue){...});\n</pre>\n\n<p>So, what&#8217;s wrong with the stance that callbacks are unreadable?</p>\n<p>I don&#8217;t know&#8230; just the fact that they aren&#8217;t. Especially the example that he gives:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">function getPhoto(tag, handlerCallback) {\n    asyncGet(requestTag(tag), function(photoList) {\n        asyncGet(requestOneFrom(photoList), function(photoSizes) {\n            handlerCallback(sizesToPhoto(photoSizes));\n        });\n    });\n}\n\ngetPhoto('tokyo', drawOnScreen);\n</pre>\n\n<p>I personally find that much more readable than his alternative:</p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">getPhotos = lift sizesToPhoto . send . lift requestOneFrom . send . lift requestTag\n\n(tagInput, tags) = Input.textField \"Flickr Instant Search\"\n\nscene (w,h) img = flow down [ container w 60 middle tagInput, container w (h - 100) middle img ]\n\nmain = lift2 scene Window.dimensions(images (getPhotos (dropRepeats tags)))\n</pre>\n\n<p>especially given all the helper methods that he includes&#8230;</p>\n<p>I certainly don&#8217;t think that callbacks should be singled out and compared to &#8220;goto&#8221;. Really, any function call is a glorified &#8220;goto&#8221;; they just have pretty curly braces to set them apart.</p>\n<p>I can&#8217;t help but wonder if &#8220;goto&#8221; would have gotten such a bad wrap if the old text editors would have had shift-F12 support. I, for one, always regret never having the chance to use &#8220;comefrom&#8221;.</p>\n<p>As anyone who works on enterprise level applications knows, code is messy. Especially when the bosses don&#8217;t care what it looks like, just how quickly you can write it. That&#8217;s why modern IDEs arose, because it&#8217;s easier to build a program to navigate your code for you, than to write code that&#8217;s easier to navigate.</p>\n<p>So, you can go to great lengths, even writing new languages, to avoid using callbacks, or you could use them in a way that makes them easy to understand.</p>\n<p>In then end, what really matters to me is that I get to keep my curly braces.</p>"},{"title":"Image Processing Part 1","author":"nathan","type":"post","date":"2012-11-23T10:16:04.000Z","url":"/image-processing-part-1/","comments":1,"_content":"This is, hopefully, the first in a series of posts using this codebase. The topics will be varied, but hopefully the codebase will tie them together&#8230;\n\nCan you tell what is different between this image:\n\n[<img class=\"size-full wp-image-30 aligncenter\" title=\"Redbud\" src=\"/images/2012/11/Redbud.jpg\" alt=\"Origional Redbud image\" width=\"300\" height=\"200\" />][1]\n\nand this one:\n\n[<img class=\"aligncenter size-full wp-image-31\" title=\"Redbud2\" src=\"/images/2012/11/Redbud2.jpg\" alt=\"Modified Redbud Image\" width=\"300\" height=\"200\" />][2]\n\nAside from the obvious visual differences, there is an important, hidden difference. You can click-through and grab the original versions and try to figure it out.\n\nThe answer is below&#8230;\n\n<!--more-->\n\nI was reading a story in <a href=\"http://www.asimovs.com\" target=\"_blank\">Asimovs</a> a while back (for the life of me, I cannot rember the name or month) where the charactors encoded messages by manipulating the pixels of an image. I thought that was an interesting idea, and decided to try it as a proof of concept.\n\nI created a project that opens an image, encodes some text into the image, and saves the result. It can also open the resulting image, decode the text, and display it. Notice that I said it **encodes** the text and not **encrypts** there is a big difference, and that will be handled later. By merely encoding the text, anyone who knows the algorithm can decode and read the text. The text encoded in the image is no different from text encoded as ASCII or Unicode. It is just an electronic representation of text. The idea here is to use <a href=\"http://en.wikipedia.org/wiki/Security_through_obscurity\" target=\"_blank\">security through obscurity</a>. Anyone seeing the output image by itself should find no obvious signs of an encoded message.\n\nI grabbed a copy of _<a href=\"http://www.gutenberg.org/ebooks/12\" target=\"_blank\">Through the Looking Glass</a>_ from Project Gutenberg and encoded it into the image above. I accomplish this by manipulating the green value of each pixel. Perhaps for this image it would be better to use the blue value&#8230;\n\nHere&#8217;s a look at the code:\n\nFirst, I need to assign a numeric value to the text that I wish to encode. I use an ASCII encoded to convert the text to a byte array:\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, string text, int pixelsPerByte) \n{\n  var bytes = new ASCIIEncoding().GetBytes(text);\n  Encode(image, bytes, pixelsPerByte); \n}\n</pre>\n\nBecause C# uses one byte for each channel of a pixel (red, green, blue, and alpha) and one byte for each character in ASCII text we could simply encode the text directly as an image. This, of course, would nullify our security through obscurity because it wouldn&#8217;t appear to be a real image. Through experimentation, I found that manipulating only one channel to be best. I also don&#8217;t want to completely overwrite an entire channel with a full byte of text, so I split each character across multiple pixels:\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, byte[] bytes, int pixelsPerByte) \n{\n  var totalBytes = image.Height*image.Width/pixelsPerByte;\n  if(totalBytes &lt; bytes.Length)\n    throw new ApplicationException(\"Image too small to encode text.\");\n \n  var byteList = bytes.ToList();\n  byteList.AddRange(Enumerable.Repeat((byte)0, totalBytes - bytes.Length));\n  byteList.Add(0);\n \n  for (var c = 0; c &lt; byteList.Count; c++)\n  {\n    if (ComputePixel(image, byteList, c, pixelsPerByte))\n      break;\n  }\n}\n</pre>\n\nAgain, through experimentation, I found that 32 pixels per caracter works well.\n\nMy method for encoding the data is to average the red and blue channels together and assign that value to the green channel. I then take my partial byte of text and either add it to or subtract it from the green channel.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool ComputePixel(Bitmap image, IReadOnlyList&lt;byte&gt; bytes, int c, int pixelsPerByte)\n{\n  var b = bytes;\n  var partial = b/pixelsPerByte;\n  var last = b - (partial*(pixelsPerByte-1));\n  var partialBytes = Enumerable.Repeat(partial, pixelsPerByte - 1).ToList();\n  partialBytes.Add(last);\n  for (var i = 0; i &lt; pixelsPerByte; i++)\n  {\n    var x = ((c * pixelsPerByte) + i) % image.Width;\n    var y = ((c * pixelsPerByte) + i) / image.Width;\n    if (y &lt;= image.Height) \n      return true; \n    var color = image.GetPixel(x, y);\n    var green = (color.R + color.B)/2;\n    \n    if (green &gt;= 128)\n      green -= partialBytes[i];\n    else\n      green += partialBytes[i];\n    \n    color = Color.FromArgb(color.A, color.R, green, color.B);\n    image.SetPixel(x, y, color);\n  }\n  return false; \n}\n</pre>\n\nThis algorithm is reversible, which is very handy if you want to decode the text&#8230;\n  \nYou may have noticed that the modified image was rather large. That is because we must save the image in a way that doesn&#8217;t modify the bits. .net makes saving the image easy, but using any of the other format will destroy the encoded text when the image is compressed.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private void SaveToolStripMenuItemClick(object sender, EventArgs e)\n{\n  if (saveFileDialog1.ShowDialog() == DialogResult.OK)\n    ((EncoderModel) encoderModelBindingSource.Current).Image.Save(saveFileDialog1.FileName, ImageFormat.MemoryBmp);\n}\n</pre>\n\nThe challenge to you is to create another algorithm that produces a better looking image, while still remaining reversible.\n\nYou can download the code from the main branch of my gitHub repository: <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" target=\"_blank\">nathanrobinson/ImageTextEncoder</a>\n\nThen alter ComputePixel and ComputeByte to encode and decode the text. Some ideas would be to use Hue, Saturation, and Value, instead of Red, Green, and Blue; convert the image from color to grayscale; or something completely different.\n\nLet me know what cool ideas you come up with.\n\n [1]: /images/2012/11/Redbud.JPG\n [2]: /images/2012/11/Redbud2.bmp\n","source":"_posts/2012-11-22-image-processing-part-1.md","raw":"---\ntitle: Image Processing Part 1\nauthor: nathan\ntype: post\ndate: 2012-11-23T04:16:04+00:00\nurl: /image-processing-part-1/\ncomments: true\ncategories:\n  - Challenge\n  - Code\n  - 'c#'\ntags:\n  - Image Editing\n  - 'c#'\n\n---\nThis is, hopefully, the first in a series of posts using this codebase. The topics will be varied, but hopefully the codebase will tie them together&#8230;\n\nCan you tell what is different between this image:\n\n[<img class=\"size-full wp-image-30 aligncenter\" title=\"Redbud\" src=\"/images/2012/11/Redbud.jpg\" alt=\"Origional Redbud image\" width=\"300\" height=\"200\" />][1]\n\nand this one:\n\n[<img class=\"aligncenter size-full wp-image-31\" title=\"Redbud2\" src=\"/images/2012/11/Redbud2.jpg\" alt=\"Modified Redbud Image\" width=\"300\" height=\"200\" />][2]\n\nAside from the obvious visual differences, there is an important, hidden difference. You can click-through and grab the original versions and try to figure it out.\n\nThe answer is below&#8230;\n\n<!--more-->\n\nI was reading a story in <a href=\"http://www.asimovs.com\" target=\"_blank\">Asimovs</a> a while back (for the life of me, I cannot rember the name or month) where the charactors encoded messages by manipulating the pixels of an image. I thought that was an interesting idea, and decided to try it as a proof of concept.\n\nI created a project that opens an image, encodes some text into the image, and saves the result. It can also open the resulting image, decode the text, and display it. Notice that I said it **encodes** the text and not **encrypts** there is a big difference, and that will be handled later. By merely encoding the text, anyone who knows the algorithm can decode and read the text. The text encoded in the image is no different from text encoded as ASCII or Unicode. It is just an electronic representation of text. The idea here is to use <a href=\"http://en.wikipedia.org/wiki/Security_through_obscurity\" target=\"_blank\">security through obscurity</a>. Anyone seeing the output image by itself should find no obvious signs of an encoded message.\n\nI grabbed a copy of _<a href=\"http://www.gutenberg.org/ebooks/12\" target=\"_blank\">Through the Looking Glass</a>_ from Project Gutenberg and encoded it into the image above. I accomplish this by manipulating the green value of each pixel. Perhaps for this image it would be better to use the blue value&#8230;\n\nHere&#8217;s a look at the code:\n\nFirst, I need to assign a numeric value to the text that I wish to encode. I use an ASCII encoded to convert the text to a byte array:\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, string text, int pixelsPerByte) \n{\n  var bytes = new ASCIIEncoding().GetBytes(text);\n  Encode(image, bytes, pixelsPerByte); \n}\n</pre>\n\nBecause C# uses one byte for each channel of a pixel (red, green, blue, and alpha) and one byte for each character in ASCII text we could simply encode the text directly as an image. This, of course, would nullify our security through obscurity because it wouldn&#8217;t appear to be a real image. Through experimentation, I found that manipulating only one channel to be best. I also don&#8217;t want to completely overwrite an entire channel with a full byte of text, so I split each character across multiple pixels:\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, byte[] bytes, int pixelsPerByte) \n{\n  var totalBytes = image.Height*image.Width/pixelsPerByte;\n  if(totalBytes &lt; bytes.Length)\n    throw new ApplicationException(\"Image too small to encode text.\");\n \n  var byteList = bytes.ToList();\n  byteList.AddRange(Enumerable.Repeat((byte)0, totalBytes - bytes.Length));\n  byteList.Add(0);\n \n  for (var c = 0; c &lt; byteList.Count; c++)\n  {\n    if (ComputePixel(image, byteList, c, pixelsPerByte))\n      break;\n  }\n}\n</pre>\n\nAgain, through experimentation, I found that 32 pixels per caracter works well.\n\nMy method for encoding the data is to average the red and blue channels together and assign that value to the green channel. I then take my partial byte of text and either add it to or subtract it from the green channel.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool ComputePixel(Bitmap image, IReadOnlyList&lt;byte&gt; bytes, int c, int pixelsPerByte)\n{\n  var b = bytes;\n  var partial = b/pixelsPerByte;\n  var last = b - (partial*(pixelsPerByte-1));\n  var partialBytes = Enumerable.Repeat(partial, pixelsPerByte - 1).ToList();\n  partialBytes.Add(last);\n  for (var i = 0; i &lt; pixelsPerByte; i++)\n  {\n    var x = ((c * pixelsPerByte) + i) % image.Width;\n    var y = ((c * pixelsPerByte) + i) / image.Width;\n    if (y &lt;= image.Height) \n      return true; \n    var color = image.GetPixel(x, y);\n    var green = (color.R + color.B)/2;\n    \n    if (green &gt;= 128)\n      green -= partialBytes[i];\n    else\n      green += partialBytes[i];\n    \n    color = Color.FromArgb(color.A, color.R, green, color.B);\n    image.SetPixel(x, y, color);\n  }\n  return false; \n}\n</pre>\n\nThis algorithm is reversible, which is very handy if you want to decode the text&#8230;\n  \nYou may have noticed that the modified image was rather large. That is because we must save the image in a way that doesn&#8217;t modify the bits. .net makes saving the image easy, but using any of the other format will destroy the encoded text when the image is compressed.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private void SaveToolStripMenuItemClick(object sender, EventArgs e)\n{\n  if (saveFileDialog1.ShowDialog() == DialogResult.OK)\n    ((EncoderModel) encoderModelBindingSource.Current).Image.Save(saveFileDialog1.FileName, ImageFormat.MemoryBmp);\n}\n</pre>\n\nThe challenge to you is to create another algorithm that produces a better looking image, while still remaining reversible.\n\nYou can download the code from the main branch of my gitHub repository: <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" target=\"_blank\">nathanrobinson/ImageTextEncoder</a>\n\nThen alter ComputePixel and ComputeByte to encode and decode the text. Some ideas would be to use Hue, Saturation, and Value, instead of Red, Green, and Blue; convert the image from color to grayscale; or something completely different.\n\nLet me know what cool ideas you come up with.\n\n [1]: /images/2012/11/Redbud.JPG\n [2]: /images/2012/11/Redbud2.bmp\n","slug":"image-processing-part-1","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhk600018buyxb6iy87b","content":"<p>This is, hopefully, the first in a series of posts using this codebase. The topics will be varied, but hopefully the codebase will tie them together&#8230;</p>\n<p>Can you tell what is different between this image:</p>\n<p><a href=\"/images/2012/11/Redbud.JPG\"><img class=\"size-full wp-image-30 aligncenter\" title=\"Redbud\" src=\"/images/2012/11/Redbud.jpg\" alt=\"Origional Redbud image\" width=\"300\" height=\"200\"></a></p>\n<p>and this one:</p>\n<p><a href=\"/images/2012/11/Redbud2.bmp\"><img class=\"aligncenter size-full wp-image-31\" title=\"Redbud2\" src=\"/images/2012/11/Redbud2.jpg\" alt=\"Modified Redbud Image\" width=\"300\" height=\"200\"></a></p>\n<p>Aside from the obvious visual differences, there is an important, hidden difference. You can click-through and grab the original versions and try to figure it out.</p>\n<p>The answer is below&#8230;</p>\n<a id=\"more\"></a>\n<p>I was reading a story in <a href=\"http://www.asimovs.com\" target=\"_blank\">Asimovs</a> a while back (for the life of me, I cannot rember the name or month) where the charactors encoded messages by manipulating the pixels of an image. I thought that was an interesting idea, and decided to try it as a proof of concept.</p>\n<p>I created a project that opens an image, encodes some text into the image, and saves the result. It can also open the resulting image, decode the text, and display it. Notice that I said it <strong>encodes</strong> the text and not <strong>encrypts</strong> there is a big difference, and that will be handled later. By merely encoding the text, anyone who knows the algorithm can decode and read the text. The text encoded in the image is no different from text encoded as ASCII or Unicode. It is just an electronic representation of text. The idea here is to use <a href=\"http://en.wikipedia.org/wiki/Security_through_obscurity\" target=\"_blank\">security through obscurity</a>. Anyone seeing the output image by itself should find no obvious signs of an encoded message.</p>\n<p>I grabbed a copy of _<a href=\"http://www.gutenberg.org/ebooks/12\" target=\"_blank\">Through the Looking Glass</a>_ from Project Gutenberg and encoded it into the image above. I accomplish this by manipulating the green value of each pixel. Perhaps for this image it would be better to use the blue value&#8230;</p>\n<p>Here&#8217;s a look at the code:</p>\n<p>First, I need to assign a numeric value to the text that I wish to encode. I use an ASCII encoded to convert the text to a byte array:</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, string text, int pixelsPerByte) \n{\n  var bytes = new ASCIIEncoding().GetBytes(text);\n  Encode(image, bytes, pixelsPerByte); \n}\n</pre>\n\n<p>Because C# uses one byte for each channel of a pixel (red, green, blue, and alpha) and one byte for each character in ASCII text we could simply encode the text directly as an image. This, of course, would nullify our security through obscurity because it wouldn&#8217;t appear to be a real image. Through experimentation, I found that manipulating only one channel to be best. I also don&#8217;t want to completely overwrite an entire channel with a full byte of text, so I split each character across multiple pixels:</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, byte[] bytes, int pixelsPerByte) \n{\n  var totalBytes = image.Height*image.Width/pixelsPerByte;\n  if(totalBytes &lt; bytes.Length)\n    throw new ApplicationException(\"Image too small to encode text.\");\n\n  var byteList = bytes.ToList();\n  byteList.AddRange(Enumerable.Repeat((byte)0, totalBytes - bytes.Length));\n  byteList.Add(0);\n\n  for (var c = 0; c &lt; byteList.Count; c++)\n  {\n    if (ComputePixel(image, byteList, c, pixelsPerByte))\n      break;\n  }\n}\n</pre>\n\n<p>Again, through experimentation, I found that 32 pixels per caracter works well.</p>\n<p>My method for encoding the data is to average the red and blue channels together and assign that value to the green channel. I then take my partial byte of text and either add it to or subtract it from the green channel.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool ComputePixel(Bitmap image, IReadOnlyList&lt;byte&gt; bytes, int c, int pixelsPerByte)\n{\n  var b = bytes;\n  var partial = b/pixelsPerByte;\n  var last = b - (partial*(pixelsPerByte-1));\n  var partialBytes = Enumerable.Repeat(partial, pixelsPerByte - 1).ToList();\n  partialBytes.Add(last);\n  for (var i = 0; i &lt; pixelsPerByte; i++)\n  {\n    var x = ((c * pixelsPerByte) + i) % image.Width;\n    var y = ((c * pixelsPerByte) + i) / image.Width;\n    if (y &lt;= image.Height) \n      return true; \n    var color = image.GetPixel(x, y);\n    var green = (color.R + color.B)/2;\n\n    if (green &gt;= 128)\n      green -= partialBytes[i];\n    else\n      green += partialBytes[i];\n\n    color = Color.FromArgb(color.A, color.R, green, color.B);\n    image.SetPixel(x, y, color);\n  }\n  return false; \n}\n</pre>\n\n<p>This algorithm is reversible, which is very handy if you want to decode the text&#8230;</p>\n<p>You may have noticed that the modified image was rather large. That is because we must save the image in a way that doesn&#8217;t modify the bits. .net makes saving the image easy, but using any of the other format will destroy the encoded text when the image is compressed.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private void SaveToolStripMenuItemClick(object sender, EventArgs e)\n{\n  if (saveFileDialog1.ShowDialog() == DialogResult.OK)\n    ((EncoderModel) encoderModelBindingSource.Current).Image.Save(saveFileDialog1.FileName, ImageFormat.MemoryBmp);\n}\n</pre>\n\n<p>The challenge to you is to create another algorithm that produces a better looking image, while still remaining reversible.</p>\n<p>You can download the code from the main branch of my gitHub repository: <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" target=\"_blank\">nathanrobinson/ImageTextEncoder</a></p>\n<p>Then alter ComputePixel and ComputeByte to encode and decode the text. Some ideas would be to use Hue, Saturation, and Value, instead of Red, Green, and Blue; convert the image from color to grayscale; or something completely different.</p>\n<p>Let me know what cool ideas you come up with.</p>\n","excerpt":"<p>This is, hopefully, the first in a series of posts using this codebase. The topics will be varied, but hopefully the codebase will tie them together&#8230;</p>\n<p>Can you tell what is different between this image:</p>\n<p><a href=\"/images/2012/11/Redbud.JPG\"><img class=\"size-full wp-image-30 aligncenter\" title=\"Redbud\" src=\"/images/2012/11/Redbud.jpg\" alt=\"Origional Redbud image\" width=\"300\" height=\"200\" /></a></p>\n<p>and this one:</p>\n<p><a href=\"/images/2012/11/Redbud2.bmp\"><img class=\"aligncenter size-full wp-image-31\" title=\"Redbud2\" src=\"/images/2012/11/Redbud2.jpg\" alt=\"Modified Redbud Image\" width=\"300\" height=\"200\" /></a></p>\n<p>Aside from the obvious visual differences, there is an important, hidden difference. You can click-through and grab the original versions and try to figure it out.</p>\n<p>The answer is below&#8230;</p>","more":"<p>I was reading a story in <a href=\"http://www.asimovs.com\" target=\"_blank\">Asimovs</a> a while back (for the life of me, I cannot rember the name or month) where the charactors encoded messages by manipulating the pixels of an image. I thought that was an interesting idea, and decided to try it as a proof of concept.</p>\n<p>I created a project that opens an image, encodes some text into the image, and saves the result. It can also open the resulting image, decode the text, and display it. Notice that I said it <strong>encodes</strong> the text and not <strong>encrypts</strong> there is a big difference, and that will be handled later. By merely encoding the text, anyone who knows the algorithm can decode and read the text. The text encoded in the image is no different from text encoded as ASCII or Unicode. It is just an electronic representation of text. The idea here is to use <a href=\"http://en.wikipedia.org/wiki/Security_through_obscurity\" target=\"_blank\">security through obscurity</a>. Anyone seeing the output image by itself should find no obvious signs of an encoded message.</p>\n<p>I grabbed a copy of _<a href=\"http://www.gutenberg.org/ebooks/12\" target=\"_blank\">Through the Looking Glass</a>_ from Project Gutenberg and encoded it into the image above. I accomplish this by manipulating the green value of each pixel. Perhaps for this image it would be better to use the blue value&#8230;</p>\n<p>Here&#8217;s a look at the code:</p>\n<p>First, I need to assign a numeric value to the text that I wish to encode. I use an ASCII encoded to convert the text to a byte array:</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, string text, int pixelsPerByte) \n{\n  var bytes = new ASCIIEncoding().GetBytes(text);\n  Encode(image, bytes, pixelsPerByte); \n}\n</pre>\n\n<p>Because C# uses one byte for each channel of a pixel (red, green, blue, and alpha) and one byte for each character in ASCII text we could simply encode the text directly as an image. This, of course, would nullify our security through obscurity because it wouldn&#8217;t appear to be a real image. Through experimentation, I found that manipulating only one channel to be best. I also don&#8217;t want to completely overwrite an entire channel with a full byte of text, so I split each character across multiple pixels:</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">public static void Encode(Bitmap image, byte[] bytes, int pixelsPerByte) \n{\n  var totalBytes = image.Height*image.Width/pixelsPerByte;\n  if(totalBytes &lt; bytes.Length)\n    throw new ApplicationException(\"Image too small to encode text.\");\n\n  var byteList = bytes.ToList();\n  byteList.AddRange(Enumerable.Repeat((byte)0, totalBytes - bytes.Length));\n  byteList.Add(0);\n\n  for (var c = 0; c &lt; byteList.Count; c++)\n  {\n    if (ComputePixel(image, byteList, c, pixelsPerByte))\n      break;\n  }\n}\n</pre>\n\n<p>Again, through experimentation, I found that 32 pixels per caracter works well.</p>\n<p>My method for encoding the data is to average the red and blue channels together and assign that value to the green channel. I then take my partial byte of text and either add it to or subtract it from the green channel.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool ComputePixel(Bitmap image, IReadOnlyList&lt;byte&gt; bytes, int c, int pixelsPerByte)\n{\n  var b = bytes;\n  var partial = b/pixelsPerByte;\n  var last = b - (partial*(pixelsPerByte-1));\n  var partialBytes = Enumerable.Repeat(partial, pixelsPerByte - 1).ToList();\n  partialBytes.Add(last);\n  for (var i = 0; i &lt; pixelsPerByte; i++)\n  {\n    var x = ((c * pixelsPerByte) + i) % image.Width;\n    var y = ((c * pixelsPerByte) + i) / image.Width;\n    if (y &lt;= image.Height) \n      return true; \n    var color = image.GetPixel(x, y);\n    var green = (color.R + color.B)/2;\n\n    if (green &gt;= 128)\n      green -= partialBytes[i];\n    else\n      green += partialBytes[i];\n\n    color = Color.FromArgb(color.A, color.R, green, color.B);\n    image.SetPixel(x, y, color);\n  }\n  return false; \n}\n</pre>\n\n<p>This algorithm is reversible, which is very handy if you want to decode the text&#8230;</p>\n<p>You may have noticed that the modified image was rather large. That is because we must save the image in a way that doesn&#8217;t modify the bits. .net makes saving the image easy, but using any of the other format will destroy the encoded text when the image is compressed.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private void SaveToolStripMenuItemClick(object sender, EventArgs e)\n{\n  if (saveFileDialog1.ShowDialog() == DialogResult.OK)\n    ((EncoderModel) encoderModelBindingSource.Current).Image.Save(saveFileDialog1.FileName, ImageFormat.MemoryBmp);\n}\n</pre>\n\n<p>The challenge to you is to create another algorithm that produces a better looking image, while still remaining reversible.</p>\n<p>You can download the code from the main branch of my gitHub repository: <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" target=\"_blank\">nathanrobinson/ImageTextEncoder</a></p>\n<p>Then alter ComputePixel and ComputeByte to encode and decode the text. Some ideas would be to use Hue, Saturation, and Value, instead of Red, Green, and Blue; convert the image from color to grayscale; or something completely different.</p>\n<p>Let me know what cool ideas you come up with.</p>"},{"title":"Image Processing Part 2","author":"nathan","type":"post","date":"2013-02-03T03:25:11.000Z","url":"/image-processing-part-2/","comments":1,"_content":"In [Image Processing Part 1][1] I talked about methods for manipulation image data. If you tried out the <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" title=\"ImageTextEncoder\" target=\"_blank\">code</a> then you might have noticed it ran really slow.\n\n<!--more-->\n\nUsually, when working with image data it is easier to conceptualize pixel locations in x,y coordinates. I used a System.Drawing.Bitmap to hold the image data, which provides the <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.getpixel.aspx\" title=\"GetPixel\" target=\"_blank\">GetPixel</a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.setpixel.aspx\" title=\"SetPixel\" target=\"_blank\">SetPixel</a> methods to access pixels using x,y coordinates. Unfortunately, this method is extremely slow. When we call this method repeatedly it causes the application to become noticeably sluggish. \n\nLuckily, there is another way to manipulate pixel data. If we can convert our x,y coordinates into an array notation, then we can call <a href=\"http://msdn.microsoft.com/en-us/library/5ey6h79d.aspx\" title=\"LockBits\" target=\"_blank\">LockBits</a> and access the raw data without any noticeable slowdown. \n\nThe array that is set by LockBits includes the color components of each pixel as defined by the ImageFormat. To find the location of a pixel in the array, you have to multiply the x coordinate by the width of the image an the width of the pixel data. The Bitmap object has a property called Stride which represents the width of the image multiplied by the number of bytes per pixel. You can calculate the array index of a pixel as (x * bitmap.Stride) + y.\n\nWhen we were using GetPixel and SetPixel, we had to convert the array position of the text into an x,y coordinate for the image. No, instead of converting it back, we can just go straight to the array. \n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">var bitmapData = image.LockBits( \n                new Rectangle(0, 0, image.Width, image.Height), \n                ImageLockMode.ReadWrite,\n                image.PixelFormat);\n            \n            int length  = Math.Abs(bitmapData.Stride) * image.Height;\n            var rgbValues = new byte[length];\n            \n            System.Runtime.InteropServices.Marshal.Copy(bitmapData.Scan0, rgbValues, 0, length);\n\n            for (var c = 0; c &lt; byteList.Count; c++)\n            {\n                if(!FastComputePixel(rgbValues, byteList, c, pixelsPerChar, Math.Abs(bitmapData.Stride) / bitmapData.Width))\n                    break;\n            }\n\n            System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, bitmapData.Scan0, length);\n            image.UnlockBits(bitmapData);\n</pre>\n\nThe two calls to Marshal.Copy copies the image data to an array that we can manipulate and then copies it back into the image.\n\nAnd FastComputePixel doesn&#8217;t have to make any calls to the Bitmap object.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool FastComputePixel(byte[] rgbValues, byte b, int c, int pixelsPerChar, int bytesPerPixel)\n        {\n            var partial = b/pixelsPerChar;\n            var last = b - (partial*(pixelsPerChar-1));\n            var partialBytes = Enumerable.Repeat(partial, pixelsPerChar - 1).ToList();\n            partialBytes.Add(last);\n            for (var i = 0; i &lt; pixelsPerChar; i++)\n            {\n                var pixel = ((c*pixelsPerChar) + i)*bytesPerPixel;\n                if (pixel &gt;= rgbValues.Length)\n                    return false;\n\n                var red = rgbValues[pixel];\n                var blue = rgbValues[pixel + 2];\n\n                var green = (red + blue)/2;\n                if (green &gt;= 128)\n                    green -= partialBytes[i];\n                else\n                    green += partialBytes[i];\n\n                rgbValues[pixel + 1] = (byte)green;\n            }\n            return true;\n        }\n</pre>\n\nWe just call LockBits, manipulate the image data array, and UnlockBits.\n  \nYou should notice the application is much more responsive!\n\n [1]: /image-processing-part-1/ \"Image Processing Part 1\"\n","source":"_posts/2013-02-02-image-processing-part-2.md","raw":"---\ntitle: Image Processing Part 2\nauthor: nathan\ntype: post\ndate: 2013-02-02T21:25:11+00:00\nurl: /image-processing-part-2/\ncomments: true\ncategories:\n  - 'c#'\ntags:\n  - Image Editing\n  - 'c#'\n\n---\nIn [Image Processing Part 1][1] I talked about methods for manipulation image data. If you tried out the <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" title=\"ImageTextEncoder\" target=\"_blank\">code</a> then you might have noticed it ran really slow.\n\n<!--more-->\n\nUsually, when working with image data it is easier to conceptualize pixel locations in x,y coordinates. I used a System.Drawing.Bitmap to hold the image data, which provides the <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.getpixel.aspx\" title=\"GetPixel\" target=\"_blank\">GetPixel</a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.setpixel.aspx\" title=\"SetPixel\" target=\"_blank\">SetPixel</a> methods to access pixels using x,y coordinates. Unfortunately, this method is extremely slow. When we call this method repeatedly it causes the application to become noticeably sluggish. \n\nLuckily, there is another way to manipulate pixel data. If we can convert our x,y coordinates into an array notation, then we can call <a href=\"http://msdn.microsoft.com/en-us/library/5ey6h79d.aspx\" title=\"LockBits\" target=\"_blank\">LockBits</a> and access the raw data without any noticeable slowdown. \n\nThe array that is set by LockBits includes the color components of each pixel as defined by the ImageFormat. To find the location of a pixel in the array, you have to multiply the x coordinate by the width of the image an the width of the pixel data. The Bitmap object has a property called Stride which represents the width of the image multiplied by the number of bytes per pixel. You can calculate the array index of a pixel as (x * bitmap.Stride) + y.\n\nWhen we were using GetPixel and SetPixel, we had to convert the array position of the text into an x,y coordinate for the image. No, instead of converting it back, we can just go straight to the array. \n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">var bitmapData = image.LockBits( \n                new Rectangle(0, 0, image.Width, image.Height), \n                ImageLockMode.ReadWrite,\n                image.PixelFormat);\n            \n            int length  = Math.Abs(bitmapData.Stride) * image.Height;\n            var rgbValues = new byte[length];\n            \n            System.Runtime.InteropServices.Marshal.Copy(bitmapData.Scan0, rgbValues, 0, length);\n\n            for (var c = 0; c &lt; byteList.Count; c++)\n            {\n                if(!FastComputePixel(rgbValues, byteList, c, pixelsPerChar, Math.Abs(bitmapData.Stride) / bitmapData.Width))\n                    break;\n            }\n\n            System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, bitmapData.Scan0, length);\n            image.UnlockBits(bitmapData);\n</pre>\n\nThe two calls to Marshal.Copy copies the image data to an array that we can manipulate and then copies it back into the image.\n\nAnd FastComputePixel doesn&#8217;t have to make any calls to the Bitmap object.\n\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool FastComputePixel(byte[] rgbValues, byte b, int c, int pixelsPerChar, int bytesPerPixel)\n        {\n            var partial = b/pixelsPerChar;\n            var last = b - (partial*(pixelsPerChar-1));\n            var partialBytes = Enumerable.Repeat(partial, pixelsPerChar - 1).ToList();\n            partialBytes.Add(last);\n            for (var i = 0; i &lt; pixelsPerChar; i++)\n            {\n                var pixel = ((c*pixelsPerChar) + i)*bytesPerPixel;\n                if (pixel &gt;= rgbValues.Length)\n                    return false;\n\n                var red = rgbValues[pixel];\n                var blue = rgbValues[pixel + 2];\n\n                var green = (red + blue)/2;\n                if (green &gt;= 128)\n                    green -= partialBytes[i];\n                else\n                    green += partialBytes[i];\n\n                rgbValues[pixel + 1] = (byte)green;\n            }\n            return true;\n        }\n</pre>\n\nWe just call LockBits, manipulate the image data array, and UnlockBits.\n  \nYou should notice the application is much more responsive!\n\n [1]: /image-processing-part-1/ \"Image Processing Part 1\"\n","slug":"image-processing-part-2","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkc00048buyvnvkvv7y","content":"<p>In <a href=\"/image-processing-part-1/\" title=\"Image Processing Part 1\">Image Processing Part 1</a> I talked about methods for manipulation image data. If you tried out the <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" title=\"ImageTextEncoder\" target=\"_blank\">code</a> then you might have noticed it ran really slow.</p>\n<a id=\"more\"></a>\n<p>Usually, when working with image data it is easier to conceptualize pixel locations in x,y coordinates. I used a System.Drawing.Bitmap to hold the image data, which provides the <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.getpixel.aspx\" title=\"GetPixel\" target=\"_blank\">GetPixel</a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.setpixel.aspx\" title=\"SetPixel\" target=\"_blank\">SetPixel</a> methods to access pixels using x,y coordinates. Unfortunately, this method is extremely slow. When we call this method repeatedly it causes the application to become noticeably sluggish. </p>\n<p>Luckily, there is another way to manipulate pixel data. If we can convert our x,y coordinates into an array notation, then we can call <a href=\"http://msdn.microsoft.com/en-us/library/5ey6h79d.aspx\" title=\"LockBits\" target=\"_blank\">LockBits</a> and access the raw data without any noticeable slowdown. </p>\n<p>The array that is set by LockBits includes the color components of each pixel as defined by the ImageFormat. To find the location of a pixel in the array, you have to multiply the x coordinate by the width of the image an the width of the pixel data. The Bitmap object has a property called Stride which represents the width of the image multiplied by the number of bytes per pixel. You can calculate the array index of a pixel as (x * bitmap.Stride) + y.</p>\n<p>When we were using GetPixel and SetPixel, we had to convert the array position of the text into an x,y coordinate for the image. No, instead of converting it back, we can just go straight to the array. </p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">var bitmapData = image.LockBits( \n                new Rectangle(0, 0, image.Width, image.Height), \n                ImageLockMode.ReadWrite,\n                image.PixelFormat);\n\n            int length  = Math.Abs(bitmapData.Stride) * image.Height;\n            var rgbValues = new byte[length];\n\n            System.Runtime.InteropServices.Marshal.Copy(bitmapData.Scan0, rgbValues, 0, length);\n\n            for (var c = 0; c &lt; byteList.Count; c++)\n            {\n                if(!FastComputePixel(rgbValues, byteList, c, pixelsPerChar, Math.Abs(bitmapData.Stride) / bitmapData.Width))\n                    break;\n            }\n\n            System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, bitmapData.Scan0, length);\n            image.UnlockBits(bitmapData);\n</pre>\n\n<p>The two calls to Marshal.Copy copies the image data to an array that we can manipulate and then copies it back into the image.</p>\n<p>And FastComputePixel doesn&#8217;t have to make any calls to the Bitmap object.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool FastComputePixel(byte[] rgbValues, byte b, int c, int pixelsPerChar, int bytesPerPixel)\n        {\n            var partial = b/pixelsPerChar;\n            var last = b - (partial*(pixelsPerChar-1));\n            var partialBytes = Enumerable.Repeat(partial, pixelsPerChar - 1).ToList();\n            partialBytes.Add(last);\n            for (var i = 0; i &lt; pixelsPerChar; i++)\n            {\n                var pixel = ((c*pixelsPerChar) + i)*bytesPerPixel;\n                if (pixel &gt;= rgbValues.Length)\n                    return false;\n\n                var red = rgbValues[pixel];\n                var blue = rgbValues[pixel + 2];\n\n                var green = (red + blue)/2;\n                if (green &gt;= 128)\n                    green -= partialBytes[i];\n                else\n                    green += partialBytes[i];\n\n                rgbValues[pixel + 1] = (byte)green;\n            }\n            return true;\n        }\n</pre>\n\n<p>We just call LockBits, manipulate the image data array, and UnlockBits.</p>\n<p>You should notice the application is much more responsive!</p>\n","excerpt":"<p>In <a href=\"/image-processing-part-1/\" title=\"Image Processing Part 1\">Image Processing Part 1</a> I talked about methods for manipulation image data. If you tried out the <a href=\"https://github.com/nathanrobinson/ImageTextEncoder\" title=\"ImageTextEncoder\" target=\"_blank\">code</a> then you might have noticed it ran really slow.</p>","more":"<p>Usually, when working with image data it is easier to conceptualize pixel locations in x,y coordinates. I used a System.Drawing.Bitmap to hold the image data, which provides the <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.getpixel.aspx\" title=\"GetPixel\" target=\"_blank\">GetPixel</a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.setpixel.aspx\" title=\"SetPixel\" target=\"_blank\">SetPixel</a> methods to access pixels using x,y coordinates. Unfortunately, this method is extremely slow. When we call this method repeatedly it causes the application to become noticeably sluggish. </p>\n<p>Luckily, there is another way to manipulate pixel data. If we can convert our x,y coordinates into an array notation, then we can call <a href=\"http://msdn.microsoft.com/en-us/library/5ey6h79d.aspx\" title=\"LockBits\" target=\"_blank\">LockBits</a> and access the raw data without any noticeable slowdown. </p>\n<p>The array that is set by LockBits includes the color components of each pixel as defined by the ImageFormat. To find the location of a pixel in the array, you have to multiply the x coordinate by the width of the image an the width of the pixel data. The Bitmap object has a property called Stride which represents the width of the image multiplied by the number of bytes per pixel. You can calculate the array index of a pixel as (x * bitmap.Stride) + y.</p>\n<p>When we were using GetPixel and SetPixel, we had to convert the array position of the text into an x,y coordinate for the image. No, instead of converting it back, we can just go straight to the array. </p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">var bitmapData = image.LockBits( \n                new Rectangle(0, 0, image.Width, image.Height), \n                ImageLockMode.ReadWrite,\n                image.PixelFormat);\n\n            int length  = Math.Abs(bitmapData.Stride) * image.Height;\n            var rgbValues = new byte[length];\n\n            System.Runtime.InteropServices.Marshal.Copy(bitmapData.Scan0, rgbValues, 0, length);\n\n            for (var c = 0; c &lt; byteList.Count; c++)\n            {\n                if(!FastComputePixel(rgbValues, byteList, c, pixelsPerChar, Math.Abs(bitmapData.Stride) / bitmapData.Width))\n                    break;\n            }\n\n            System.Runtime.InteropServices.Marshal.Copy(rgbValues, 0, bitmapData.Scan0, length);\n            image.UnlockBits(bitmapData);\n</pre>\n\n<p>The two calls to Marshal.Copy copies the image data to an array that we can manipulate and then copies it back into the image.</p>\n<p>And FastComputePixel doesn&#8217;t have to make any calls to the Bitmap object.</p>\n<pre class=\"brush: csharp; title: ; notranslate\" title=\"\">private static bool FastComputePixel(byte[] rgbValues, byte b, int c, int pixelsPerChar, int bytesPerPixel)\n        {\n            var partial = b/pixelsPerChar;\n            var last = b - (partial*(pixelsPerChar-1));\n            var partialBytes = Enumerable.Repeat(partial, pixelsPerChar - 1).ToList();\n            partialBytes.Add(last);\n            for (var i = 0; i &lt; pixelsPerChar; i++)\n            {\n                var pixel = ((c*pixelsPerChar) + i)*bytesPerPixel;\n                if (pixel &gt;= rgbValues.Length)\n                    return false;\n\n                var red = rgbValues[pixel];\n                var blue = rgbValues[pixel + 2];\n\n                var green = (red + blue)/2;\n                if (green &gt;= 128)\n                    green -= partialBytes[i];\n                else\n                    green += partialBytes[i];\n\n                rgbValues[pixel + 1] = (byte)green;\n            }\n            return true;\n        }\n</pre>\n\n<p>We just call LockBits, manipulate the image data array, and UnlockBits.</p>\n<p>You should notice the application is much more responsive!</p>"},{"title":"Fun with knockout.js","author":"nathan","type":"post","date":"2013-03-04T09:49:19.000Z","url":"/fun-with-knockout-js/","comments":1,"_content":"A while ago I started looking into <a title=\"knockout.js\" href=\"http://knockoutjs.com/\" target=\"_blank\">knockout.js</a> for an internal MVC website that I&#8217;m working on. Originally I was trying to solve the problem of a very large DOM that only displays a fraction of itself at any time. Knockout handles this very nicely with it&#8217;s <a title=\"if binding\" href=\"http://knockoutjs.com/documentation/if-binding.html\" target=\"_blank\">if binding</a>. The more I used knockout, however, the more I fell in love with the <a title=\"MVVM\" href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\" target=\"_blank\">MVVM pattern</a>. In fact, if xaml bindings were as easy as knockout bindings, I wouldn&#8217;t be so hesitant to jump into WPF programming!\n  \n<!--more-->\n\n\n  \nThe power of MVVM is the ability to have your view model handle your logic in code without having the complex interaction with your html DOM that is required by jQuery. As an example, I recreated a jQuery <a href=\"http://www.datatables.net/\" target=\"_blank\">DataTable</a> using only <a href=\"http://jsfiddle.net/vdrzv/4/\" target=\"_blank\">knockout bindings</a>.\n\nOne typical need when using MVVM is to take action on the UI when a value is updated. I have two scenarios and four different binding strategies in this <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example</a>.\n\nIn the first two bindings we will validate that the text entered is numeric. If it isn&#8217;t, then an error will be displayed to the user until the entry is corrected. In the last two bindings, the entry will be validated and invalid entries will be immediately replaced with &#8220;0&#8221;.\n\nThe first binding will be the most familiar to users of jQuery. When your model is tightly coupled with your UI, you create events that fire when the user interacts with a DOM node and then do some action inside that event. In jQuery, validating user input would look something like this:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">$('input').on('change', function(){\n    if(isInvalid(this.val()))\n        handleInvalidValues(this);\n});\n</pre>\n\nThe equivalent in knockout is:\n\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;input type=\"text\" data-bind=\"value: number1, valueUpdate: 'afterkeydown', event: { change: validateNumber1 }, css: { error : !number1valid() }\" /&gt;\n</pre>\n\n&nbsp;\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number1 = ko.observable(0);\n self.number1valid = ko.observable(true);\n self.validateNumber1 = function () {\n self.number1valid(!isNaN(self.number1()));\n };\n</pre>\n\nthe &#8220;event: { change: validateNumber1 }&#8221; calls the validateNumber1 function on your ViewModel whenever the input is changed.\n  \nIn Test 1 in the <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example fiddle</a>, the update doesn&#8217;t occur until you leave the textbox. To make better use of the MVVM pattern, you have to stop thinking about the UI controlling the flow of you model and start envisioning the ViewModel controlling the flow of your UI. Knockout will do all the work of updating your ViewModel based on user input and will update you UI based on what your ViewModel does with that input. This makes for some very powerful and simple design even sans jQuery.\n  \nCompare the performance of Test 1 with Test 2. Test 2 immediately displays an error message when an invalid character is typed and immediately removes the error when the input is corrected. Knockout does all the heavy lifting for us. All we do is define what is valid by using a computed observable function. As soon as our observable is updated, knockout checks the computed observables that are dependent on it and updates the UI if they change. No events need to be fired. No special methods need to be called. And the update is immediate.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number2 = ko.observable(0);\n    self.number2valid = ko.computed(function () {\n        return !isNaN(self.number2());\n</pre>\n\nAs you can see, the code is much simpler, too.\n\nC# programmers may recognize the third binding style as a property with a backing field.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self._number3 = ko.observable(0);\n    self.number3 = ko.computed({\n        read: function () {\n            return self._number3();\n        },\n        write: function (value) {\n            self._number3(value);\n            if (isNaN(value)) self._number3(0);\n        },\n        owner: self\n    });\n</pre>\n\nWe use the computed to intercept, validate, and possibly modify the incoming value. The odd part about updating the backing field before validating is an artifact of how knockout updates the ui. If we set \\_number3 to 0 when the incoming value was invalid (say &#8220;0G&#8221; for example) if \\_number3 was already 0, then knockout will not see a need to update the ui. This will leave what the user typed in the text box. To work around this, we set _number3 to whatever the user entered and then if it&#8217;s invalid, we set it to 0, so knockout will immediately update the text box value back to 0.\n\nThe final binding monitors the input in a simpler fashion.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number4 = ko.observable(0);\n    self.number4.subscribe(function () {\n        if (isNaN(self.number4())) self.number4(0);\n    });\n</pre>\n\nInstead of intercepting the value, we subscribe to the observable and validate on any change. We don&#8217;t require an extra backing field, and the code is much simpler. Both Test 3 and Test 4 work equally well, but Test 4 is simpler to understand and code. \n\nWhile all 4 examples work, Test 1 is too dependent on the ui bindings to be a good implementation of MVVM. If you don&#8217;t add the event binding to call your validation function, then none of your validation will happen. The method used in Test 2 is simpler to understand and more reliable because validation will always happen automatically. Test 3 is an example of carryover from a C# mindset and doesn&#8217;t take full advantage of the power of the knockout implementation of MVVM. It&#8217;s OK to subscribe to your ow properties and can greatly simplify your ViewModel.\n\nI hope this little look into the knockout MVVM library. I really dig it and look forward to using it more.\n","source":"_posts/2013-03-03-fun-with-knockout-js.md","raw":"---\ntitle: Fun with knockout.js\nauthor: nathan\ntype: post\ndate: 2013-03-04T03:49:19+00:00\nurl: /fun-with-knockout-js/\ncomments: true\ncategories:\n  - Code\n  - JavaScript\ntags:\n  - JavaScript\n  - MVVM\n  - knockout.js\n\n---\nA while ago I started looking into <a title=\"knockout.js\" href=\"http://knockoutjs.com/\" target=\"_blank\">knockout.js</a> for an internal MVC website that I&#8217;m working on. Originally I was trying to solve the problem of a very large DOM that only displays a fraction of itself at any time. Knockout handles this very nicely with it&#8217;s <a title=\"if binding\" href=\"http://knockoutjs.com/documentation/if-binding.html\" target=\"_blank\">if binding</a>. The more I used knockout, however, the more I fell in love with the <a title=\"MVVM\" href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\" target=\"_blank\">MVVM pattern</a>. In fact, if xaml bindings were as easy as knockout bindings, I wouldn&#8217;t be so hesitant to jump into WPF programming!\n  \n<!--more-->\n\n\n  \nThe power of MVVM is the ability to have your view model handle your logic in code without having the complex interaction with your html DOM that is required by jQuery. As an example, I recreated a jQuery <a href=\"http://www.datatables.net/\" target=\"_blank\">DataTable</a> using only <a href=\"http://jsfiddle.net/vdrzv/4/\" target=\"_blank\">knockout bindings</a>.\n\nOne typical need when using MVVM is to take action on the UI when a value is updated. I have two scenarios and four different binding strategies in this <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example</a>.\n\nIn the first two bindings we will validate that the text entered is numeric. If it isn&#8217;t, then an error will be displayed to the user until the entry is corrected. In the last two bindings, the entry will be validated and invalid entries will be immediately replaced with &#8220;0&#8221;.\n\nThe first binding will be the most familiar to users of jQuery. When your model is tightly coupled with your UI, you create events that fire when the user interacts with a DOM node and then do some action inside that event. In jQuery, validating user input would look something like this:\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">$('input').on('change', function(){\n    if(isInvalid(this.val()))\n        handleInvalidValues(this);\n});\n</pre>\n\nThe equivalent in knockout is:\n\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;input type=\"text\" data-bind=\"value: number1, valueUpdate: 'afterkeydown', event: { change: validateNumber1 }, css: { error : !number1valid() }\" /&gt;\n</pre>\n\n&nbsp;\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number1 = ko.observable(0);\n self.number1valid = ko.observable(true);\n self.validateNumber1 = function () {\n self.number1valid(!isNaN(self.number1()));\n };\n</pre>\n\nthe &#8220;event: { change: validateNumber1 }&#8221; calls the validateNumber1 function on your ViewModel whenever the input is changed.\n  \nIn Test 1 in the <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example fiddle</a>, the update doesn&#8217;t occur until you leave the textbox. To make better use of the MVVM pattern, you have to stop thinking about the UI controlling the flow of you model and start envisioning the ViewModel controlling the flow of your UI. Knockout will do all the work of updating your ViewModel based on user input and will update you UI based on what your ViewModel does with that input. This makes for some very powerful and simple design even sans jQuery.\n  \nCompare the performance of Test 1 with Test 2. Test 2 immediately displays an error message when an invalid character is typed and immediately removes the error when the input is corrected. Knockout does all the heavy lifting for us. All we do is define what is valid by using a computed observable function. As soon as our observable is updated, knockout checks the computed observables that are dependent on it and updates the UI if they change. No events need to be fired. No special methods need to be called. And the update is immediate.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number2 = ko.observable(0);\n    self.number2valid = ko.computed(function () {\n        return !isNaN(self.number2());\n</pre>\n\nAs you can see, the code is much simpler, too.\n\nC# programmers may recognize the third binding style as a property with a backing field.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self._number3 = ko.observable(0);\n    self.number3 = ko.computed({\n        read: function () {\n            return self._number3();\n        },\n        write: function (value) {\n            self._number3(value);\n            if (isNaN(value)) self._number3(0);\n        },\n        owner: self\n    });\n</pre>\n\nWe use the computed to intercept, validate, and possibly modify the incoming value. The odd part about updating the backing field before validating is an artifact of how knockout updates the ui. If we set \\_number3 to 0 when the incoming value was invalid (say &#8220;0G&#8221; for example) if \\_number3 was already 0, then knockout will not see a need to update the ui. This will leave what the user typed in the text box. To work around this, we set _number3 to whatever the user entered and then if it&#8217;s invalid, we set it to 0, so knockout will immediately update the text box value back to 0.\n\nThe final binding monitors the input in a simpler fashion.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number4 = ko.observable(0);\n    self.number4.subscribe(function () {\n        if (isNaN(self.number4())) self.number4(0);\n    });\n</pre>\n\nInstead of intercepting the value, we subscribe to the observable and validate on any change. We don&#8217;t require an extra backing field, and the code is much simpler. Both Test 3 and Test 4 work equally well, but Test 4 is simpler to understand and code. \n\nWhile all 4 examples work, Test 1 is too dependent on the ui bindings to be a good implementation of MVVM. If you don&#8217;t add the event binding to call your validation function, then none of your validation will happen. The method used in Test 2 is simpler to understand and more reliable because validation will always happen automatically. Test 3 is an example of carryover from a C# mindset and doesn&#8217;t take full advantage of the power of the knockout implementation of MVVM. It&#8217;s OK to subscribe to your ow properties and can greatly simplify your ViewModel.\n\nI hope this little look into the knockout MVVM library. I really dig it and look forward to using it more.\n","slug":"fun-with-knockout-js","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkd00058buydblnax90","content":"<p>A while ago I started looking into <a title=\"knockout.js\" href=\"http://knockoutjs.com/\" target=\"_blank\">knockout.js</a> for an internal MVC website that I&#8217;m working on. Originally I was trying to solve the problem of a very large DOM that only displays a fraction of itself at any time. Knockout handles this very nicely with it&#8217;s <a title=\"if binding\" href=\"http://knockoutjs.com/documentation/if-binding.html\" target=\"_blank\">if binding</a>. The more I used knockout, however, the more I fell in love with the <a title=\"MVVM\" href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\" target=\"_blank\">MVVM pattern</a>. In fact, if xaml bindings were as easy as knockout bindings, I wouldn&#8217;t be so hesitant to jump into WPF programming!</p>\n<a id=\"more\"></a>\n<p>The power of MVVM is the ability to have your view model handle your logic in code without having the complex interaction with your html DOM that is required by jQuery. As an example, I recreated a jQuery <a href=\"http://www.datatables.net/\" target=\"_blank\">DataTable</a> using only <a href=\"http://jsfiddle.net/vdrzv/4/\" target=\"_blank\">knockout bindings</a>.</p>\n<p>One typical need when using MVVM is to take action on the UI when a value is updated. I have two scenarios and four different binding strategies in this <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example</a>.</p>\n<p>In the first two bindings we will validate that the text entered is numeric. If it isn&#8217;t, then an error will be displayed to the user until the entry is corrected. In the last two bindings, the entry will be validated and invalid entries will be immediately replaced with &#8220;0&#8221;.</p>\n<p>The first binding will be the most familiar to users of jQuery. When your model is tightly coupled with your UI, you create events that fire when the user interacts with a DOM node and then do some action inside that event. In jQuery, validating user input would look something like this:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">$('input').on('change', function(){\n    if(isInvalid(this.val()))\n        handleInvalidValues(this);\n});\n</pre>\n\n<p>The equivalent in knockout is:</p>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;input type=\"text\" data-bind=\"value: number1, valueUpdate: 'afterkeydown', event: { change: validateNumber1 }, css: { error : !number1valid() }\" /&gt;\n</pre>\n\n<p>&nbsp;</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number1 = ko.observable(0);\n self.number1valid = ko.observable(true);\n self.validateNumber1 = function () {\n self.number1valid(!isNaN(self.number1()));\n };\n</pre>\n\n<p>the &#8220;event: { change: validateNumber1 }&#8221; calls the validateNumber1 function on your ViewModel whenever the input is changed.</p>\n<p>In Test 1 in the <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example fiddle</a>, the update doesn&#8217;t occur until you leave the textbox. To make better use of the MVVM pattern, you have to stop thinking about the UI controlling the flow of you model and start envisioning the ViewModel controlling the flow of your UI. Knockout will do all the work of updating your ViewModel based on user input and will update you UI based on what your ViewModel does with that input. This makes for some very powerful and simple design even sans jQuery.</p>\n<p>Compare the performance of Test 1 with Test 2. Test 2 immediately displays an error message when an invalid character is typed and immediately removes the error when the input is corrected. Knockout does all the heavy lifting for us. All we do is define what is valid by using a computed observable function. As soon as our observable is updated, knockout checks the computed observables that are dependent on it and updates the UI if they change. No events need to be fired. No special methods need to be called. And the update is immediate.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number2 = ko.observable(0);\n    self.number2valid = ko.computed(function () {\n        return !isNaN(self.number2());\n</pre>\n\n<p>As you can see, the code is much simpler, too.</p>\n<p>C# programmers may recognize the third binding style as a property with a backing field.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self._number3 = ko.observable(0);\n    self.number3 = ko.computed({\n        read: function () {\n            return self._number3();\n        },\n        write: function (value) {\n            self._number3(value);\n            if (isNaN(value)) self._number3(0);\n        },\n        owner: self\n    });\n</pre>\n\n<p>We use the computed to intercept, validate, and possibly modify the incoming value. The odd part about updating the backing field before validating is an artifact of how knockout updates the ui. If we set _number3 to 0 when the incoming value was invalid (say &#8220;0G&#8221; for example) if _number3 was already 0, then knockout will not see a need to update the ui. This will leave what the user typed in the text box. To work around this, we set _number3 to whatever the user entered and then if it&#8217;s invalid, we set it to 0, so knockout will immediately update the text box value back to 0.</p>\n<p>The final binding monitors the input in a simpler fashion.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number4 = ko.observable(0);\n    self.number4.subscribe(function () {\n        if (isNaN(self.number4())) self.number4(0);\n    });\n</pre>\n\n<p>Instead of intercepting the value, we subscribe to the observable and validate on any change. We don&#8217;t require an extra backing field, and the code is much simpler. Both Test 3 and Test 4 work equally well, but Test 4 is simpler to understand and code. </p>\n<p>While all 4 examples work, Test 1 is too dependent on the ui bindings to be a good implementation of MVVM. If you don&#8217;t add the event binding to call your validation function, then none of your validation will happen. The method used in Test 2 is simpler to understand and more reliable because validation will always happen automatically. Test 3 is an example of carryover from a C# mindset and doesn&#8217;t take full advantage of the power of the knockout implementation of MVVM. It&#8217;s OK to subscribe to your ow properties and can greatly simplify your ViewModel.</p>\n<p>I hope this little look into the knockout MVVM library. I really dig it and look forward to using it more.</p>\n","excerpt":"<p>A while ago I started looking into <a title=\"knockout.js\" href=\"http://knockoutjs.com/\" target=\"_blank\">knockout.js</a> for an internal MVC website that I&#8217;m working on. Originally I was trying to solve the problem of a very large DOM that only displays a fraction of itself at any time. Knockout handles this very nicely with it&#8217;s <a title=\"if binding\" href=\"http://knockoutjs.com/documentation/if-binding.html\" target=\"_blank\">if binding</a>. The more I used knockout, however, the more I fell in love with the <a title=\"MVVM\" href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\" target=\"_blank\">MVVM pattern</a>. In fact, if xaml bindings were as easy as knockout bindings, I wouldn&#8217;t be so hesitant to jump into WPF programming!</p>","more":"<p>The power of MVVM is the ability to have your view model handle your logic in code without having the complex interaction with your html DOM that is required by jQuery. As an example, I recreated a jQuery <a href=\"http://www.datatables.net/\" target=\"_blank\">DataTable</a> using only <a href=\"http://jsfiddle.net/vdrzv/4/\" target=\"_blank\">knockout bindings</a>.</p>\n<p>One typical need when using MVVM is to take action on the UI when a value is updated. I have two scenarios and four different binding strategies in this <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example</a>.</p>\n<p>In the first two bindings we will validate that the text entered is numeric. If it isn&#8217;t, then an error will be displayed to the user until the entry is corrected. In the last two bindings, the entry will be validated and invalid entries will be immediately replaced with &#8220;0&#8221;.</p>\n<p>The first binding will be the most familiar to users of jQuery. When your model is tightly coupled with your UI, you create events that fire when the user interacts with a DOM node and then do some action inside that event. In jQuery, validating user input would look something like this:</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">$('input').on('change', function(){\n    if(isInvalid(this.val()))\n        handleInvalidValues(this);\n});\n</pre>\n\n<p>The equivalent in knockout is:</p>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;input type=\"text\" data-bind=\"value: number1, valueUpdate: 'afterkeydown', event: { change: validateNumber1 }, css: { error : !number1valid() }\" /&gt;\n</pre>\n\n<p>&nbsp;</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number1 = ko.observable(0);\n self.number1valid = ko.observable(true);\n self.validateNumber1 = function () {\n self.number1valid(!isNaN(self.number1()));\n };\n</pre>\n\n<p>the &#8220;event: { change: validateNumber1 }&#8221; calls the validateNumber1 function on your ViewModel whenever the input is changed.</p>\n<p>In Test 1 in the <a title=\"jsFiddle\" href=\"http://jsfiddle.net/W2heu/\" target=\"_blank\">example fiddle</a>, the update doesn&#8217;t occur until you leave the textbox. To make better use of the MVVM pattern, you have to stop thinking about the UI controlling the flow of you model and start envisioning the ViewModel controlling the flow of your UI. Knockout will do all the work of updating your ViewModel based on user input and will update you UI based on what your ViewModel does with that input. This makes for some very powerful and simple design even sans jQuery.</p>\n<p>Compare the performance of Test 1 with Test 2. Test 2 immediately displays an error message when an invalid character is typed and immediately removes the error when the input is corrected. Knockout does all the heavy lifting for us. All we do is define what is valid by using a computed observable function. As soon as our observable is updated, knockout checks the computed observables that are dependent on it and updates the UI if they change. No events need to be fired. No special methods need to be called. And the update is immediate.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number2 = ko.observable(0);\n    self.number2valid = ko.computed(function () {\n        return !isNaN(self.number2());\n</pre>\n\n<p>As you can see, the code is much simpler, too.</p>\n<p>C# programmers may recognize the third binding style as a property with a backing field.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self._number3 = ko.observable(0);\n    self.number3 = ko.computed({\n        read: function () {\n            return self._number3();\n        },\n        write: function (value) {\n            self._number3(value);\n            if (isNaN(value)) self._number3(0);\n        },\n        owner: self\n    });\n</pre>\n\n<p>We use the computed to intercept, validate, and possibly modify the incoming value. The odd part about updating the backing field before validating is an artifact of how knockout updates the ui. If we set _number3 to 0 when the incoming value was invalid (say &#8220;0G&#8221; for example) if _number3 was already 0, then knockout will not see a need to update the ui. This will leave what the user typed in the text box. To work around this, we set _number3 to whatever the user entered and then if it&#8217;s invalid, we set it to 0, so knockout will immediately update the text box value back to 0.</p>\n<p>The final binding monitors the input in a simpler fashion.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.number4 = ko.observable(0);\n    self.number4.subscribe(function () {\n        if (isNaN(self.number4())) self.number4(0);\n    });\n</pre>\n\n<p>Instead of intercepting the value, we subscribe to the observable and validate on any change. We don&#8217;t require an extra backing field, and the code is much simpler. Both Test 3 and Test 4 work equally well, but Test 4 is simpler to understand and code. </p>\n<p>While all 4 examples work, Test 1 is too dependent on the ui bindings to be a good implementation of MVVM. If you don&#8217;t add the event binding to call your validation function, then none of your validation will happen. The method used in Test 2 is simpler to understand and more reliable because validation will always happen automatically. Test 3 is an example of carryover from a C# mindset and doesn&#8217;t take full advantage of the power of the knockout implementation of MVVM. It&#8217;s OK to subscribe to your ow properties and can greatly simplify your ViewModel.</p>\n<p>I hope this little look into the knockout MVVM library. I really dig it and look forward to using it more.</p>"},{"title":"Automatic Paging with Knockout data-bindings","author":"nathan","type":"post","date":"2013-09-04T01:55:38.000Z","url":"/automatic-paging-with-knockout-data-bindings/","comments":1,"_content":"I&#8217;ve been a heavy user of <a title=\"Knockout JS\" href=\"http://knockoutjs.com/\" target=\"_blank\">Knockout JS</a> and MVVM with JavaScript for over a year and I&#8217;ve found most designs can be achieved with the basic data-bindings. There are two scenarios that I have found which require specialized bindings. The first is a select box with numerous options. The second is a long list of data that doesn&#8217;t fit on a single screen.<!--more-->\n\nI prefer to use the <a title=\"chosen jQuery plugin\" href=\"http://harvesthq.github.io/chosen/\" target=\"_blank\">chosen jQuery plugin</a> to manage unwieldy select boxes. The problem is combining the jQuery plugin with Knockout data-binding. For this I use a <a title=\"Knockout Binding Extension For Chosen\" href=\"http://www.nuget.org/packages/cb.ko.binding.chosen/\" target=\"_blank\">Knockout Binding Extension For Chosen</a>. One caveat on this binding is that it can take a while to bind. If you have multiple select boxes with large amounts of data displaying dynamically, you can notice a significant delay. I ran into this problem when binding to an editable grid. The entire grid would display with the select boxes hidden until the user selects that row for editing. The grid would lag by up to 10 seconds while all the select boxes rendered using the chosen plugin. To speed up the grid I wrapped each select box in a span with an &#8220;if&#8221; binding. This kept the select boxes from rendering until the user actually edited that row. Since only one row&#8217;s worth of select boxes were being rendered instead of all rows, the delay wasn&#8217;t as noticeable.\n\nThe long list of data that doesn&#8217;t fit on a single screen is a much different problem. To solve this I wanted a paging solution similar to the <a title=\"Data Tables plugin\" href=\"https://datatables.net/\" target=\"_blank\">data tables plugin for jQuery</a>.\n\n<a title=\"Data Tables\" href=\"http://screencast.com/t/2ZJlLiT6j\" target=\"_blank\"><img class=\"embeddedObject\" alt=\"\" src=\"http://content.screencast.com/users/NathanJRobinson/folders/Jing/media/a81333be-7527-49b9-a5c4-fd9a26a8a0cb/2013-09-02_1711-thumb.png\" width=\"400\" height=\"162\" border=\"0\" /></a>\n\nThe important functionality that I wanted were the ability to change the page size, the page links, and of course, the actual paging. Originally, I started out building the paging mechanics directly into my view models, but this created a lot of duplication both in the view model and in the html. My next step was to pull the paging functions out of the view model and put them into a base model that could extend any view model with paging functionality. It turns out the paging functionality is easy to encapsulate; for any paged list, you need to track the current page, the number of items per page, and the total number of items. From there it&#8217;s fairly simple to calculate the items to display on the current page.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.page = ko.observable(1);\n\n    self.itemsPerPage = ko.observable(10);\n\n    self.totalPages = ko.computed(function () {\n                var array = observableArray();\n                return Math.ceil(array.length / self.itemsPerPage());\n            });\n\n    self.pagedItems = ko.computed(function () {\n                var array = observableArray();\n                var indexOfFirstItemOnCurrentPage = (((self.page() * 1) - 1) * (self.itemsPerPage() * 1));\n                var pageArray = array.slice(indexOfFirstItemOnCurrentPage, indexOfFirstItemOnCurrentPage + (self.itemsPerPage()* 1));\n                return pageArray;\n            });\n</pre>\n\nThe problem of repeating the html for the knockout binding isn&#8217;t solved with a view model, though. What I really wanted was a drop-in replacement for the foreach binding that would work on any list and would wrap up all the paging functionality. There is a <a title=\"SimpleGrid\" href=\"https://github.com/knockout/knockout/tree/gh-pages/examples/resources\" target=\"_blank\">SimpleGrid</a> knockout binding that does paging, but it replaces the current html node with its own idea of how your data should be rendered. I wanted to use the inline template that the foreach binding uses so that I could page a table, an un-ordered list, or a bunch of divs. In order to be a true drop-in replacement for foreach, I had to separate out the three elements of the pager: the page size control, the paged items, and the page links. I call my pager binding like so:\n\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;div id=\"testBinding\"&gt;\n            &lt;div data-bind=\"pageSizeControl: observableArray, pageSize: pageSize\"&gt;&lt;/div&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;&lt;th&gt;$index&lt;/th&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Page Size&lt;/th&gt;&lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody data-bind=\"pagedForeach: observableArray\"&gt;\n                    &lt;tr&gt;\n                        &lt;td data-bind=\"text: $index\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: key\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: value\"&gt;&lt;/td&gt;\n                        &lt;td class=\"parentPageSize\" data-bind=\"text: $parent.pageSize\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n            &lt;div data-bind=\"pageLinks: observableArray\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n</pre>\n\nI have four bindings that I can choose from which give me detailed control over the paging while also letting me reuse the code in a modular way. \n\n<pre>pagedForeach: displays the current page of items\n    pageLinks: displays the first page, last page, and page number navigation links\n    pageSizeControl: displays a select box with four standard page sizes to choose from\n    pageSize: lets your view model control the page size directly\n</pre>\n\nI checked in the binding to github as <a href=\"https://github.com/nathanrobinson/knockout.pager\" title=\"knockout.pager\" target=\"_blank\">knockout.pager</a>. I then used <a href=\"http://www.myget.org/\" title=\"myGet\" target=\"_blank\">myGet </a>to package the files and upload them to <a href=\"http://www.nuget.org/packages/knockout.pager/\" title=\"knockout.pager\" target=\"_blank\">nuGet</a>. I also built several <a href=\"https://rawgithub.com/nathanrobinson/knockout.pager/master/tests.html\" title=\"unit tests\" target=\"_blank\">unit tests</a>. One thing you may notice is that in my bindings I attach the paging view model to the array. This is because the other bindings can see the same view model. In order to work correctly, the bindings have to interact with the same view model. Rather than calling the foreach binding from my binding, I looked at the knockout source and so that foreach is simply a wrapper for the template binding, so I call the template binding directly. I also used the same method of generating templates for the page links and pager size controls that the SimpleGrid binding used.\n","source":"_posts/2013-09-03-automatic-paging-with-knockout-data-bindings.md","raw":"---\ntitle: Automatic Paging with Knockout data-bindings\nauthor: nathan\ntype: post\ndate: 2013-09-03T20:55:38+00:00\nurl: /automatic-paging-with-knockout-data-bindings/\ncomments: true\ncategories:\n  - Code\n  - JavaScript\n  - Knockout\ntags:\n  - JavaScript\n  - MVVM\n  - knockout.js\n\n---\nI&#8217;ve been a heavy user of <a title=\"Knockout JS\" href=\"http://knockoutjs.com/\" target=\"_blank\">Knockout JS</a> and MVVM with JavaScript for over a year and I&#8217;ve found most designs can be achieved with the basic data-bindings. There are two scenarios that I have found which require specialized bindings. The first is a select box with numerous options. The second is a long list of data that doesn&#8217;t fit on a single screen.<!--more-->\n\nI prefer to use the <a title=\"chosen jQuery plugin\" href=\"http://harvesthq.github.io/chosen/\" target=\"_blank\">chosen jQuery plugin</a> to manage unwieldy select boxes. The problem is combining the jQuery plugin with Knockout data-binding. For this I use a <a title=\"Knockout Binding Extension For Chosen\" href=\"http://www.nuget.org/packages/cb.ko.binding.chosen/\" target=\"_blank\">Knockout Binding Extension For Chosen</a>. One caveat on this binding is that it can take a while to bind. If you have multiple select boxes with large amounts of data displaying dynamically, you can notice a significant delay. I ran into this problem when binding to an editable grid. The entire grid would display with the select boxes hidden until the user selects that row for editing. The grid would lag by up to 10 seconds while all the select boxes rendered using the chosen plugin. To speed up the grid I wrapped each select box in a span with an &#8220;if&#8221; binding. This kept the select boxes from rendering until the user actually edited that row. Since only one row&#8217;s worth of select boxes were being rendered instead of all rows, the delay wasn&#8217;t as noticeable.\n\nThe long list of data that doesn&#8217;t fit on a single screen is a much different problem. To solve this I wanted a paging solution similar to the <a title=\"Data Tables plugin\" href=\"https://datatables.net/\" target=\"_blank\">data tables plugin for jQuery</a>.\n\n<a title=\"Data Tables\" href=\"http://screencast.com/t/2ZJlLiT6j\" target=\"_blank\"><img class=\"embeddedObject\" alt=\"\" src=\"http://content.screencast.com/users/NathanJRobinson/folders/Jing/media/a81333be-7527-49b9-a5c4-fd9a26a8a0cb/2013-09-02_1711-thumb.png\" width=\"400\" height=\"162\" border=\"0\" /></a>\n\nThe important functionality that I wanted were the ability to change the page size, the page links, and of course, the actual paging. Originally, I started out building the paging mechanics directly into my view models, but this created a lot of duplication both in the view model and in the html. My next step was to pull the paging functions out of the view model and put them into a base model that could extend any view model with paging functionality. It turns out the paging functionality is easy to encapsulate; for any paged list, you need to track the current page, the number of items per page, and the total number of items. From there it&#8217;s fairly simple to calculate the items to display on the current page.\n\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.page = ko.observable(1);\n\n    self.itemsPerPage = ko.observable(10);\n\n    self.totalPages = ko.computed(function () {\n                var array = observableArray();\n                return Math.ceil(array.length / self.itemsPerPage());\n            });\n\n    self.pagedItems = ko.computed(function () {\n                var array = observableArray();\n                var indexOfFirstItemOnCurrentPage = (((self.page() * 1) - 1) * (self.itemsPerPage() * 1));\n                var pageArray = array.slice(indexOfFirstItemOnCurrentPage, indexOfFirstItemOnCurrentPage + (self.itemsPerPage()* 1));\n                return pageArray;\n            });\n</pre>\n\nThe problem of repeating the html for the knockout binding isn&#8217;t solved with a view model, though. What I really wanted was a drop-in replacement for the foreach binding that would work on any list and would wrap up all the paging functionality. There is a <a title=\"SimpleGrid\" href=\"https://github.com/knockout/knockout/tree/gh-pages/examples/resources\" target=\"_blank\">SimpleGrid</a> knockout binding that does paging, but it replaces the current html node with its own idea of how your data should be rendered. I wanted to use the inline template that the foreach binding uses so that I could page a table, an un-ordered list, or a bunch of divs. In order to be a true drop-in replacement for foreach, I had to separate out the three elements of the pager: the page size control, the paged items, and the page links. I call my pager binding like so:\n\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;div id=\"testBinding\"&gt;\n            &lt;div data-bind=\"pageSizeControl: observableArray, pageSize: pageSize\"&gt;&lt;/div&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;&lt;th&gt;$index&lt;/th&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Page Size&lt;/th&gt;&lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody data-bind=\"pagedForeach: observableArray\"&gt;\n                    &lt;tr&gt;\n                        &lt;td data-bind=\"text: $index\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: key\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: value\"&gt;&lt;/td&gt;\n                        &lt;td class=\"parentPageSize\" data-bind=\"text: $parent.pageSize\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n            &lt;div data-bind=\"pageLinks: observableArray\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n</pre>\n\nI have four bindings that I can choose from which give me detailed control over the paging while also letting me reuse the code in a modular way. \n\n<pre>pagedForeach: displays the current page of items\n    pageLinks: displays the first page, last page, and page number navigation links\n    pageSizeControl: displays a select box with four standard page sizes to choose from\n    pageSize: lets your view model control the page size directly\n</pre>\n\nI checked in the binding to github as <a href=\"https://github.com/nathanrobinson/knockout.pager\" title=\"knockout.pager\" target=\"_blank\">knockout.pager</a>. I then used <a href=\"http://www.myget.org/\" title=\"myGet\" target=\"_blank\">myGet </a>to package the files and upload them to <a href=\"http://www.nuget.org/packages/knockout.pager/\" title=\"knockout.pager\" target=\"_blank\">nuGet</a>. I also built several <a href=\"https://rawgithub.com/nathanrobinson/knockout.pager/master/tests.html\" title=\"unit tests\" target=\"_blank\">unit tests</a>. One thing you may notice is that in my bindings I attach the paging view model to the array. This is because the other bindings can see the same view model. In order to work correctly, the bindings have to interact with the same view model. Rather than calling the foreach binding from my binding, I looked at the knockout source and so that foreach is simply a wrapper for the template binding, so I call the template binding directly. I also used the same method of generating templates for the page links and pager size controls that the SimpleGrid binding used.\n","slug":"automatic-paging-with-knockout-data-bindings","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkg00068buyngdb1l1k","content":"<p>I&#8217;ve been a heavy user of <a title=\"Knockout JS\" href=\"http://knockoutjs.com/\" target=\"_blank\">Knockout JS</a> and MVVM with JavaScript for over a year and I&#8217;ve found most designs can be achieved with the basic data-bindings. There are two scenarios that I have found which require specialized bindings. The first is a select box with numerous options. The second is a long list of data that doesn&#8217;t fit on a single screen.<a id=\"more\"></a></p>\n<p>I prefer to use the <a title=\"chosen jQuery plugin\" href=\"http://harvesthq.github.io/chosen/\" target=\"_blank\">chosen jQuery plugin</a> to manage unwieldy select boxes. The problem is combining the jQuery plugin with Knockout data-binding. For this I use a <a title=\"Knockout Binding Extension For Chosen\" href=\"http://www.nuget.org/packages/cb.ko.binding.chosen/\" target=\"_blank\">Knockout Binding Extension For Chosen</a>. One caveat on this binding is that it can take a while to bind. If you have multiple select boxes with large amounts of data displaying dynamically, you can notice a significant delay. I ran into this problem when binding to an editable grid. The entire grid would display with the select boxes hidden until the user selects that row for editing. The grid would lag by up to 10 seconds while all the select boxes rendered using the chosen plugin. To speed up the grid I wrapped each select box in a span with an &#8220;if&#8221; binding. This kept the select boxes from rendering until the user actually edited that row. Since only one row&#8217;s worth of select boxes were being rendered instead of all rows, the delay wasn&#8217;t as noticeable.</p>\n<p>The long list of data that doesn&#8217;t fit on a single screen is a much different problem. To solve this I wanted a paging solution similar to the <a title=\"Data Tables plugin\" href=\"https://datatables.net/\" target=\"_blank\">data tables plugin for jQuery</a>.</p>\n<p><a title=\"Data Tables\" href=\"http://screencast.com/t/2ZJlLiT6j\" target=\"_blank\"><img class=\"embeddedObject\" alt=\"\" src=\"http://content.screencast.com/users/NathanJRobinson/folders/Jing/media/a81333be-7527-49b9-a5c4-fd9a26a8a0cb/2013-09-02_1711-thumb.png\" width=\"400\" height=\"162\" border=\"0\"></a></p>\n<p>The important functionality that I wanted were the ability to change the page size, the page links, and of course, the actual paging. Originally, I started out building the paging mechanics directly into my view models, but this created a lot of duplication both in the view model and in the html. My next step was to pull the paging functions out of the view model and put them into a base model that could extend any view model with paging functionality. It turns out the paging functionality is easy to encapsulate; for any paged list, you need to track the current page, the number of items per page, and the total number of items. From there it&#8217;s fairly simple to calculate the items to display on the current page.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.page = ko.observable(1);\n\n    self.itemsPerPage = ko.observable(10);\n\n    self.totalPages = ko.computed(function () {\n                var array = observableArray();\n                return Math.ceil(array.length / self.itemsPerPage());\n            });\n\n    self.pagedItems = ko.computed(function () {\n                var array = observableArray();\n                var indexOfFirstItemOnCurrentPage = (((self.page() * 1) - 1) * (self.itemsPerPage() * 1));\n                var pageArray = array.slice(indexOfFirstItemOnCurrentPage, indexOfFirstItemOnCurrentPage + (self.itemsPerPage()* 1));\n                return pageArray;\n            });\n</pre>\n\n<p>The problem of repeating the html for the knockout binding isn&#8217;t solved with a view model, though. What I really wanted was a drop-in replacement for the foreach binding that would work on any list and would wrap up all the paging functionality. There is a <a title=\"SimpleGrid\" href=\"https://github.com/knockout/knockout/tree/gh-pages/examples/resources\" target=\"_blank\">SimpleGrid</a> knockout binding that does paging, but it replaces the current html node with its own idea of how your data should be rendered. I wanted to use the inline template that the foreach binding uses so that I could page a table, an un-ordered list, or a bunch of divs. In order to be a true drop-in replacement for foreach, I had to separate out the three elements of the pager: the page size control, the paged items, and the page links. I call my pager binding like so:</p>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;div id=\"testBinding\"&gt;\n            &lt;div data-bind=\"pageSizeControl: observableArray, pageSize: pageSize\"&gt;&lt;/div&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;&lt;th&gt;$index&lt;/th&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Page Size&lt;/th&gt;&lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody data-bind=\"pagedForeach: observableArray\"&gt;\n                    &lt;tr&gt;\n                        &lt;td data-bind=\"text: $index\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: key\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: value\"&gt;&lt;/td&gt;\n                        &lt;td class=\"parentPageSize\" data-bind=\"text: $parent.pageSize\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n            &lt;div data-bind=\"pageLinks: observableArray\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n</pre>\n\n<p>I have four bindings that I can choose from which give me detailed control over the paging while also letting me reuse the code in a modular way. </p>\n<pre>pagedForeach: displays the current page of items\n    pageLinks: displays the first page, last page, and page number navigation links\n    pageSizeControl: displays a select box with four standard page sizes to choose from\n    pageSize: lets your view model control the page size directly\n</pre>\n\n<p>I checked in the binding to github as <a href=\"https://github.com/nathanrobinson/knockout.pager\" title=\"knockout.pager\" target=\"_blank\">knockout.pager</a>. I then used <a href=\"http://www.myget.org/\" title=\"myGet\" target=\"_blank\">myGet </a>to package the files and upload them to <a href=\"http://www.nuget.org/packages/knockout.pager/\" title=\"knockout.pager\" target=\"_blank\">nuGet</a>. I also built several <a href=\"https://rawgithub.com/nathanrobinson/knockout.pager/master/tests.html\" title=\"unit tests\" target=\"_blank\">unit tests</a>. One thing you may notice is that in my bindings I attach the paging view model to the array. This is because the other bindings can see the same view model. In order to work correctly, the bindings have to interact with the same view model. Rather than calling the foreach binding from my binding, I looked at the knockout source and so that foreach is simply a wrapper for the template binding, so I call the template binding directly. I also used the same method of generating templates for the page links and pager size controls that the SimpleGrid binding used.</p>\n","excerpt":"<p>I&#8217;ve been a heavy user of <a title=\"Knockout JS\" href=\"http://knockoutjs.com/\" target=\"_blank\">Knockout JS</a> and MVVM with JavaScript for over a year and I&#8217;ve found most designs can be achieved with the basic data-bindings. There are two scenarios that I have found which require specialized bindings. The first is a select box with numerous options. The second is a long list of data that doesn&#8217;t fit on a single screen.","more":"</p>\n<p>I prefer to use the <a title=\"chosen jQuery plugin\" href=\"http://harvesthq.github.io/chosen/\" target=\"_blank\">chosen jQuery plugin</a> to manage unwieldy select boxes. The problem is combining the jQuery plugin with Knockout data-binding. For this I use a <a title=\"Knockout Binding Extension For Chosen\" href=\"http://www.nuget.org/packages/cb.ko.binding.chosen/\" target=\"_blank\">Knockout Binding Extension For Chosen</a>. One caveat on this binding is that it can take a while to bind. If you have multiple select boxes with large amounts of data displaying dynamically, you can notice a significant delay. I ran into this problem when binding to an editable grid. The entire grid would display with the select boxes hidden until the user selects that row for editing. The grid would lag by up to 10 seconds while all the select boxes rendered using the chosen plugin. To speed up the grid I wrapped each select box in a span with an &#8220;if&#8221; binding. This kept the select boxes from rendering until the user actually edited that row. Since only one row&#8217;s worth of select boxes were being rendered instead of all rows, the delay wasn&#8217;t as noticeable.</p>\n<p>The long list of data that doesn&#8217;t fit on a single screen is a much different problem. To solve this I wanted a paging solution similar to the <a title=\"Data Tables plugin\" href=\"https://datatables.net/\" target=\"_blank\">data tables plugin for jQuery</a>.</p>\n<p><a title=\"Data Tables\" href=\"http://screencast.com/t/2ZJlLiT6j\" target=\"_blank\"><img class=\"embeddedObject\" alt=\"\" src=\"http://content.screencast.com/users/NathanJRobinson/folders/Jing/media/a81333be-7527-49b9-a5c4-fd9a26a8a0cb/2013-09-02_1711-thumb.png\" width=\"400\" height=\"162\" border=\"0\" /></a></p>\n<p>The important functionality that I wanted were the ability to change the page size, the page links, and of course, the actual paging. Originally, I started out building the paging mechanics directly into my view models, but this created a lot of duplication both in the view model and in the html. My next step was to pull the paging functions out of the view model and put them into a base model that could extend any view model with paging functionality. It turns out the paging functionality is easy to encapsulate; for any paged list, you need to track the current page, the number of items per page, and the total number of items. From there it&#8217;s fairly simple to calculate the items to display on the current page.</p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">self.page = ko.observable(1);\n\n    self.itemsPerPage = ko.observable(10);\n\n    self.totalPages = ko.computed(function () {\n                var array = observableArray();\n                return Math.ceil(array.length / self.itemsPerPage());\n            });\n\n    self.pagedItems = ko.computed(function () {\n                var array = observableArray();\n                var indexOfFirstItemOnCurrentPage = (((self.page() * 1) - 1) * (self.itemsPerPage() * 1));\n                var pageArray = array.slice(indexOfFirstItemOnCurrentPage, indexOfFirstItemOnCurrentPage + (self.itemsPerPage()* 1));\n                return pageArray;\n            });\n</pre>\n\n<p>The problem of repeating the html for the knockout binding isn&#8217;t solved with a view model, though. What I really wanted was a drop-in replacement for the foreach binding that would work on any list and would wrap up all the paging functionality. There is a <a title=\"SimpleGrid\" href=\"https://github.com/knockout/knockout/tree/gh-pages/examples/resources\" target=\"_blank\">SimpleGrid</a> knockout binding that does paging, but it replaces the current html node with its own idea of how your data should be rendered. I wanted to use the inline template that the foreach binding uses so that I could page a table, an un-ordered list, or a bunch of divs. In order to be a true drop-in replacement for foreach, I had to separate out the three elements of the pager: the page size control, the paged items, and the page links. I call my pager binding like so:</p>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;div id=\"testBinding\"&gt;\n            &lt;div data-bind=\"pageSizeControl: observableArray, pageSize: pageSize\"&gt;&lt;/div&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;&lt;th&gt;$index&lt;/th&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Page Size&lt;/th&gt;&lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody data-bind=\"pagedForeach: observableArray\"&gt;\n                    &lt;tr&gt;\n                        &lt;td data-bind=\"text: $index\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: key\"&gt;&lt;/td&gt;\n                        &lt;td data-bind=\"text: value\"&gt;&lt;/td&gt;\n                        &lt;td class=\"parentPageSize\" data-bind=\"text: $parent.pageSize\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n            &lt;div data-bind=\"pageLinks: observableArray\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n</pre>\n\n<p>I have four bindings that I can choose from which give me detailed control over the paging while also letting me reuse the code in a modular way. </p>\n<pre>pagedForeach: displays the current page of items\n    pageLinks: displays the first page, last page, and page number navigation links\n    pageSizeControl: displays a select box with four standard page sizes to choose from\n    pageSize: lets your view model control the page size directly\n</pre>\n\n<p>I checked in the binding to github as <a href=\"https://github.com/nathanrobinson/knockout.pager\" title=\"knockout.pager\" target=\"_blank\">knockout.pager</a>. I then used <a href=\"http://www.myget.org/\" title=\"myGet\" target=\"_blank\">myGet </a>to package the files and upload them to <a href=\"http://www.nuget.org/packages/knockout.pager/\" title=\"knockout.pager\" target=\"_blank\">nuGet</a>. I also built several <a href=\"https://rawgithub.com/nathanrobinson/knockout.pager/master/tests.html\" title=\"unit tests\" target=\"_blank\">unit tests</a>. One thing you may notice is that in my bindings I attach the paging view model to the array. This is because the other bindings can see the same view model. In order to work correctly, the bindings have to interact with the same view model. Rather than calling the foreach binding from my binding, I looked at the knockout source and so that foreach is simply a wrapper for the template binding, so I call the template binding directly. I also used the same method of generating templates for the page links and pager size controls that the SimpleGrid binding used.</p>"},{"title":"Multiple App Accounts Using BlueStacks","author":"nathan","type":"post","date":"2013-12-15T23:43:01.000Z","url":"/multiple-app-accounts-using-bluestacks/","comments":1,"_content":"When you use apps on a device such as an iPhone or Android phone, you may run into a situation where you want to have multiple accounts for the same app. Unfortunately, this can be very hard to do. It usually requires you to uninstall the app and re-install it to switch accounts. Usually these apps don&#8217;t have a PC version, which makes it even harder to manage multiple accounts. The people at BlueStacks have written an Android emulator to allow running apps on a PC (they have a MAC version, but it doesn&#8217;t support the version of Android required to run most apps), so you will need Windows.<!--more-->\n\nTo run multiple accounts of an app follow these steps.\n\n  1. Download and install [BlueStacks][1]\n  2. Install the app that you want to duplicate, but do not log in or create an account. If you have already logged into the app, then uninstall the app and re-install it.\n  3. Open Windows Explorer and go to %ProgramData%\\BlueStacks\\Android\\ you should see a folder called Data.sparsefs\n  4. Rename Data.sparsefs to Data1.sparsefs.\n  5. Make as many copies of Data1.sparsefs as you need copies of your app. Increment the number after Data each time. You should end up with something like this, but without the Data.sparsefs folder. \n    <div id=\"attachment_109\" style=\"width: 242px\" class=\"wp-caption aligncenter\">\n      <a href=\"/images/2013/12/Data.jpg\"><img class=\"size-full wp-image-109\" alt=\"data folders\" src=\"/images/2013/12/Data.jpg\" width=\"232\" height=\"214\" /></a>\n      \n      <p class=\"wp-caption-text\">\n        copies of data folders\n      </p>\n    </div></li> \n    \n      * [Download this zip file][2], open it, and copy LaunchApp.bat to %ProgramData%\\BlueStacks\\Android\\\n      * Open the apps folder that BlueStacks installed on your desktop. You should see a shortcut to the app that you installed in BlueStacks.\n      * Right-click on the shortcut and choose &#8220;properties&#8221;. You should see a window like this: \n        <div id=\"attachment_111\" style=\"width: 495px\" class=\"wp-caption aligncenter\">\n          <a href=\"/images/2013/12/Properties.jpg\"><img class=\"size-full wp-image-111\" alt=\"link properties\" src=\"/images/2013/12/Properties.jpg\" width=\"485\" height=\"611\" /></a>\n          \n          <p class=\"wp-caption-text\">\n            link properties\n          </p>\n        </div></li> \n        \n          * You&#8217;ll need to edit the text inside the &#8220;Target&#8221; textbox. you want to keep the last two arguments. Those will tell BlueStacks which app you want to launch. If you were editing the twitter link, then\n  \n            > &#8220;C:\\Program Files (x86)\\BlueStacks\\HD-RunApp.exe&#8221; Android com.twitter.android com.twitter.android.StartActivity\n            \n            becomes\n            \n            > %ProgramData%\\BlueStacks\\Android\\LaunchApp.bat 1 com.twitter.android com.twitter.android.StartActivity\n            \n            Notice that the &#8220;Android&#8221; became a &#8220;1&#8221;. That &#8220;1&#8221; will change for each shortcut to match the Data#.sparsefs that you want to link to.</li> \n            \n              * Make a copy of the shortcut for each copy of Data.sparsefs that you created\n              * Rename each link with the number that corresponds to the number in your copy of Data.sparsefs\n              * Edit the target of each link, just like in step 8. Change the &#8220;1&#8221; to match the number in your copy of Data.sparsefs</ol> \n            \n            You should end up with links like these:\n            \n            <div id=\"attachment_110\" style=\"width: 376px\" class=\"wp-caption aligncenter\">\n              <a href=\"/images/2013/12/Apps.jpg\"><img class=\"size-full wp-image-110\" alt=\"app links\" src=\"/images/2013/12/Apps.jpg\" width=\"366\" height=\"470\" /></a>\n              \n              <p class=\"wp-caption-text\">\n                links to apps\n              </p>\n            </div>\n            \n            Now, when you double-click the links, the batch file will link the proper Data#.sparsefs and launch your app. The first time you run each shortcut you will need to set up a new account. After that, you can switch accounts just by launching the shortcut.\n\n [1]: http://www.bluestacks.com/\n [2]: /images/2013/12/LaunchApp.zip\n","source":"_posts/2013-12-15-multiple-app-accounts-using-bluestacks.md","raw":"---\ntitle: Multiple App Accounts Using BlueStacks\nauthor: nathan\ntype: post\ndate: 2013-12-15T17:43:01+00:00\nurl: /multiple-app-accounts-using-bluestacks/\ncomments: true\ncategories:\n  - Challenge\ntags:\n  - android\n\n---\nWhen you use apps on a device such as an iPhone or Android phone, you may run into a situation where you want to have multiple accounts for the same app. Unfortunately, this can be very hard to do. It usually requires you to uninstall the app and re-install it to switch accounts. Usually these apps don&#8217;t have a PC version, which makes it even harder to manage multiple accounts. The people at BlueStacks have written an Android emulator to allow running apps on a PC (they have a MAC version, but it doesn&#8217;t support the version of Android required to run most apps), so you will need Windows.<!--more-->\n\nTo run multiple accounts of an app follow these steps.\n\n  1. Download and install [BlueStacks][1]\n  2. Install the app that you want to duplicate, but do not log in or create an account. If you have already logged into the app, then uninstall the app and re-install it.\n  3. Open Windows Explorer and go to %ProgramData%\\BlueStacks\\Android\\ you should see a folder called Data.sparsefs\n  4. Rename Data.sparsefs to Data1.sparsefs.\n  5. Make as many copies of Data1.sparsefs as you need copies of your app. Increment the number after Data each time. You should end up with something like this, but without the Data.sparsefs folder. \n    <div id=\"attachment_109\" style=\"width: 242px\" class=\"wp-caption aligncenter\">\n      <a href=\"/images/2013/12/Data.jpg\"><img class=\"size-full wp-image-109\" alt=\"data folders\" src=\"/images/2013/12/Data.jpg\" width=\"232\" height=\"214\" /></a>\n      \n      <p class=\"wp-caption-text\">\n        copies of data folders\n      </p>\n    </div></li> \n    \n      * [Download this zip file][2], open it, and copy LaunchApp.bat to %ProgramData%\\BlueStacks\\Android\\\n      * Open the apps folder that BlueStacks installed on your desktop. You should see a shortcut to the app that you installed in BlueStacks.\n      * Right-click on the shortcut and choose &#8220;properties&#8221;. You should see a window like this: \n        <div id=\"attachment_111\" style=\"width: 495px\" class=\"wp-caption aligncenter\">\n          <a href=\"/images/2013/12/Properties.jpg\"><img class=\"size-full wp-image-111\" alt=\"link properties\" src=\"/images/2013/12/Properties.jpg\" width=\"485\" height=\"611\" /></a>\n          \n          <p class=\"wp-caption-text\">\n            link properties\n          </p>\n        </div></li> \n        \n          * You&#8217;ll need to edit the text inside the &#8220;Target&#8221; textbox. you want to keep the last two arguments. Those will tell BlueStacks which app you want to launch. If you were editing the twitter link, then\n  \n            > &#8220;C:\\Program Files (x86)\\BlueStacks\\HD-RunApp.exe&#8221; Android com.twitter.android com.twitter.android.StartActivity\n            \n            becomes\n            \n            > %ProgramData%\\BlueStacks\\Android\\LaunchApp.bat 1 com.twitter.android com.twitter.android.StartActivity\n            \n            Notice that the &#8220;Android&#8221; became a &#8220;1&#8221;. That &#8220;1&#8221; will change for each shortcut to match the Data#.sparsefs that you want to link to.</li> \n            \n              * Make a copy of the shortcut for each copy of Data.sparsefs that you created\n              * Rename each link with the number that corresponds to the number in your copy of Data.sparsefs\n              * Edit the target of each link, just like in step 8. Change the &#8220;1&#8221; to match the number in your copy of Data.sparsefs</ol> \n            \n            You should end up with links like these:\n            \n            <div id=\"attachment_110\" style=\"width: 376px\" class=\"wp-caption aligncenter\">\n              <a href=\"/images/2013/12/Apps.jpg\"><img class=\"size-full wp-image-110\" alt=\"app links\" src=\"/images/2013/12/Apps.jpg\" width=\"366\" height=\"470\" /></a>\n              \n              <p class=\"wp-caption-text\">\n                links to apps\n              </p>\n            </div>\n            \n            Now, when you double-click the links, the batch file will link the proper Data#.sparsefs and launch your app. The first time you run each shortcut you will need to set up a new account. After that, you can switch accounts just by launching the shortcut.\n\n [1]: http://www.bluestacks.com/\n [2]: /images/2013/12/LaunchApp.zip\n","slug":"multiple-app-accounts-using-bluestacks","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkk00098buy8n4um7mu","content":"<p>When you use apps on a device such as an iPhone or Android phone, you may run into a situation where you want to have multiple accounts for the same app. Unfortunately, this can be very hard to do. It usually requires you to uninstall the app and re-install it to switch accounts. Usually these apps don&#8217;t have a PC version, which makes it even harder to manage multiple accounts. The people at BlueStacks have written an Android emulator to allow running apps on a PC (they have a MAC version, but it doesn&#8217;t support the version of Android required to run most apps), so you will need Windows.<a id=\"more\"></a></p>\n<p>To run multiple accounts of an app follow these steps.</p>\n<ol>\n<li>Download and install <a href=\"http://www.bluestacks.com/\" target=\"_blank\" rel=\"external\">BlueStacks</a></li>\n<li>Install the app that you want to duplicate, but do not log in or create an account. If you have already logged into the app, then uninstall the app and re-install it.</li>\n<li>Open Windows Explorer and go to %ProgramData%\\BlueStacks\\Android\\ you should see a folder called Data.sparsefs</li>\n<li>Rename Data.sparsefs to Data1.sparsefs.</li>\n<li><p>Make as many copies of Data1.sparsefs as you need copies of your app. Increment the number after Data each time. You should end up with something like this, but without the Data.sparsefs folder. </p>\n<div id=\"attachment_109\" style=\"width: 242px\" class=\"wp-caption aligncenter\"><br> <a href=\"/images/2013/12/Data.jpg\"><img class=\"size-full wp-image-109\" alt=\"data folders\" src=\"/images/2013/12/Data.jpg\" width=\"232\" height=\"214\"></a><br><br> <p class=\"wp-caption-text\"><br>   copies of data folders<br> </p><br></div></li><br><br> <em> <a href=\"/images/2013/12/LaunchApp.zip\">Download this zip file</a>, open it, and copy LaunchApp.bat to %ProgramData%\\BlueStacks\\Android\\\n </em> Open the apps folder that BlueStacks installed on your desktop. You should see a shortcut to the app that you installed in BlueStacks.<br> <em> Right-click on the shortcut and choose &#8220;properties&#8221;. You should see a window like this:<br>   <div id=\"attachment_111\" style=\"width: 495px\" class=\"wp-caption aligncenter\"><br>     <a href=\"/images/2013/12/Properties.jpg\"><img class=\"size-full wp-image-111\" alt=\"link properties\" src=\"/images/2013/12/Properties.jpg\" width=\"485\" height=\"611\"></a><br><br>     <p class=\"wp-caption-text\"><br>       link properties<br>     </p><br>   </div> \n\n     </em> You&#8217;ll need to edit the text inside the &#8220;Target&#8221; textbox. you want to keep the last two arguments. Those will tell BlueStacks which app you want to launch. If you were editing the twitter link, then<br><br>       &gt; &#8220;C:\\Program Files (x86)\\BlueStacks\\HD-RunApp.exe&#8221; Android com.twitter.android com.twitter.android.StartActivity<br><br>       becomes<br><br>       &gt; %ProgramData%\\BlueStacks\\Android\\LaunchApp.bat 1 com.twitter.android com.twitter.android.StartActivity<br><br>       Notice that the &#8220;Android&#8221; became a &#8220;1&#8221;. That &#8220;1&#8221; will change for each shortcut to match the Data#.sparsefs that you want to link to.<br><br>         <em> Make a copy of the shortcut for each copy of Data.sparsefs that you created\n         </em> Rename each link with the number that corresponds to the number in your copy of Data.sparsefs<br>         * Edit the target of each link, just like in step 8. Change the &#8220;1&#8221; to match the number in your copy of Data.sparsefs</ol><br><br>       You should end up with links like these:<br><br>       <div id=\"attachment_110\" style=\"width: 376px\" class=\"wp-caption aligncenter\"><br>         <a href=\"/images/2013/12/Apps.jpg\"><img class=\"size-full wp-image-110\" alt=\"app links\" src=\"/images/2013/12/Apps.jpg\" width=\"366\" height=\"470\"></a><br><br>         <p class=\"wp-caption-text\"><br>           links to apps<br>         </p><br>       </div>\n\n<pre><code>Now, when you double-click the links, the batch file will link the proper Data#.sparsefs and launch your app. The first time you run each shortcut you will need to set up a new account. After that, you can switch accounts just by launching the shortcut.\n</code></pre>\n\n","excerpt":"<p>When you use apps on a device such as an iPhone or Android phone, you may run into a situation where you want to have multiple accounts for the same app. Unfortunately, this can be very hard to do. It usually requires you to uninstall the app and re-install it to switch accounts. Usually these apps don&#8217;t have a PC version, which makes it even harder to manage multiple accounts. The people at BlueStacks have written an Android emulator to allow running apps on a PC (they have a MAC version, but it doesn&#8217;t support the version of Android required to run most apps), so you will need Windows.","more":"</p>\n<p>To run multiple accounts of an app follow these steps.</p>\n<ol>\n<li>Download and install <a href=\"http://www.bluestacks.com/\">BlueStacks</a></li>\n<li>Install the app that you want to duplicate, but do not log in or create an account. If you have already logged into the app, then uninstall the app and re-install it.</li>\n<li>Open Windows Explorer and go to %ProgramData%\\BlueStacks\\Android\\ you should see a folder called Data.sparsefs</li>\n<li>Rename Data.sparsefs to Data1.sparsefs.</li>\n<li><p>Make as many copies of Data1.sparsefs as you need copies of your app. Increment the number after Data each time. You should end up with something like this, but without the Data.sparsefs folder. </p>\n<div id=\"attachment_109\" style=\"width: 242px\" class=\"wp-caption aligncenter\"><br> <a href=\"/images/2013/12/Data.jpg\"><img class=\"size-full wp-image-109\" alt=\"data folders\" src=\"/images/2013/12/Data.jpg\" width=\"232\" height=\"214\" /></a><br><br> <p class=\"wp-caption-text\"><br>   copies of data folders<br> </p><br></div></li><br><br> <em> <a href=\"/images/2013/12/LaunchApp.zip\">Download this zip file</a>, open it, and copy LaunchApp.bat to %ProgramData%\\BlueStacks\\Android\\\n </em> Open the apps folder that BlueStacks installed on your desktop. You should see a shortcut to the app that you installed in BlueStacks.<br> <em> Right-click on the shortcut and choose &#8220;properties&#8221;. You should see a window like this:<br>   <div id=\"attachment_111\" style=\"width: 495px\" class=\"wp-caption aligncenter\"><br>     <a href=\"/images/2013/12/Properties.jpg\"><img class=\"size-full wp-image-111\" alt=\"link properties\" src=\"/images/2013/12/Properties.jpg\" width=\"485\" height=\"611\" /></a><br><br>     <p class=\"wp-caption-text\"><br>       link properties<br>     </p><br>   </div></li> \n\n     </em> You&#8217;ll need to edit the text inside the &#8220;Target&#8221; textbox. you want to keep the last two arguments. Those will tell BlueStacks which app you want to launch. If you were editing the twitter link, then<br><br>       &gt; &#8220;C:\\Program Files (x86)\\BlueStacks\\HD-RunApp.exe&#8221; Android com.twitter.android com.twitter.android.StartActivity<br><br>       becomes<br><br>       &gt; %ProgramData%\\BlueStacks\\Android\\LaunchApp.bat 1 com.twitter.android com.twitter.android.StartActivity<br><br>       Notice that the &#8220;Android&#8221; became a &#8220;1&#8221;. That &#8220;1&#8221; will change for each shortcut to match the Data#.sparsefs that you want to link to.</li><br><br>         <em> Make a copy of the shortcut for each copy of Data.sparsefs that you created\n         </em> Rename each link with the number that corresponds to the number in your copy of Data.sparsefs<br>         * Edit the target of each link, just like in step 8. Change the &#8220;1&#8221; to match the number in your copy of Data.sparsefs</ol><br><br>       You should end up with links like these:<br><br>       <div id=\"attachment_110\" style=\"width: 376px\" class=\"wp-caption aligncenter\"><br>         <a href=\"/images/2013/12/Apps.jpg\"><img class=\"size-full wp-image-110\" alt=\"app links\" src=\"/images/2013/12/Apps.jpg\" width=\"366\" height=\"470\" /></a><br><br>         <p class=\"wp-caption-text\"><br>           links to apps<br>         </p><br>       </div>\n\n<pre><code>Now, when you double-click the links, the batch file will link the proper Data#.sparsefs and launch your app. The first time you run each shortcut you will need to set up a new account. After that, you can switch accounts just by launching the shortcut.\n</code></pre></li>\n</ol>"},{"title":"Congress for sale","author":"nathan","type":"post","date":"2015-04-21T21:57:30.000Z","url":"/congress-for-sale/","comments":1,"_content":"[<img class=\"aligncenter size-full wp-image-141\" alt=\"Congress sells bills to lobbyists\" src=\"/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg\" width=\"300\" height=\"200\" />][1]\n\nIt seems that the US Senators and Representatives aren&#8217;t even trying to hide their shameful solicitation of <del>bribery</del> &#8220;_lobbying_&#8221; anymore. The foreign lobbyist entrance is in back&#8230;\n\n [1]: /images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg \"Congress for sale\"\n","source":"_posts/2015-04-21-congress-for-sale.md","raw":"---\ntitle: Congress for sale\nauthor: nathan\ntype: post\ndate: 2015-04-21T16:57:30+00:00\nurl: /congress-for-sale/\ncomments: true\ncategories:\n  - Rant\n\n---\n[<img class=\"aligncenter size-full wp-image-141\" alt=\"Congress sells bills to lobbyists\" src=\"/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg\" width=\"300\" height=\"200\" />][1]\n\nIt seems that the US Senators and Representatives aren&#8217;t even trying to hide their shameful solicitation of <del>bribery</del> &#8220;_lobbying_&#8221; anymore. The foreign lobbyist entrance is in back&#8230;\n\n [1]: /images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg \"Congress for sale\"\n","slug":"congress-for-sale","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhko000a8buyp0j0pe92","content":"<p><a href=\"/images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg\" title=\"Congress for sale\"><img class=\"aligncenter size-full wp-image-141\" alt=\"Congress sells bills to lobbyists\" src=\"/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg\" width=\"300\" height=\"200\"></a></p>\n<p>It seems that the US Senators and Representatives aren&#8217;t even trying to hide their shameful solicitation of <del>bribery</del> &#8220;<em>lobbying</em>&#8221; anymore. The foreign lobbyist entrance is in back&#8230;</p>\n","excerpt":"","more":"<p><a href=\"/images/2015/04/United_States_Capitol_Building_For_Sale-M.jpg\" title=\"Congress for sale\"><img class=\"aligncenter size-full wp-image-141\" alt=\"Congress sells bills to lobbyists\" src=\"/images/2015/04/United_States_Capitol_Building_For_Sale-S.jpg\" width=\"300\" height=\"200\" /></a></p>\n<p>It seems that the US Senators and Representatives aren&#8217;t even trying to hide their shameful solicitation of <del>bribery</del> &#8220;<em>lobbying</em>&#8221; anymore. The foreign lobbyist entrance is in back&#8230;</p>\n"},{"title":"Fun with HDTV Antennas","author":"nathan","type":"post","date":"2016-01-18T06:53:19.000Z","url":"/fun-with-hdtv-antennas/","comments":1,"nkweb_code_in_head":["default"],"nkweb_Use_Custom_js":["default"],"nkweb_Use_Custom_Values":["default"],"nkweb_Use_Custom":["false"],"_content":"My cable internet provider recently switched to all digital channels so that they could encrypt local broadcasts. This put me in a bit of a bind since all my TVs were using built-in QAM tuners to get local stations. I needed to supply signals to three TVs and two <a href=\"http://smile.amazon.com/Hauppauge-1213-WinTV-HVR-2255-Control-Receiver/dp/B001E2V7R8\" target=\"_blank\">HDTV capture cards</a> on my <a href=\"https://en.wikipedia.org/wiki/Home_theater_PC\" target=\"_blank\">HTPC</a>.\n\nMy options were, pay $3/month/tv to the cable company for digital boxes to get &#8220;free&#8221; OTA (over the air) broadcasts or pay $70 for a <a href=\"http://smile.amazon.com/gp/product/B00CXQO00K?psc=1&redirect=true&ref_=ox_sc_sfl_title_1&smid=ATVPDKIKX0DER\" target=\"_blank\">high-end HDTV antenna</a> plus an <a href=\"http://smile.amazon.com/DuaFire-Antenna-Amplifier-Booster-Supply-up/dp/B0196AN9WU/ref=sr_1_1?ie=UTF8&qid=1453048463&sr=8-1&keywords=antenna+amplifier\" target=\"_blank\">amplifier</a> and <a href=\"http://smile.amazon.com/BAMF-4-Way-Splitter-Bi-Directional-5-2300MHz/dp/B017T9KF1S/ref=sr_1_1?s=electronics&ie=UTF8&qid=1453049025&sr=1-1&keywords=4+way+catv+splitter\" target=\"_blank\">splitter</a> or <a href=\"http://smile.amazon.com/dp/B001222256?psc=1\" target=\"_blank\">amplified splitter</a> and rewire my house to hook the antenna up to all my TVs while still allowing my cable internet to get to my cable modem.\n\nNeither option seemed appealing to me.\n\n<!--more-->\n\n* * *\n\nThen I stumbled upon a <a href=\"http://www.instructables.com/id/Powerful-Modern-Homemade-HDTV-Antenna/\" target=\"_blank\">homemade HDTV antenna</a> project that looked very interesting. It had a link to the <a href=\"http://hubpages.com/art/make-this-powerful-hdtv-antenna-out-of-cardboard\" target=\"_blank\">original PDF template</a> that you can print out on legal paper. The project was simple enough that I decided to give it a go. I already had cardboard, aluminum foil, model/craft glue, a box cutter, an exacto knife, and a printer. I used to have a balun lying around, but it got thrown out during spring cleaning a few years back.\n\nThe antenna took about 2 hours to build. It is important to follow the template exactly because the size is very important to receive HDTV signals. After spending all evening building a single antenna I still had to get a [balun][1]. Here&#8217;s the result:\n\n<div id=\"attachment_155\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n  <a href=\"/images/2016/01/Antenna_1.jpg\" rel=\"attachment wp-att-155\"><img class=\"wp-image-155 size-full\" src=\"/images/2016/01/Antenna_1.jpeg\" alt=\"Double Bowtie Antenna\" width=\"180\" height=\"240\" /></a>\n  \n  <p class=\"wp-caption-text\">\n    Double Bowtie Antenna\n  </p>\n</div>\n\n<div id=\"attachment_156\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n  <a href=\"/images/2016/01/Antenna_2.jpg\" rel=\"attachment wp-att-156\"><img class=\"wp-image-156 size-full\" src=\"/images/2016/01/Antenna_2.jpeg\" alt=\"Double Bowtie Reflector\" width=\"180\" height=\"240\" /></a>\n  \n  <p class=\"wp-caption-text\">\n    Double Bowtie Reflector\n  </p>\n</div>\n\nAccording to [tvfool.com][2] I should be able to get three UHF channels (NBC, ABC, and CBS) and one VHF channel (PBS). Fox and CW are broadcast as virtual channels on two of the UHF channels, so they don&#8217;t show up on tvfool. The double bowtie antenna is able to pick up all three UHF channels but not the VHF channel. I had to place it about 4 feet off the ground and angle it to pick up one of the channels. Another channel is powerful enough to pick it up even though it is located behind the reflector. I connected the antenna to a 4-way spitter that feeds my two capture cards and one of my TVs. The splitter isn&#8217;t powered or amplified, so the output is 25% of the input, but the signal from the antenna is still powerful enough to feed all three channels to all three consumers clearly.\n\nThat&#8217;s an impressive antenna!\n\n* * *\n\nI returned to the instructables site to see if there were any easier antenna builds. I stumbled on this comment:\n\n> <div class=\"comment-header\">\n>   <span class=\"comment-author\"><a class=\"author-link pro\" href=\"http://www.instructables.com/member/NotTheDude\">NotTheDude</a></span><a class=\"action btn btn-mini pull-right replyToCommentBtn login-required\">Reply</a><span class=\"comment-date pull-right comment-info\">3 years ago</span>\n> </div>\n> \n> <div class=\"comment-body-container\">\n>   <div class=\"comment-body\">\n>     <p>\n>       It may not look as cool as this or other homemade HDTV antennas, but you can save yourself the cost of buying anything new and the work it takes to put one of these things together by simply taking a spare coaxial cable and cutting about 8 inches of insulation off the end so you have the center wire exposed. Then move it around until you get the best reception. You will not believe it until you try it, but this works better than any other antenna I have ever used for over-the-air digital TV.\n>     </p>\n>     \n>     <p>\n>       I have tried every antenna possible from dollar store 10 buck antennas to $50 Phillips HDTV indoor/outdoor antenna and the bare wire works better than them all (even when I put the $50 antenna on my roof). I have removed the insulation from about a dozen or so coaxial cables for friends and families over the past 4 years and they are all still using them because they work better than anything else.they have bought themselves.\n>     </p>\n>     \n>     <p>\n>       I would make an indestructible for this, but it&#8217;s so easy I couldn&#8217;t explain it any better except to take a picture of it. I will say that it can be hard to slide the entire 8 inches of insulation off the end all at once so just cut an inch or two of the insulation at a time and it comes off pretty easily.\n>     </p>\n>     \n>     <p>\n>       Try it and you will be surprised how well it works. What do you have to lose?\n>     </p>\n>   </div>\n> </div>\n\n<div class=\"comment-body\">\n  <strong>Wow</strong>! That is a <strong>lot</strong> easier than a two hour build. I gave that a shot on the TV in my bathroom.\n</div>\n\n<div class=\"comment-body\">\n  <div id=\"attachment_157\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n    <a href=\"/images/2016/01/Antenna_3.jpg\" rel=\"attachment wp-att-157\"><img class=\"wp-image-157 size-full\" src=\"/images/2016/01/Antenna_3.jpeg\" alt=\"Whip Antenna\" width=\"180\" height=\"240\" /></a>\n    \n    <p class=\"wp-caption-text\">\n      Whip Antenna\n    </p>\n  </div>\n</div>\n\nI was only able to pick up one channel with two stations, but it was the one channel that I want to watch in the mornings when I&#8217;m getting ready for work.\n\nIt turns out there is a name for this type of antenna; NotTheDude was describing a whip antenna.\n\nHere&#8217;s where my post becomes really technical. I&#8217;ll skip over most of the [physics][3], but you need to understand that each channel is a different frequency that is unrelated to the &#8220;virtual channel&#8221; that is displayed on your TV. You also need to understand that the length of the &#8220;whip&#8221; is directly related to the channel that it can receive. A whip antenna doesn&#8217;t amplify the the signal it receives but the coax cable will lose signal strength over long runs (4-6dB over 100 feet), so you want to keep the cable as short as possible.\n\nTvfool.com lets you enter your address and it will show the channels you can receive. It also shows the signal strength for each channel at your location. If you enter the height of the antenna above ground, then the signal indication will be more accurate. The channels I wanted to receive were all rated at 50dB or higher and to receive the channel it needs to be greater than 0dB once you account for signal gains and loss by your antenna, coax, splitters, and amplifiers. Using NotTheDude&#8217;s advice I cut the whip to 8&#8243;, which as it turns out is perfect for receiving the upper end of UHF. The channel I wanted to receive was #50, which is the upper end of the UHF frequencies. I tested another whip of 12&#8243; and was able to receive a channel at the lower end, but not both. The third channel I could not receive no matter the length.\n\nI still couldn&#8217;t receive the VHF channel. I did some more research, and you can calculate the exact length of the whip for the channel you want to receive. You need to look up the physical channel number (not the virtual ##.# channel the TV displays) to get [the frequency][4]. You then enter the frequency in this [calculator][5] to get the whip length for the half wavelength. The whip length for UHF ranges from around 12&#8243; for the lower frequencies to around 8&#8243; for the higher frequencies. If I wanted to pick up the VHF channel to get PBS, then according to that calculator, I would need a whip length of 30&#8243;&#8230; um, no thanks. That means I&#8217;d need a signal combiner that won&#8217;t cause interference between the two whips.\n\nI tried a 12&#8243; whip antenna on my upstairs TV and found that I was able to pick up all three UHF stations. That was much easier than building another double bowtie antenna! The one channel on the higher frequency was powerful enough to force its way onto the longer antenna.\n\nSo&#8230; if a 12&#8243; whip can pick up all three UHF stations on the second floor (around 25&#8242; &#8211; 30&#8242; above ground level), then maybe I could move the whip in my bathroom up to the attic to pick them all up. The problem might be dB loss in the 30&#8242; of coax. I found a [table that shows dB loss in coax][6]. It shows for RG-6 (standard tv cable) between 4dB and 6dB loss for 100&#8242; depending on the channel frequency. That means I should expect between 1dB to 2dB loss. Tvfool.com showed that I should have plenty of signal strength, so up to the attic I went. I spliced into the existing cable and used a [coupler][7] to install a 12&#8243; whip at about 30&#8242; above ground level with about 30&#8242; of coax cable connecting it to the TV.\n\nThe setup worked perfectly and I can now receive CBS, ABC, NBC, FOX, and CW on all my TVs and capture cards.\n\n<div class=\"comment-body\">\n  <p>\n    &nbsp;\n  </p>\n</div>\n\n [1]: http://smile.amazon.com/300-Ohm-UHF-Matching-Transformer/dp/B0002ZPIOG/ref=sr_1_2?ie=UTF8&qid=1453561976&sr=8-2&keywords=balun\n [2]: http://www.tvfool.com/\n [3]: http://www.antenna-theory.com/basics/frequency.php\n [4]: https://en.wikipedia.org/wiki/North_American_television_frequencies#UHF_band\n [5]: http://www.csgnetwork.com/antennagenericfreqlencalc.html\n [6]: http://www.w4rp.com/ref/coax.html\n [7]: http://smile.amazon.com/Splice-F-81-Adapter-DC-3GHz/dp/B008R3J4QS/ref=sr_1_2?ie=UTF8&qid=1453077536&sr=8-2&keywords=rg-6+coupler\n","source":"_posts/2016-01-17-fun-with-hdtv-antennas.md","raw":"---\ntitle: Fun with HDTV Antennas\nauthor: nathan\ntype: post\ndate: 2016-01-18T00:53:19+00:00\nurl: /fun-with-hdtv-antennas/\ncomments: true\nnkweb_code_in_head:\n  - default\nnkweb_Use_Custom_js:\n  - default\nnkweb_Use_Custom_Values:\n  - default\nnkweb_Use_Custom:\n  - 'false'\ncategories:\n  - Challenge\ntags:\n  - Cable Cutter\n  - HDTV\n  - TV\n  - antenna\n\n---\nMy cable internet provider recently switched to all digital channels so that they could encrypt local broadcasts. This put me in a bit of a bind since all my TVs were using built-in QAM tuners to get local stations. I needed to supply signals to three TVs and two <a href=\"http://smile.amazon.com/Hauppauge-1213-WinTV-HVR-2255-Control-Receiver/dp/B001E2V7R8\" target=\"_blank\">HDTV capture cards</a> on my <a href=\"https://en.wikipedia.org/wiki/Home_theater_PC\" target=\"_blank\">HTPC</a>.\n\nMy options were, pay $3/month/tv to the cable company for digital boxes to get &#8220;free&#8221; OTA (over the air) broadcasts or pay $70 for a <a href=\"http://smile.amazon.com/gp/product/B00CXQO00K?psc=1&redirect=true&ref_=ox_sc_sfl_title_1&smid=ATVPDKIKX0DER\" target=\"_blank\">high-end HDTV antenna</a> plus an <a href=\"http://smile.amazon.com/DuaFire-Antenna-Amplifier-Booster-Supply-up/dp/B0196AN9WU/ref=sr_1_1?ie=UTF8&qid=1453048463&sr=8-1&keywords=antenna+amplifier\" target=\"_blank\">amplifier</a> and <a href=\"http://smile.amazon.com/BAMF-4-Way-Splitter-Bi-Directional-5-2300MHz/dp/B017T9KF1S/ref=sr_1_1?s=electronics&ie=UTF8&qid=1453049025&sr=1-1&keywords=4+way+catv+splitter\" target=\"_blank\">splitter</a> or <a href=\"http://smile.amazon.com/dp/B001222256?psc=1\" target=\"_blank\">amplified splitter</a> and rewire my house to hook the antenna up to all my TVs while still allowing my cable internet to get to my cable modem.\n\nNeither option seemed appealing to me.\n\n<!--more-->\n\n* * *\n\nThen I stumbled upon a <a href=\"http://www.instructables.com/id/Powerful-Modern-Homemade-HDTV-Antenna/\" target=\"_blank\">homemade HDTV antenna</a> project that looked very interesting. It had a link to the <a href=\"http://hubpages.com/art/make-this-powerful-hdtv-antenna-out-of-cardboard\" target=\"_blank\">original PDF template</a> that you can print out on legal paper. The project was simple enough that I decided to give it a go. I already had cardboard, aluminum foil, model/craft glue, a box cutter, an exacto knife, and a printer. I used to have a balun lying around, but it got thrown out during spring cleaning a few years back.\n\nThe antenna took about 2 hours to build. It is important to follow the template exactly because the size is very important to receive HDTV signals. After spending all evening building a single antenna I still had to get a [balun][1]. Here&#8217;s the result:\n\n<div id=\"attachment_155\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n  <a href=\"/images/2016/01/Antenna_1.jpg\" rel=\"attachment wp-att-155\"><img class=\"wp-image-155 size-full\" src=\"/images/2016/01/Antenna_1.jpeg\" alt=\"Double Bowtie Antenna\" width=\"180\" height=\"240\" /></a>\n  \n  <p class=\"wp-caption-text\">\n    Double Bowtie Antenna\n  </p>\n</div>\n\n<div id=\"attachment_156\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n  <a href=\"/images/2016/01/Antenna_2.jpg\" rel=\"attachment wp-att-156\"><img class=\"wp-image-156 size-full\" src=\"/images/2016/01/Antenna_2.jpeg\" alt=\"Double Bowtie Reflector\" width=\"180\" height=\"240\" /></a>\n  \n  <p class=\"wp-caption-text\">\n    Double Bowtie Reflector\n  </p>\n</div>\n\nAccording to [tvfool.com][2] I should be able to get three UHF channels (NBC, ABC, and CBS) and one VHF channel (PBS). Fox and CW are broadcast as virtual channels on two of the UHF channels, so they don&#8217;t show up on tvfool. The double bowtie antenna is able to pick up all three UHF channels but not the VHF channel. I had to place it about 4 feet off the ground and angle it to pick up one of the channels. Another channel is powerful enough to pick it up even though it is located behind the reflector. I connected the antenna to a 4-way spitter that feeds my two capture cards and one of my TVs. The splitter isn&#8217;t powered or amplified, so the output is 25% of the input, but the signal from the antenna is still powerful enough to feed all three channels to all three consumers clearly.\n\nThat&#8217;s an impressive antenna!\n\n* * *\n\nI returned to the instructables site to see if there were any easier antenna builds. I stumbled on this comment:\n\n> <div class=\"comment-header\">\n>   <span class=\"comment-author\"><a class=\"author-link pro\" href=\"http://www.instructables.com/member/NotTheDude\">NotTheDude</a></span><a class=\"action btn btn-mini pull-right replyToCommentBtn login-required\">Reply</a><span class=\"comment-date pull-right comment-info\">3 years ago</span>\n> </div>\n> \n> <div class=\"comment-body-container\">\n>   <div class=\"comment-body\">\n>     <p>\n>       It may not look as cool as this or other homemade HDTV antennas, but you can save yourself the cost of buying anything new and the work it takes to put one of these things together by simply taking a spare coaxial cable and cutting about 8 inches of insulation off the end so you have the center wire exposed. Then move it around until you get the best reception. You will not believe it until you try it, but this works better than any other antenna I have ever used for over-the-air digital TV.\n>     </p>\n>     \n>     <p>\n>       I have tried every antenna possible from dollar store 10 buck antennas to $50 Phillips HDTV indoor/outdoor antenna and the bare wire works better than them all (even when I put the $50 antenna on my roof). I have removed the insulation from about a dozen or so coaxial cables for friends and families over the past 4 years and they are all still using them because they work better than anything else.they have bought themselves.\n>     </p>\n>     \n>     <p>\n>       I would make an indestructible for this, but it&#8217;s so easy I couldn&#8217;t explain it any better except to take a picture of it. I will say that it can be hard to slide the entire 8 inches of insulation off the end all at once so just cut an inch or two of the insulation at a time and it comes off pretty easily.\n>     </p>\n>     \n>     <p>\n>       Try it and you will be surprised how well it works. What do you have to lose?\n>     </p>\n>   </div>\n> </div>\n\n<div class=\"comment-body\">\n  <strong>Wow</strong>! That is a <strong>lot</strong> easier than a two hour build. I gave that a shot on the TV in my bathroom.\n</div>\n\n<div class=\"comment-body\">\n  <div id=\"attachment_157\" style=\"width: 190px\" class=\"wp-caption alignleft\">\n    <a href=\"/images/2016/01/Antenna_3.jpg\" rel=\"attachment wp-att-157\"><img class=\"wp-image-157 size-full\" src=\"/images/2016/01/Antenna_3.jpeg\" alt=\"Whip Antenna\" width=\"180\" height=\"240\" /></a>\n    \n    <p class=\"wp-caption-text\">\n      Whip Antenna\n    </p>\n  </div>\n</div>\n\nI was only able to pick up one channel with two stations, but it was the one channel that I want to watch in the mornings when I&#8217;m getting ready for work.\n\nIt turns out there is a name for this type of antenna; NotTheDude was describing a whip antenna.\n\nHere&#8217;s where my post becomes really technical. I&#8217;ll skip over most of the [physics][3], but you need to understand that each channel is a different frequency that is unrelated to the &#8220;virtual channel&#8221; that is displayed on your TV. You also need to understand that the length of the &#8220;whip&#8221; is directly related to the channel that it can receive. A whip antenna doesn&#8217;t amplify the the signal it receives but the coax cable will lose signal strength over long runs (4-6dB over 100 feet), so you want to keep the cable as short as possible.\n\nTvfool.com lets you enter your address and it will show the channels you can receive. It also shows the signal strength for each channel at your location. If you enter the height of the antenna above ground, then the signal indication will be more accurate. The channels I wanted to receive were all rated at 50dB or higher and to receive the channel it needs to be greater than 0dB once you account for signal gains and loss by your antenna, coax, splitters, and amplifiers. Using NotTheDude&#8217;s advice I cut the whip to 8&#8243;, which as it turns out is perfect for receiving the upper end of UHF. The channel I wanted to receive was #50, which is the upper end of the UHF frequencies. I tested another whip of 12&#8243; and was able to receive a channel at the lower end, but not both. The third channel I could not receive no matter the length.\n\nI still couldn&#8217;t receive the VHF channel. I did some more research, and you can calculate the exact length of the whip for the channel you want to receive. You need to look up the physical channel number (not the virtual ##.# channel the TV displays) to get [the frequency][4]. You then enter the frequency in this [calculator][5] to get the whip length for the half wavelength. The whip length for UHF ranges from around 12&#8243; for the lower frequencies to around 8&#8243; for the higher frequencies. If I wanted to pick up the VHF channel to get PBS, then according to that calculator, I would need a whip length of 30&#8243;&#8230; um, no thanks. That means I&#8217;d need a signal combiner that won&#8217;t cause interference between the two whips.\n\nI tried a 12&#8243; whip antenna on my upstairs TV and found that I was able to pick up all three UHF stations. That was much easier than building another double bowtie antenna! The one channel on the higher frequency was powerful enough to force its way onto the longer antenna.\n\nSo&#8230; if a 12&#8243; whip can pick up all three UHF stations on the second floor (around 25&#8242; &#8211; 30&#8242; above ground level), then maybe I could move the whip in my bathroom up to the attic to pick them all up. The problem might be dB loss in the 30&#8242; of coax. I found a [table that shows dB loss in coax][6]. It shows for RG-6 (standard tv cable) between 4dB and 6dB loss for 100&#8242; depending on the channel frequency. That means I should expect between 1dB to 2dB loss. Tvfool.com showed that I should have plenty of signal strength, so up to the attic I went. I spliced into the existing cable and used a [coupler][7] to install a 12&#8243; whip at about 30&#8242; above ground level with about 30&#8242; of coax cable connecting it to the TV.\n\nThe setup worked perfectly and I can now receive CBS, ABC, NBC, FOX, and CW on all my TVs and capture cards.\n\n<div class=\"comment-body\">\n  <p>\n    &nbsp;\n  </p>\n</div>\n\n [1]: http://smile.amazon.com/300-Ohm-UHF-Matching-Transformer/dp/B0002ZPIOG/ref=sr_1_2?ie=UTF8&qid=1453561976&sr=8-2&keywords=balun\n [2]: http://www.tvfool.com/\n [3]: http://www.antenna-theory.com/basics/frequency.php\n [4]: https://en.wikipedia.org/wiki/North_American_television_frequencies#UHF_band\n [5]: http://www.csgnetwork.com/antennagenericfreqlencalc.html\n [6]: http://www.w4rp.com/ref/coax.html\n [7]: http://smile.amazon.com/Splice-F-81-Adapter-DC-3GHz/dp/B008R3J4QS/ref=sr_1_2?ie=UTF8&qid=1453077536&sr=8-2&keywords=rg-6+coupler\n","slug":"fun-with-hdtv-antennas","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkv000d8buyp4r8gf0t","content":"<p>My cable internet provider recently switched to all digital channels so that they could encrypt local broadcasts. This put me in a bit of a bind since all my TVs were using built-in QAM tuners to get local stations. I needed to supply signals to three TVs and two <a href=\"http://smile.amazon.com/Hauppauge-1213-WinTV-HVR-2255-Control-Receiver/dp/B001E2V7R8\" target=\"_blank\">HDTV capture cards</a> on my <a href=\"https://en.wikipedia.org/wiki/Home_theater_PC\" target=\"_blank\">HTPC</a>.</p>\n<p>My options were, pay $3/month/tv to the cable company for digital boxes to get &#8220;free&#8221; OTA (over the air) broadcasts or pay $70 for a <a href=\"http://smile.amazon.com/gp/product/B00CXQO00K?psc=1&redirect=true&ref_=ox_sc_sfl_title_1&smid=ATVPDKIKX0DER\" target=\"_blank\">high-end HDTV antenna</a> plus an <a href=\"http://smile.amazon.com/DuaFire-Antenna-Amplifier-Booster-Supply-up/dp/B0196AN9WU/ref=sr_1_1?ie=UTF8&qid=1453048463&sr=8-1&keywords=antenna+amplifier\" target=\"_blank\">amplifier</a> and <a href=\"http://smile.amazon.com/BAMF-4-Way-Splitter-Bi-Directional-5-2300MHz/dp/B017T9KF1S/ref=sr_1_1?s=electronics&ie=UTF8&qid=1453049025&sr=1-1&keywords=4+way+catv+splitter\" target=\"_blank\">splitter</a> or <a href=\"http://smile.amazon.com/dp/B001222256?psc=1\" target=\"_blank\">amplified splitter</a> and rewire my house to hook the antenna up to all my TVs while still allowing my cable internet to get to my cable modem.</p>\n<p>Neither option seemed appealing to me.</p>\n<a id=\"more\"></a>\n<hr>\n<p>Then I stumbled upon a <a href=\"http://www.instructables.com/id/Powerful-Modern-Homemade-HDTV-Antenna/\" target=\"_blank\">homemade HDTV antenna</a> project that looked very interesting. It had a link to the <a href=\"http://hubpages.com/art/make-this-powerful-hdtv-antenna-out-of-cardboard\" target=\"_blank\">original PDF template</a> that you can print out on legal paper. The project was simple enough that I decided to give it a go. I already had cardboard, aluminum foil, model/craft glue, a box cutter, an exacto knife, and a printer. I used to have a balun lying around, but it got thrown out during spring cleaning a few years back.</p>\n<p>The antenna took about 2 hours to build. It is important to follow the template exactly because the size is very important to receive HDTV signals. After spending all evening building a single antenna I still had to get a <a href=\"http://smile.amazon.com/300-Ohm-UHF-Matching-Transformer/dp/B0002ZPIOG/ref=sr_1_2?ie=UTF8&amp;qid=1453561976&amp;sr=8-2&amp;keywords=balun\" target=\"_blank\" rel=\"external\">balun</a>. Here&#8217;s the result:</p>\n<div id=\"attachment_155\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>  <a href=\"/images/2016/01/Antenna_1.jpg\" rel=\"attachment wp-att-155\"><img class=\"wp-image-155 size-full\" src=\"/images/2016/01/Antenna_1.jpeg\" alt=\"Double Bowtie Antenna\" width=\"180\" height=\"240\"></a><br><br>  <p class=\"wp-caption-text\"><br>    Double Bowtie Antenna<br>  </p><br></div>\n\n<div id=\"attachment_156\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>  <a href=\"/images/2016/01/Antenna_2.jpg\" rel=\"attachment wp-att-156\"><img class=\"wp-image-156 size-full\" src=\"/images/2016/01/Antenna_2.jpeg\" alt=\"Double Bowtie Reflector\" width=\"180\" height=\"240\"></a><br><br>  <p class=\"wp-caption-text\"><br>    Double Bowtie Reflector<br>  </p><br></div>\n\n<p>According to <a href=\"http://www.tvfool.com/\" target=\"_blank\" rel=\"external\">tvfool.com</a> I should be able to get three UHF channels (NBC, ABC, and CBS) and one VHF channel (PBS). Fox and CW are broadcast as virtual channels on two of the UHF channels, so they don&#8217;t show up on tvfool. The double bowtie antenna is able to pick up all three UHF channels but not the VHF channel. I had to place it about 4 feet off the ground and angle it to pick up one of the channels. Another channel is powerful enough to pick it up even though it is located behind the reflector. I connected the antenna to a 4-way spitter that feeds my two capture cards and one of my TVs. The splitter isn&#8217;t powered or amplified, so the output is 25% of the input, but the signal from the antenna is still powerful enough to feed all three channels to all three consumers clearly.</p>\n<p>That&#8217;s an impressive antenna!</p>\n<hr>\n<p>I returned to the instructables site to see if there were any easier antenna builds. I stumbled on this comment:</p>\n<blockquote>\n<div class=\"comment-header\"><br>  <span class=\"comment-author\"><a class=\"author-link pro\" href=\"http://www.instructables.com/member/NotTheDude\" target=\"_blank\" rel=\"external\">NotTheDude</a></span><a class=\"action btn btn-mini pull-right replyToCommentBtn login-required\">Reply</a><span class=\"comment-date pull-right comment-info\">3 years ago</span><br></div>\n\n<div class=\"comment-body-container\"><br>  <div class=\"comment-body\"><br>    <p><br>      It may not look as cool as this or other homemade HDTV antennas, but you can save yourself the cost of buying anything new and the work it takes to put one of these things together by simply taking a spare coaxial cable and cutting about 8 inches of insulation off the end so you have the center wire exposed. Then move it around until you get the best reception. You will not believe it until you try it, but this works better than any other antenna I have ever used for over-the-air digital TV.<br>    </p><br><br>    <p><br>      I have tried every antenna possible from dollar store 10 buck antennas to $50 Phillips HDTV indoor/outdoor antenna and the bare wire works better than them all (even when I put the $50 antenna on my roof). I have removed the insulation from about a dozen or so coaxial cables for friends and families over the past 4 years and they are all still using them because they work better than anything else.they have bought themselves.<br>    </p><br><br>    <p><br>      I would make an indestructible for this, but it&#8217;s so easy I couldn&#8217;t explain it any better except to take a picture of it. I will say that it can be hard to slide the entire 8 inches of insulation off the end all at once so just cut an inch or two of the insulation at a time and it comes off pretty easily.<br>    </p><br><br>    <p><br>      Try it and you will be surprised how well it works. What do you have to lose?<br>    </p><br>  </div><br></div>\n\n</blockquote>\n<div class=\"comment-body\"><br>  <strong>Wow</strong>! That is a <strong>lot</strong> easier than a two hour build. I gave that a shot on the TV in my bathroom.<br></div>\n\n<div class=\"comment-body\"><br>  <div id=\"attachment_157\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>    <a href=\"/images/2016/01/Antenna_3.jpg\" rel=\"attachment wp-att-157\"><img class=\"wp-image-157 size-full\" src=\"/images/2016/01/Antenna_3.jpeg\" alt=\"Whip Antenna\" width=\"180\" height=\"240\"></a><br><br>    <p class=\"wp-caption-text\"><br>      Whip Antenna<br>    </p><br>  </div><br></div>\n\n<p>I was only able to pick up one channel with two stations, but it was the one channel that I want to watch in the mornings when I&#8217;m getting ready for work.</p>\n<p>It turns out there is a name for this type of antenna; NotTheDude was describing a whip antenna.</p>\n<p>Here&#8217;s where my post becomes really technical. I&#8217;ll skip over most of the <a href=\"http://www.antenna-theory.com/basics/frequency.php\" target=\"_blank\" rel=\"external\">physics</a>, but you need to understand that each channel is a different frequency that is unrelated to the &#8220;virtual channel&#8221; that is displayed on your TV. You also need to understand that the length of the &#8220;whip&#8221; is directly related to the channel that it can receive. A whip antenna doesn&#8217;t amplify the the signal it receives but the coax cable will lose signal strength over long runs (4-6dB over 100 feet), so you want to keep the cable as short as possible.</p>\n<p>Tvfool.com lets you enter your address and it will show the channels you can receive. It also shows the signal strength for each channel at your location. If you enter the height of the antenna above ground, then the signal indication will be more accurate. The channels I wanted to receive were all rated at 50dB or higher and to receive the channel it needs to be greater than 0dB once you account for signal gains and loss by your antenna, coax, splitters, and amplifiers. Using NotTheDude&#8217;s advice I cut the whip to 8&#8243;, which as it turns out is perfect for receiving the upper end of UHF. The channel I wanted to receive was #50, which is the upper end of the UHF frequencies. I tested another whip of 12&#8243; and was able to receive a channel at the lower end, but not both. The third channel I could not receive no matter the length.</p>\n<p>I still couldn&#8217;t receive the VHF channel. I did some more research, and you can calculate the exact length of the whip for the channel you want to receive. You need to look up the physical channel number (not the virtual ##.# channel the TV displays) to get <a href=\"https://en.wikipedia.org/wiki/North_American_television_frequencies#UHF_band\" target=\"_blank\" rel=\"external\">the frequency</a>. You then enter the frequency in this <a href=\"http://www.csgnetwork.com/antennagenericfreqlencalc.html\" target=\"_blank\" rel=\"external\">calculator</a> to get the whip length for the half wavelength. The whip length for UHF ranges from around 12&#8243; for the lower frequencies to around 8&#8243; for the higher frequencies. If I wanted to pick up the VHF channel to get PBS, then according to that calculator, I would need a whip length of 30&#8243;&#8230; um, no thanks. That means I&#8217;d need a signal combiner that won&#8217;t cause interference between the two whips.</p>\n<p>I tried a 12&#8243; whip antenna on my upstairs TV and found that I was able to pick up all three UHF stations. That was much easier than building another double bowtie antenna! The one channel on the higher frequency was powerful enough to force its way onto the longer antenna.</p>\n<p>So&#8230; if a 12&#8243; whip can pick up all three UHF stations on the second floor (around 25&#8242; &#8211; 30&#8242; above ground level), then maybe I could move the whip in my bathroom up to the attic to pick them all up. The problem might be dB loss in the 30&#8242; of coax. I found a <a href=\"http://www.w4rp.com/ref/coax.html\" target=\"_blank\" rel=\"external\">table that shows dB loss in coax</a>. It shows for RG-6 (standard tv cable) between 4dB and 6dB loss for 100&#8242; depending on the channel frequency. That means I should expect between 1dB to 2dB loss. Tvfool.com showed that I should have plenty of signal strength, so up to the attic I went. I spliced into the existing cable and used a <a href=\"http://smile.amazon.com/Splice-F-81-Adapter-DC-3GHz/dp/B008R3J4QS/ref=sr_1_2?ie=UTF8&amp;qid=1453077536&amp;sr=8-2&amp;keywords=rg-6+coupler\" target=\"_blank\" rel=\"external\">coupler</a> to install a 12&#8243; whip at about 30&#8242; above ground level with about 30&#8242; of coax cable connecting it to the TV.</p>\n<p>The setup worked perfectly and I can now receive CBS, ABC, NBC, FOX, and CW on all my TVs and capture cards.</p>\n<div class=\"comment-body\"><br>  <p><br>    &nbsp;<br>  </p><br></div>\n\n","excerpt":"<p>My cable internet provider recently switched to all digital channels so that they could encrypt local broadcasts. This put me in a bit of a bind since all my TVs were using built-in QAM tuners to get local stations. I needed to supply signals to three TVs and two <a href=\"http://smile.amazon.com/Hauppauge-1213-WinTV-HVR-2255-Control-Receiver/dp/B001E2V7R8\" target=\"_blank\">HDTV capture cards</a> on my <a href=\"https://en.wikipedia.org/wiki/Home_theater_PC\" target=\"_blank\">HTPC</a>.</p>\n<p>My options were, pay $3/month/tv to the cable company for digital boxes to get &#8220;free&#8221; OTA (over the air) broadcasts or pay $70 for a <a href=\"http://smile.amazon.com/gp/product/B00CXQO00K?psc=1&redirect=true&ref_=ox_sc_sfl_title_1&smid=ATVPDKIKX0DER\" target=\"_blank\">high-end HDTV antenna</a> plus an <a href=\"http://smile.amazon.com/DuaFire-Antenna-Amplifier-Booster-Supply-up/dp/B0196AN9WU/ref=sr_1_1?ie=UTF8&qid=1453048463&sr=8-1&keywords=antenna+amplifier\" target=\"_blank\">amplifier</a> and <a href=\"http://smile.amazon.com/BAMF-4-Way-Splitter-Bi-Directional-5-2300MHz/dp/B017T9KF1S/ref=sr_1_1?s=electronics&ie=UTF8&qid=1453049025&sr=1-1&keywords=4+way+catv+splitter\" target=\"_blank\">splitter</a> or <a href=\"http://smile.amazon.com/dp/B001222256?psc=1\" target=\"_blank\">amplified splitter</a> and rewire my house to hook the antenna up to all my TVs while still allowing my cable internet to get to my cable modem.</p>\n<p>Neither option seemed appealing to me.</p>","more":"<hr>\n<p>Then I stumbled upon a <a href=\"http://www.instructables.com/id/Powerful-Modern-Homemade-HDTV-Antenna/\" target=\"_blank\">homemade HDTV antenna</a> project that looked very interesting. It had a link to the <a href=\"http://hubpages.com/art/make-this-powerful-hdtv-antenna-out-of-cardboard\" target=\"_blank\">original PDF template</a> that you can print out on legal paper. The project was simple enough that I decided to give it a go. I already had cardboard, aluminum foil, model/craft glue, a box cutter, an exacto knife, and a printer. I used to have a balun lying around, but it got thrown out during spring cleaning a few years back.</p>\n<p>The antenna took about 2 hours to build. It is important to follow the template exactly because the size is very important to receive HDTV signals. After spending all evening building a single antenna I still had to get a <a href=\"http://smile.amazon.com/300-Ohm-UHF-Matching-Transformer/dp/B0002ZPIOG/ref=sr_1_2?ie=UTF8&amp;qid=1453561976&amp;sr=8-2&amp;keywords=balun\">balun</a>. Here&#8217;s the result:</p>\n<div id=\"attachment_155\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>  <a href=\"/images/2016/01/Antenna_1.jpg\" rel=\"attachment wp-att-155\"><img class=\"wp-image-155 size-full\" src=\"/images/2016/01/Antenna_1.jpeg\" alt=\"Double Bowtie Antenna\" width=\"180\" height=\"240\" /></a><br><br>  <p class=\"wp-caption-text\"><br>    Double Bowtie Antenna<br>  </p><br></div>\n\n<div id=\"attachment_156\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>  <a href=\"/images/2016/01/Antenna_2.jpg\" rel=\"attachment wp-att-156\"><img class=\"wp-image-156 size-full\" src=\"/images/2016/01/Antenna_2.jpeg\" alt=\"Double Bowtie Reflector\" width=\"180\" height=\"240\" /></a><br><br>  <p class=\"wp-caption-text\"><br>    Double Bowtie Reflector<br>  </p><br></div>\n\n<p>According to <a href=\"http://www.tvfool.com/\">tvfool.com</a> I should be able to get three UHF channels (NBC, ABC, and CBS) and one VHF channel (PBS). Fox and CW are broadcast as virtual channels on two of the UHF channels, so they don&#8217;t show up on tvfool. The double bowtie antenna is able to pick up all three UHF channels but not the VHF channel. I had to place it about 4 feet off the ground and angle it to pick up one of the channels. Another channel is powerful enough to pick it up even though it is located behind the reflector. I connected the antenna to a 4-way spitter that feeds my two capture cards and one of my TVs. The splitter isn&#8217;t powered or amplified, so the output is 25% of the input, but the signal from the antenna is still powerful enough to feed all three channels to all three consumers clearly.</p>\n<p>That&#8217;s an impressive antenna!</p>\n<hr>\n<p>I returned to the instructables site to see if there were any easier antenna builds. I stumbled on this comment:</p>\n<blockquote>\n<div class=\"comment-header\"><br>  <span class=\"comment-author\"><a class=\"author-link pro\" href=\"http://www.instructables.com/member/NotTheDude\">NotTheDude</a></span><a class=\"action btn btn-mini pull-right replyToCommentBtn login-required\">Reply</a><span class=\"comment-date pull-right comment-info\">3 years ago</span><br></div>\n\n<div class=\"comment-body-container\"><br>  <div class=\"comment-body\"><br>    <p><br>      It may not look as cool as this or other homemade HDTV antennas, but you can save yourself the cost of buying anything new and the work it takes to put one of these things together by simply taking a spare coaxial cable and cutting about 8 inches of insulation off the end so you have the center wire exposed. Then move it around until you get the best reception. You will not believe it until you try it, but this works better than any other antenna I have ever used for over-the-air digital TV.<br>    </p><br><br>    <p><br>      I have tried every antenna possible from dollar store 10 buck antennas to $50 Phillips HDTV indoor/outdoor antenna and the bare wire works better than them all (even when I put the $50 antenna on my roof). I have removed the insulation from about a dozen or so coaxial cables for friends and families over the past 4 years and they are all still using them because they work better than anything else.they have bought themselves.<br>    </p><br><br>    <p><br>      I would make an indestructible for this, but it&#8217;s so easy I couldn&#8217;t explain it any better except to take a picture of it. I will say that it can be hard to slide the entire 8 inches of insulation off the end all at once so just cut an inch or two of the insulation at a time and it comes off pretty easily.<br>    </p><br><br>    <p><br>      Try it and you will be surprised how well it works. What do you have to lose?<br>    </p><br>  </div><br></div>\n\n</blockquote>\n<div class=\"comment-body\"><br>  <strong>Wow</strong>! That is a <strong>lot</strong> easier than a two hour build. I gave that a shot on the TV in my bathroom.<br></div>\n\n<div class=\"comment-body\"><br>  <div id=\"attachment_157\" style=\"width: 190px\" class=\"wp-caption alignleft\"><br>    <a href=\"/images/2016/01/Antenna_3.jpg\" rel=\"attachment wp-att-157\"><img class=\"wp-image-157 size-full\" src=\"/images/2016/01/Antenna_3.jpeg\" alt=\"Whip Antenna\" width=\"180\" height=\"240\" /></a><br><br>    <p class=\"wp-caption-text\"><br>      Whip Antenna<br>    </p><br>  </div><br></div>\n\n<p>I was only able to pick up one channel with two stations, but it was the one channel that I want to watch in the mornings when I&#8217;m getting ready for work.</p>\n<p>It turns out there is a name for this type of antenna; NotTheDude was describing a whip antenna.</p>\n<p>Here&#8217;s where my post becomes really technical. I&#8217;ll skip over most of the <a href=\"http://www.antenna-theory.com/basics/frequency.php\">physics</a>, but you need to understand that each channel is a different frequency that is unrelated to the &#8220;virtual channel&#8221; that is displayed on your TV. You also need to understand that the length of the &#8220;whip&#8221; is directly related to the channel that it can receive. A whip antenna doesn&#8217;t amplify the the signal it receives but the coax cable will lose signal strength over long runs (4-6dB over 100 feet), so you want to keep the cable as short as possible.</p>\n<p>Tvfool.com lets you enter your address and it will show the channels you can receive. It also shows the signal strength for each channel at your location. If you enter the height of the antenna above ground, then the signal indication will be more accurate. The channels I wanted to receive were all rated at 50dB or higher and to receive the channel it needs to be greater than 0dB once you account for signal gains and loss by your antenna, coax, splitters, and amplifiers. Using NotTheDude&#8217;s advice I cut the whip to 8&#8243;, which as it turns out is perfect for receiving the upper end of UHF. The channel I wanted to receive was #50, which is the upper end of the UHF frequencies. I tested another whip of 12&#8243; and was able to receive a channel at the lower end, but not both. The third channel I could not receive no matter the length.</p>\n<p>I still couldn&#8217;t receive the VHF channel. I did some more research, and you can calculate the exact length of the whip for the channel you want to receive. You need to look up the physical channel number (not the virtual ##.# channel the TV displays) to get <a href=\"https://en.wikipedia.org/wiki/North_American_television_frequencies#UHF_band\">the frequency</a>. You then enter the frequency in this <a href=\"http://www.csgnetwork.com/antennagenericfreqlencalc.html\">calculator</a> to get the whip length for the half wavelength. The whip length for UHF ranges from around 12&#8243; for the lower frequencies to around 8&#8243; for the higher frequencies. If I wanted to pick up the VHF channel to get PBS, then according to that calculator, I would need a whip length of 30&#8243;&#8230; um, no thanks. That means I&#8217;d need a signal combiner that won&#8217;t cause interference between the two whips.</p>\n<p>I tried a 12&#8243; whip antenna on my upstairs TV and found that I was able to pick up all three UHF stations. That was much easier than building another double bowtie antenna! The one channel on the higher frequency was powerful enough to force its way onto the longer antenna.</p>\n<p>So&#8230; if a 12&#8243; whip can pick up all three UHF stations on the second floor (around 25&#8242; &#8211; 30&#8242; above ground level), then maybe I could move the whip in my bathroom up to the attic to pick them all up. The problem might be dB loss in the 30&#8242; of coax. I found a <a href=\"http://www.w4rp.com/ref/coax.html\">table that shows dB loss in coax</a>. It shows for RG-6 (standard tv cable) between 4dB and 6dB loss for 100&#8242; depending on the channel frequency. That means I should expect between 1dB to 2dB loss. Tvfool.com showed that I should have plenty of signal strength, so up to the attic I went. I spliced into the existing cable and used a <a href=\"http://smile.amazon.com/Splice-F-81-Adapter-DC-3GHz/dp/B008R3J4QS/ref=sr_1_2?ie=UTF8&amp;qid=1453077536&amp;sr=8-2&amp;keywords=rg-6+coupler\">coupler</a> to install a 12&#8243; whip at about 30&#8242; above ground level with about 30&#8242; of coax cable connecting it to the TV.</p>\n<p>The setup worked perfectly and I can now receive CBS, ABC, NBC, FOX, and CW on all my TVs and capture cards.</p>\n<div class=\"comment-body\"><br>  <p><br>    &nbsp;<br>  </p><br></div>"},{"title":"Sheri Pym should be disbarred and brought up on charges of gross negligence","author":"nathan","type":"post","date":"2016-03-01T19:25:41.000Z","url":"/sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence/","comments":1,"nkweb_code_in_head":["default"],"nkweb_Use_Custom_js":["default"],"nkweb_Use_Custom_Values":["default"],"nkweb_Use_Custom":["false"],"_content":"The greatest victory that the anti-freedom, anti-american terrorists won on September 11th, 2001 wasn&#8217;t the horrible death of almost 3,000 innocent victims. It was handing the keys to destroy the liberties of all Americans to our own government.\n\n<!--more-->\n\n#### Magic Trump Card\n\nLike a child learning to say &#8220;please&#8221;, the US government has learned that the word &#8220;terrorism&#8221; is a magic trump card that will get them anything they desire. Wether it be through specific anti-american legislation like the ironically named &#8220;Patriot Act&#8221; or by extremely broad and historically inaccurate interpretations of the &#8220;All Writs Act&#8221; the government has granted itself powers that run contrary to the constitution to such a degree that the founding fathers would surely revolt were they around today. But like boiling a frog the powers that be have eroded our constitutional rights so slowly that no one has taken notice. And they have done it all in the name of stopping terrorism.\n\nMost likely these government agents have the best intentions. Hopefully they will never misuse or abuse that power. But how can the citizens trust a government that doesn&#8217;t trust its citizens? Should we really believe that every bureaucrat in the cog only has the best interests of the American citizens at heart? We would be fools if we did.\n\nAmerica was not founded on the idea that we trust government to do what&#8217;s best for us. America is founded on the idea of personal responsibility and personal control. The minute we turn over the keys to our lives to the government is the minute we cease being American citizens and start being wards of the state to be used and abused at its leisure.\n\n#### The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare\n\nSo what&#8217;s the big deal? I can run my own life, why should I worry about the Government phone calls, hacking my cell phone, or any of the other rights they are violating without me knowing? For one, once the US government has that data, you can safely assume the Chinese government has it and every hacker, scammer, and phisher has it as well. Why? Well, the US [OPM was hacked and over 22 million people&#8217;s personal information was leaked][1]. A [US arrest records database was hacked and information released][2]. A fucking **4-year old** [hacked the FBI][3]. And of course the [IRS was also hacked][4].\n\nIf the FBI can&#8217;t protect itself from a 4-year old, how can it protect itself from China or professional hackers? It can&#8217;t. The US intelligence services were conceived, created, and refined it the era of cold-war, boots-on-the-ground and spy satellite pictures information gathering. They have not transitioned to thinking in terms of digital networks nor systemically can they. They are locked-in, all-in, doubled-down on their outdated intelligence methods and until sweeping changes are made, they will fail to adapt to the era of information technology. John McAfee pointed out beautifully that [the US government is unwilling to hire the people necessary to protect us from cyberattacks][5]. What our current leadership doesn&#8217;t understand is that you can&#8217;t fight cyber-warfare with diplomacy and actual warfare. The FBI and the rest of the government will continue to get hacked and leak information like a sieve because they do not know how to not get hacked.\n\n#### Enter Sheri Pym\n\nSo, what does all of this have to do with Sheri Pym? The FBI wants Apple Inc. to create a back-door so they can decrypt and unlock any iPhone in existence. Clearly this is in line with their obscene constitutional overreach and their driving desire to violate the constitutional rights of every single American. The FBI has no constitutional ground for possessing a tool that will allow it to invade the rights of every American without so much as a warrant. Every single technical and security expert has said this is a bad idea. We know from past experiences that once the FBI has this tool every criminal and foreign government will also have this tool. But [Sheri Pym ignores all this because terrorism][6]. The FBI says &#8220;terrorism&#8221; and Sheri Pym says &#8220;how high?&#8221;. Clearly Sheri Pym doesn&#8217;t understand the technical and security questions involved, so why didn&#8217;t she either educate or recuse herself?\n\nThe FBI has proven time and again that it can&#8217;t protect itself from the simplest of hacking, so granting it a tool that can invade the personal information of millions of Americans against the advice of every security expert on the planet isn&#8217;t just obtuse, it gross negligence and criminal incompetence of the highest order.\n\n&nbsp;\n\n [1]: https://www.washingtonpost.com/news/federal-eye/wp/2015/07/09/hack-of-security-clearance-system-affected-21-5-million-people-federal-authorities-say/\n [2]: http://www.engadget.com/2015/11/06/us-arrest-record-database-hack/\n [3]: http://worldnewsdailyreport.com/usa-4-year-old-boy-accused-of-hacking-fbi-database/\n [4]: http://time.com/4000659/irs-taxpayer-hacked-cybercrime/\n [5]: http://www.businessinsider.com/john-mcafee-ill-decrypt-san-bernardino-phone-for-free-2016-2\n [6]: http://www.wired.com/2016/02/magistrate-orders-apple-to-help-fbi-hack-phone-of-san-bernardino-shooter/\n","source":"_posts/2016-03-01-sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence.md","raw":"---\ntitle: Sheri Pym should be disbarred and brought up on charges of gross negligence\nauthor: nathan\ntype: post\ndate: 2016-03-01T13:25:41+00:00\nurl: /sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence/\ncomments: true\nnkweb_code_in_head:\n  - default\nnkweb_Use_Custom_js:\n  - default\nnkweb_Use_Custom_Values:\n  - default\nnkweb_Use_Custom:\n  - 'false'\ncategories:\n  - Rant\n  - Security\n\n---\nThe greatest victory that the anti-freedom, anti-american terrorists won on September 11th, 2001 wasn&#8217;t the horrible death of almost 3,000 innocent victims. It was handing the keys to destroy the liberties of all Americans to our own government.\n\n<!--more-->\n\n#### Magic Trump Card\n\nLike a child learning to say &#8220;please&#8221;, the US government has learned that the word &#8220;terrorism&#8221; is a magic trump card that will get them anything they desire. Wether it be through specific anti-american legislation like the ironically named &#8220;Patriot Act&#8221; or by extremely broad and historically inaccurate interpretations of the &#8220;All Writs Act&#8221; the government has granted itself powers that run contrary to the constitution to such a degree that the founding fathers would surely revolt were they around today. But like boiling a frog the powers that be have eroded our constitutional rights so slowly that no one has taken notice. And they have done it all in the name of stopping terrorism.\n\nMost likely these government agents have the best intentions. Hopefully they will never misuse or abuse that power. But how can the citizens trust a government that doesn&#8217;t trust its citizens? Should we really believe that every bureaucrat in the cog only has the best interests of the American citizens at heart? We would be fools if we did.\n\nAmerica was not founded on the idea that we trust government to do what&#8217;s best for us. America is founded on the idea of personal responsibility and personal control. The minute we turn over the keys to our lives to the government is the minute we cease being American citizens and start being wards of the state to be used and abused at its leisure.\n\n#### The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare\n\nSo what&#8217;s the big deal? I can run my own life, why should I worry about the Government phone calls, hacking my cell phone, or any of the other rights they are violating without me knowing? For one, once the US government has that data, you can safely assume the Chinese government has it and every hacker, scammer, and phisher has it as well. Why? Well, the US [OPM was hacked and over 22 million people&#8217;s personal information was leaked][1]. A [US arrest records database was hacked and information released][2]. A fucking **4-year old** [hacked the FBI][3]. And of course the [IRS was also hacked][4].\n\nIf the FBI can&#8217;t protect itself from a 4-year old, how can it protect itself from China or professional hackers? It can&#8217;t. The US intelligence services were conceived, created, and refined it the era of cold-war, boots-on-the-ground and spy satellite pictures information gathering. They have not transitioned to thinking in terms of digital networks nor systemically can they. They are locked-in, all-in, doubled-down on their outdated intelligence methods and until sweeping changes are made, they will fail to adapt to the era of information technology. John McAfee pointed out beautifully that [the US government is unwilling to hire the people necessary to protect us from cyberattacks][5]. What our current leadership doesn&#8217;t understand is that you can&#8217;t fight cyber-warfare with diplomacy and actual warfare. The FBI and the rest of the government will continue to get hacked and leak information like a sieve because they do not know how to not get hacked.\n\n#### Enter Sheri Pym\n\nSo, what does all of this have to do with Sheri Pym? The FBI wants Apple Inc. to create a back-door so they can decrypt and unlock any iPhone in existence. Clearly this is in line with their obscene constitutional overreach and their driving desire to violate the constitutional rights of every single American. The FBI has no constitutional ground for possessing a tool that will allow it to invade the rights of every American without so much as a warrant. Every single technical and security expert has said this is a bad idea. We know from past experiences that once the FBI has this tool every criminal and foreign government will also have this tool. But [Sheri Pym ignores all this because terrorism][6]. The FBI says &#8220;terrorism&#8221; and Sheri Pym says &#8220;how high?&#8221;. Clearly Sheri Pym doesn&#8217;t understand the technical and security questions involved, so why didn&#8217;t she either educate or recuse herself?\n\nThe FBI has proven time and again that it can&#8217;t protect itself from the simplest of hacking, so granting it a tool that can invade the personal information of millions of Americans against the advice of every security expert on the planet isn&#8217;t just obtuse, it gross negligence and criminal incompetence of the highest order.\n\n&nbsp;\n\n [1]: https://www.washingtonpost.com/news/federal-eye/wp/2015/07/09/hack-of-security-clearance-system-affected-21-5-million-people-federal-authorities-say/\n [2]: http://www.engadget.com/2015/11/06/us-arrest-record-database-hack/\n [3]: http://worldnewsdailyreport.com/usa-4-year-old-boy-accused-of-hacking-fbi-database/\n [4]: http://time.com/4000659/irs-taxpayer-hacked-cybercrime/\n [5]: http://www.businessinsider.com/john-mcafee-ill-decrypt-san-bernardino-phone-for-free-2016-2\n [6]: http://www.wired.com/2016/02/magistrate-orders-apple-to-help-fbi-hack-phone-of-san-bernardino-shooter/\n","slug":"sheri-pym-should-be-disbarred-and-brought-up-on-charges-of-gross-negligence","published":1,"updated":"2017-04-01T21:23:08.000Z","layout":"post","photos":[],"link":"","_id":"cj11bwhkx000g8buyrdtmshtx","content":"<p>The greatest victory that the anti-freedom, anti-american terrorists won on September 11th, 2001 wasn&#8217;t the horrible death of almost 3,000 innocent victims. It was handing the keys to destroy the liberties of all Americans to our own government.</p>\n<a id=\"more\"></a>\n<h4 id=\"Magic-Trump-Card\"><a href=\"#Magic-Trump-Card\" class=\"headerlink\" title=\"Magic Trump Card\"></a>Magic Trump Card</h4><p>Like a child learning to say &#8220;please&#8221;, the US government has learned that the word &#8220;terrorism&#8221; is a magic trump card that will get them anything they desire. Wether it be through specific anti-american legislation like the ironically named &#8220;Patriot Act&#8221; or by extremely broad and historically inaccurate interpretations of the &#8220;All Writs Act&#8221; the government has granted itself powers that run contrary to the constitution to such a degree that the founding fathers would surely revolt were they around today. But like boiling a frog the powers that be have eroded our constitutional rights so slowly that no one has taken notice. And they have done it all in the name of stopping terrorism.</p>\n<p>Most likely these government agents have the best intentions. Hopefully they will never misuse or abuse that power. But how can the citizens trust a government that doesn&#8217;t trust its citizens? Should we really believe that every bureaucrat in the cog only has the best interests of the American citizens at heart? We would be fools if we did.</p>\n<p>America was not founded on the idea that we trust government to do what&#8217;s best for us. America is founded on the idea of personal responsibility and personal control. The minute we turn over the keys to our lives to the government is the minute we cease being American citizens and start being wards of the state to be used and abused at its leisure.</p>\n<h4 id=\"The-US-Goverment-doesn-8217-t-understand-cybersecurity-cyber-terrorism-or-cyber-warfare\"><a href=\"#The-US-Goverment-doesn-8217-t-understand-cybersecurity-cyber-terrorism-or-cyber-warfare\" class=\"headerlink\" title=\"The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare\"></a>The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare</h4><p>So what&#8217;s the big deal? I can run my own life, why should I worry about the Government phone calls, hacking my cell phone, or any of the other rights they are violating without me knowing? For one, once the US government has that data, you can safely assume the Chinese government has it and every hacker, scammer, and phisher has it as well. Why? Well, the US <a href=\"https://www.washingtonpost.com/news/federal-eye/wp/2015/07/09/hack-of-security-clearance-system-affected-21-5-million-people-federal-authorities-say/\" target=\"_blank\" rel=\"external\">OPM was hacked and over 22 million people&#8217;s personal information was leaked</a>. A <a href=\"http://www.engadget.com/2015/11/06/us-arrest-record-database-hack/\" target=\"_blank\" rel=\"external\">US arrest records database was hacked and information released</a>. A fucking <strong>4-year old</strong> <a href=\"http://worldnewsdailyreport.com/usa-4-year-old-boy-accused-of-hacking-fbi-database/\" target=\"_blank\" rel=\"external\">hacked the FBI</a>. And of course the <a href=\"http://time.com/4000659/irs-taxpayer-hacked-cybercrime/\" target=\"_blank\" rel=\"external\">IRS was also hacked</a>.</p>\n<p>If the FBI can&#8217;t protect itself from a 4-year old, how can it protect itself from China or professional hackers? It can&#8217;t. The US intelligence services were conceived, created, and refined it the era of cold-war, boots-on-the-ground and spy satellite pictures information gathering. They have not transitioned to thinking in terms of digital networks nor systemically can they. They are locked-in, all-in, doubled-down on their outdated intelligence methods and until sweeping changes are made, they will fail to adapt to the era of information technology. John McAfee pointed out beautifully that <a href=\"http://www.businessinsider.com/john-mcafee-ill-decrypt-san-bernardino-phone-for-free-2016-2\" target=\"_blank\" rel=\"external\">the US government is unwilling to hire the people necessary to protect us from cyberattacks</a>. What our current leadership doesn&#8217;t understand is that you can&#8217;t fight cyber-warfare with diplomacy and actual warfare. The FBI and the rest of the government will continue to get hacked and leak information like a sieve because they do not know how to not get hacked.</p>\n<h4 id=\"Enter-Sheri-Pym\"><a href=\"#Enter-Sheri-Pym\" class=\"headerlink\" title=\"Enter Sheri Pym\"></a>Enter Sheri Pym</h4><p>So, what does all of this have to do with Sheri Pym? The FBI wants Apple Inc. to create a back-door so they can decrypt and unlock any iPhone in existence. Clearly this is in line with their obscene constitutional overreach and their driving desire to violate the constitutional rights of every single American. The FBI has no constitutional ground for possessing a tool that will allow it to invade the rights of every American without so much as a warrant. Every single technical and security expert has said this is a bad idea. We know from past experiences that once the FBI has this tool every criminal and foreign government will also have this tool. But <a href=\"http://www.wired.com/2016/02/magistrate-orders-apple-to-help-fbi-hack-phone-of-san-bernardino-shooter/\" target=\"_blank\" rel=\"external\">Sheri Pym ignores all this because terrorism</a>. The FBI says &#8220;terrorism&#8221; and Sheri Pym says &#8220;how high?&#8221;. Clearly Sheri Pym doesn&#8217;t understand the technical and security questions involved, so why didn&#8217;t she either educate or recuse herself?</p>\n<p>The FBI has proven time and again that it can&#8217;t protect itself from the simplest of hacking, so granting it a tool that can invade the personal information of millions of Americans against the advice of every security expert on the planet isn&#8217;t just obtuse, it gross negligence and criminal incompetence of the highest order.</p>\n<p>&nbsp;</p>\n","excerpt":"<p>The greatest victory that the anti-freedom, anti-american terrorists won on September 11th, 2001 wasn&#8217;t the horrible death of almost 3,000 innocent victims. It was handing the keys to destroy the liberties of all Americans to our own government.</p>","more":"<h4 id=\"Magic-Trump-Card\"><a href=\"#Magic-Trump-Card\" class=\"headerlink\" title=\"Magic Trump Card\"></a>Magic Trump Card</h4><p>Like a child learning to say &#8220;please&#8221;, the US government has learned that the word &#8220;terrorism&#8221; is a magic trump card that will get them anything they desire. Wether it be through specific anti-american legislation like the ironically named &#8220;Patriot Act&#8221; or by extremely broad and historically inaccurate interpretations of the &#8220;All Writs Act&#8221; the government has granted itself powers that run contrary to the constitution to such a degree that the founding fathers would surely revolt were they around today. But like boiling a frog the powers that be have eroded our constitutional rights so slowly that no one has taken notice. And they have done it all in the name of stopping terrorism.</p>\n<p>Most likely these government agents have the best intentions. Hopefully they will never misuse or abuse that power. But how can the citizens trust a government that doesn&#8217;t trust its citizens? Should we really believe that every bureaucrat in the cog only has the best interests of the American citizens at heart? We would be fools if we did.</p>\n<p>America was not founded on the idea that we trust government to do what&#8217;s best for us. America is founded on the idea of personal responsibility and personal control. The minute we turn over the keys to our lives to the government is the minute we cease being American citizens and start being wards of the state to be used and abused at its leisure.</p>\n<h4 id=\"The-US-Goverment-doesn-8217-t-understand-cybersecurity-cyber-terrorism-or-cyber-warfare\"><a href=\"#The-US-Goverment-doesn-8217-t-understand-cybersecurity-cyber-terrorism-or-cyber-warfare\" class=\"headerlink\" title=\"The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare\"></a>The US Goverment doesn&#8217;t understand cybersecurity, cyber-terrorism, or cyber-warfare</h4><p>So what&#8217;s the big deal? I can run my own life, why should I worry about the Government phone calls, hacking my cell phone, or any of the other rights they are violating without me knowing? For one, once the US government has that data, you can safely assume the Chinese government has it and every hacker, scammer, and phisher has it as well. Why? Well, the US <a href=\"https://www.washingtonpost.com/news/federal-eye/wp/2015/07/09/hack-of-security-clearance-system-affected-21-5-million-people-federal-authorities-say/\">OPM was hacked and over 22 million people&#8217;s personal information was leaked</a>. A <a href=\"http://www.engadget.com/2015/11/06/us-arrest-record-database-hack/\">US arrest records database was hacked and information released</a>. A fucking <strong>4-year old</strong> <a href=\"http://worldnewsdailyreport.com/usa-4-year-old-boy-accused-of-hacking-fbi-database/\">hacked the FBI</a>. And of course the <a href=\"http://time.com/4000659/irs-taxpayer-hacked-cybercrime/\">IRS was also hacked</a>.</p>\n<p>If the FBI can&#8217;t protect itself from a 4-year old, how can it protect itself from China or professional hackers? It can&#8217;t. The US intelligence services were conceived, created, and refined it the era of cold-war, boots-on-the-ground and spy satellite pictures information gathering. They have not transitioned to thinking in terms of digital networks nor systemically can they. They are locked-in, all-in, doubled-down on their outdated intelligence methods and until sweeping changes are made, they will fail to adapt to the era of information technology. John McAfee pointed out beautifully that <a href=\"http://www.businessinsider.com/john-mcafee-ill-decrypt-san-bernardino-phone-for-free-2016-2\">the US government is unwilling to hire the people necessary to protect us from cyberattacks</a>. What our current leadership doesn&#8217;t understand is that you can&#8217;t fight cyber-warfare with diplomacy and actual warfare. The FBI and the rest of the government will continue to get hacked and leak information like a sieve because they do not know how to not get hacked.</p>\n<h4 id=\"Enter-Sheri-Pym\"><a href=\"#Enter-Sheri-Pym\" class=\"headerlink\" title=\"Enter Sheri Pym\"></a>Enter Sheri Pym</h4><p>So, what does all of this have to do with Sheri Pym? The FBI wants Apple Inc. to create a back-door so they can decrypt and unlock any iPhone in existence. Clearly this is in line with their obscene constitutional overreach and their driving desire to violate the constitutional rights of every single American. The FBI has no constitutional ground for possessing a tool that will allow it to invade the rights of every American without so much as a warrant. Every single technical and security expert has said this is a bad idea. We know from past experiences that once the FBI has this tool every criminal and foreign government will also have this tool. But <a href=\"http://www.wired.com/2016/02/magistrate-orders-apple-to-help-fbi-hack-phone-of-san-bernardino-shooter/\">Sheri Pym ignores all this because terrorism</a>. The FBI says &#8220;terrorism&#8221; and Sheri Pym says &#8220;how high?&#8221;. Clearly Sheri Pym doesn&#8217;t understand the technical and security questions involved, so why didn&#8217;t she either educate or recuse herself?</p>\n<p>The FBI has proven time and again that it can&#8217;t protect itself from the simplest of hacking, so granting it a tool that can invade the personal information of millions of Americans against the advice of every security expert on the planet isn&#8217;t just obtuse, it gross negligence and criminal incompetence of the highest order.</p>\n<p>&nbsp;</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj11bwhkk00098buy8n4um7mu","category_id":"cj11bwhkh00078buyh3fhgvb0","_id":"cj11bwhkx000f8buyhpl06nxr"},{"post_id":"cj11bwhkv000d8buyp4r8gf0t","category_id":"cj11bwhkh00078buyh3fhgvb0","_id":"cj11bwhl0000k8buyggpjois1"},{"post_id":"cj11bwhkc00048buyvnvkvv7y","category_id":"cj11bwhkt000b8buytvpcrs55","_id":"cj11bwhl1000l8buy3xu2sk7v"},{"post_id":"cj11bwhkd00058buydblnax90","category_id":"cj11bwhk900028buyiijuj91x","_id":"cj11bwhl4000p8buy80w82ldr"},{"post_id":"cj11bwhkd00058buydblnax90","category_id":"cj11bwhkz000i8buyit1dilqi","_id":"cj11bwhl5000t8buy0n57xd7d"},{"post_id":"cj11bwhko000a8buyp0j0pe92","category_id":"cj11bwhla000y8buyy9hbh8z8","_id":"cj11bwhlg00138buyyxzcmuj1"},{"post_id":"cj11bwhk200008buy15z8cd2a","category_id":"cj11bwhk900028buyiijuj91x","_id":"cj11bwhlj001c8buywnizffxf"},{"post_id":"cj11bwhk200008buy15z8cd2a","category_id":"cj11bwhkz000i8buyit1dilqi","_id":"cj11bwhll001g8buy7i3xwtr0"},{"post_id":"cj11bwhk200008buy15z8cd2a","category_id":"cj11bwhlg00158buyikqzyo04","_id":"cj11bwhlm001i8buyxbiohkka"},{"post_id":"cj11bwhkg00068buyngdb1l1k","category_id":"cj11bwhk900028buyiijuj91x","_id":"cj11bwhln001l8buyox9v6iyi"},{"post_id":"cj11bwhkg00068buyngdb1l1k","category_id":"cj11bwhkz000i8buyit1dilqi","_id":"cj11bwhlo001m8buyof2e23zg"},{"post_id":"cj11bwhkg00068buyngdb1l1k","category_id":"cj11bwhli00198buy3wuz69m4","_id":"cj11bwhlo001o8buynsuyllsi"},{"post_id":"cj11bwhk600018buyxb6iy87b","category_id":"cj11bwhkh00078buyh3fhgvb0","_id":"cj11bwhlp001p8buy5ts9fj87"},{"post_id":"cj11bwhk600018buyxb6iy87b","category_id":"cj11bwhl6000u8buyo4vjdmfc","_id":"cj11bwhlp001q8buyq71twnpa"},{"post_id":"cj11bwhk600018buyxb6iy87b","category_id":"cj11bwhll001e8buykh82bvam","_id":"cj11bwhlq001s8buyfuxv2i5a"},{"post_id":"cj11bwhkx000g8buyrdtmshtx","category_id":"cj11bwhla000y8buyy9hbh8z8","_id":"cj11bwhlr001t8buybmgmfila"},{"post_id":"cj11bwhkx000g8buyrdtmshtx","category_id":"cj11bwhln001k8buyi1gb62ha","_id":"cj11bwhlr001u8buyrus748wf"}],"PostTag":[{"post_id":"cj11bwhk200008buy15z8cd2a","tag_id":"cj11bwhkb00038buyvdtjzt3g","_id":"cj11bwhkw000e8buyoz14dnxp"},{"post_id":"cj11bwhk200008buy15z8cd2a","tag_id":"cj11bwhki00088buy47hctrga","_id":"cj11bwhky000h8buyszgez6tb"},{"post_id":"cj11bwhk600018buyxb6iy87b","tag_id":"cj11bwhku000c8buyatyxtf93","_id":"cj11bwhl3000o8buyotibjrfc"},{"post_id":"cj11bwhk600018buyxb6iy87b","tag_id":"cj11bwhkz000j8buygbkbui2i","_id":"cj11bwhl4000q8buy8vhhjjp5"},{"post_id":"cj11bwhkc00048buyvnvkvv7y","tag_id":"cj11bwhku000c8buyatyxtf93","_id":"cj11bwhl7000w8buyui17au39"},{"post_id":"cj11bwhkc00048buyvnvkvv7y","tag_id":"cj11bwhkz000j8buygbkbui2i","_id":"cj11bwhla000x8buygjew9lhv"},{"post_id":"cj11bwhkd00058buydblnax90","tag_id":"cj11bwhkb00038buyvdtjzt3g","_id":"cj11bwhle00128buyzx1wg8hm"},{"post_id":"cj11bwhkd00058buydblnax90","tag_id":"cj11bwhl6000v8buy51woyeif","_id":"cj11bwhlg00148buy7vc2m3ze"},{"post_id":"cj11bwhkd00058buydblnax90","tag_id":"cj11bwhlb000z8buy6a8jin8j","_id":"cj11bwhlh00178buyo0b0m9i3"},{"post_id":"cj11bwhkg00068buyngdb1l1k","tag_id":"cj11bwhkb00038buyvdtjzt3g","_id":"cj11bwhlj001a8buy1jfrrq9t"},{"post_id":"cj11bwhkg00068buyngdb1l1k","tag_id":"cj11bwhl6000v8buy51woyeif","_id":"cj11bwhlj001b8buyb5sv67l6"},{"post_id":"cj11bwhkg00068buyngdb1l1k","tag_id":"cj11bwhlb000z8buy6a8jin8j","_id":"cj11bwhll001f8buyz1aw0ftj"},{"post_id":"cj11bwhkk00098buy8n4um7mu","tag_id":"cj11bwhli00188buyvf73ikqa","_id":"cj11bwhlm001h8buy139a4nwn"},{"post_id":"cj11bwhkv000d8buyp4r8gf0t","tag_id":"cj11bwhlj001d8buy9w99f1u9","_id":"cj11bwhlr001v8buyl42do4eg"},{"post_id":"cj11bwhkv000d8buyp4r8gf0t","tag_id":"cj11bwhln001j8buyfdljy8zd","_id":"cj11bwhlr001w8buyb0xhn37z"},{"post_id":"cj11bwhkv000d8buyp4r8gf0t","tag_id":"cj11bwhlo001n8buy4cxqovw8","_id":"cj11bwhlr001x8buy37wm7ny3"},{"post_id":"cj11bwhkv000d8buyp4r8gf0t","tag_id":"cj11bwhlp001r8buyf5t7o7c5","_id":"cj11bwhls001y8buy0og0wpnq"}],"Tag":[{"name":"JavaScript","_id":"cj11bwhkb00038buyvdtjzt3g"},{"name":"Rant","_id":"cj11bwhki00088buy47hctrga"},{"name":"Image Editing","_id":"cj11bwhku000c8buyatyxtf93"},{"name":"c#","_id":"cj11bwhkz000j8buygbkbui2i"},{"name":"MVVM","_id":"cj11bwhl6000v8buy51woyeif"},{"name":"knockout.js","_id":"cj11bwhlb000z8buy6a8jin8j"},{"name":"android","_id":"cj11bwhli00188buyvf73ikqa"},{"name":"Cable Cutter","_id":"cj11bwhlj001d8buy9w99f1u9"},{"name":"HDTV","_id":"cj11bwhln001j8buyfdljy8zd"},{"name":"TV","_id":"cj11bwhlo001n8buy4cxqovw8"},{"name":"antenna","_id":"cj11bwhlp001r8buyf5t7o7c5"}]}}